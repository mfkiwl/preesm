<?xml version="1.0" encoding="UTF-8"?>
<scenario>
    <files>
        <algorithm url="/org.ietr.preesm.sobel_parallel/Algo/top_display.pi"/>
        <architecture url="/org.ietr.preesm.sobel_parallel/Archi/4CoreX86.slam"/>
        <codegenDirectory url="/org.ietr.preesm.sobel_parallel/Code/generated"/>
    </files>
    <constraints excelUrl="">
        <constraintGroup>
            <operator name="Core0"/>
            <task name="top_display/Merge"/>
            <task name="top_display/Read_YUV"/>
            <task name="top_display/display"/>
            <task name="top_display"/>
            <task name="top_display/Split"/>
            <task name="top_display/Sobel"/>
        </constraintGroup>
        <constraintGroup>
            <operator name="Core2"/>
            <task name="top_display/Merge"/>
            <task name="top_display/Read_YUV"/>
            <task name="top_display"/>
            <task name="top_display/Split"/>
            <task name="top_display/Sobel"/>
        </constraintGroup>
        <constraintGroup>
            <operator name="Core3"/>
            <task name="top_display/Merge"/>
            <task name="top_display/Read_YUV"/>
            <task name="top_display"/>
            <task name="top_display/Split"/>
            <task name="top_display/Sobel"/>
        </constraintGroup>
        <constraintGroup>
            <operator name="Core1"/>
            <task name="top_display/Merge"/>
            <task name="top_display/Read_YUV"/>
            <task name="top_display"/>
            <task name="top_display/Split"/>
            <task name="top_display/Sobel"/>
        </constraintGroup>
    </constraints>
    <relativeconstraints excelUrl=""/>
    <timings excelUrl="">
        <memcpyspeed opname="x86" setuptime="1" timeperunit="1.0"/>
    </timings>
    <simuParams>
        <mainCore>Core0</mainCore>
        <mainComNode>shared_mem</mainComNode>
        <averageDataSize>1000</averageDataSize>
        <dataTypes>
            <dataType name="uchar" size="8"/>
            <dataType name="char" size="8"/>
        </dataTypes>
        <specialVertexOperators>
            <specialVertexOperator path="Core3"/>
            <specialVertexOperator path="Core0"/>
            <specialVertexOperator path="Core1"/>
            <specialVertexOperator path="Core2"/>
        </specialVertexOperators>
        <numberOfTopExecutions>1</numberOfTopExecutions>
    </simuParams>
    <variables excelUrl=""/>
	    <parameterValues/>
	    <papifyConfigs xmlUrl="/org.ietr.preesm.sobel_parallel/Code/Papi_new_info.xml">
	    <papifyConfig>
	        <coreId coreId="Sobel"/>
	        <PapiComponent componentId="perf_event" componentIndex="0" componentType="CPU">
	            <eventSet type="NATIVE">
	                <event
	                    eventDescription="count core clock cycles whenever the clock signal on the specific core is running (not halted)"
	                    eventId="0" eventName="ix86arch::UNHALTED_CORE_CYCLES">
	                    <eventModifier
	                        description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask >= 1)" name="ix86arch::UNHALTED_CORE_CYCLES:e=0"/>
	                    <eventModifier
	                        description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert" name="ix86arch::UNHALTED_CORE_CYCLES:i=0"/>
	                    <eventModifier
	                        description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]" name="ix86arch::UNHALTED_CORE_CYCLES:c=0"/>
	                    <eventModifier
	                        description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread" name="ix86arch::UNHALTED_CORE_CYCLES:t=0"/>
	                </event>
	                <event
	                    eventDescription="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction"
	                    eventId="1" eventName="ix86arch::INSTRUCTION_RETIRED">
	                    <eventModifier
	                        description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:edge level (may require counter-mask >= 1)" name="ix86arch::INSTRUCTION_RETIRED:e=0"/>
	                    <eventModifier
	                        description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:invert" name="ix86arch::INSTRUCTION_RETIRED:i=0"/>
	                    <eventModifier
	                        description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:counter-mask in range [0-255]" name="ix86arch::INSTRUCTION_RETIRED:c=0"/>
	                    <eventModifier
	                        description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:measure any thread" name="ix86arch::INSTRUCTION_RETIRED:t=0"/>
	                </event>
	                <event
	                    eventDescription="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions"
	                    eventId="2" eventName="ix86arch::UNHALTED_REFERENCE_CYCLES">
	                    <eventModifier
	                        description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:edge level (may require counter-mask >= 1)" name="ix86arch::UNHALTED_REFERENCE_CYCLES:e=0"/>
	                    <eventModifier
	                        description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:invert" name="ix86arch::UNHALTED_REFERENCE_CYCLES:i=0"/>
	                    <eventModifier
	                        description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:counter-mask in range [0-255]" name="ix86arch::UNHALTED_REFERENCE_CYCLES:c=0"/>
	                    <eventModifier
	                        description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:measure any thread" name="ix86arch::UNHALTED_REFERENCE_CYCLES:t=0"/>
	                </event>
	                <event
	                    eventDescription="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch"
	                    eventId="3" eventName="ix86arch::LLC_REFERENCES">
	                    <eventModifier
	                        description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:edge level (may require counter-mask >= 1)" name="ix86arch::LLC_REFERENCES:e=0"/>
	                    <eventModifier
	                        description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:invert" name="ix86arch::LLC_REFERENCES:i=0"/>
	                    <eventModifier
	                        description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:counter-mask in range [0-255]" name="ix86arch::LLC_REFERENCES:c=0"/>
	                    <eventModifier
	                        description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:measure any thread" name="ix86arch::LLC_REFERENCES:t=0"/>
	                </event>
	                <event
	                    eventDescription="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch"
	                    eventId="4" eventName="ix86arch::LLC_MISSES">
	                    <eventModifier
	                        description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:edge level (may require counter-mask >= 1)" name="ix86arch::LLC_MISSES:e=0"/>
	                    <eventModifier
	                        description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:invert" name="ix86arch::LLC_MISSES:i=0"/>
	                    <eventModifier
	                        description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:counter-mask in range [0-255]" name="ix86arch::LLC_MISSES:c=0"/>
	                    <eventModifier
	                        description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:measure any thread" name="ix86arch::LLC_MISSES:t=0"/>
	                </event>
	                <event
	                    eventDescription="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction"
	                    eventId="5" eventName="ix86arch::BRANCH_INSTRUCTIONS_RETIRED">
	                    <eventModifier
	                        description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:edge level (may require counter-mask >= 1)" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:e=0"/>
	                    <eventModifier
	                        description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:invert" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:i=0"/>
	                    <eventModifier
	                        description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:counter-mask in range [0-255]" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:c=0"/>
	                    <eventModifier
	                        description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:measure any thread" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:t=0"/>
	                </event>
	                <event
	                    eventDescription="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware"
	                    eventId="6" eventName="ix86arch::MISPREDICTED_BRANCH_RETIRED">
	                    <eventModifier
	                        description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:edge level (may require counter-mask >= 1)" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:e=0"/>
	                    <eventModifier
	                        description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:invert" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:i=0"/>
	                    <eventModifier
	                        description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:counter-mask in range [0-255]" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:c=0"/>
	                    <eventModifier
	                        description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:measure any thread" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:t=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_HW_CPU_CYCLES"
	                    eventId="7" eventName="perf::PERF_COUNT_HW_CPU_CYCLES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level" name="perf::PERF_COUNT_HW_CPU_CYCLES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CPU_CYCLES:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_HW_CPU_CYCLES"
	                    eventId="8" eventName="perf::CYCLES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level" name="perf::CYCLES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level" name="perf::CYCLES:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_HW_CPU_CYCLES"
	                    eventId="9" eventName="perf::CPU-CYCLES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level" name="perf::CPU-CYCLES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level" name="perf::CPU-CYCLES:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_HW_INSTRUCTIONS"
	                    eventId="10" eventName="perf::PERF_COUNT_HW_INSTRUCTIONS">
	                    <eventModifier
	                        description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at user level" name="perf::PERF_COUNT_HW_INSTRUCTIONS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_INSTRUCTIONS:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_HW_INSTRUCTIONS"
	                    eventId="11" eventName="perf::INSTRUCTIONS">
	                    <eventModifier
	                        description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at user level" name="perf::INSTRUCTIONS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at kernel level" name="perf::INSTRUCTIONS:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_HW_CACHE_REFERENCES"
	                    eventId="12" eventName="perf::PERF_COUNT_HW_CACHE_REFERENCES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_REFERENCES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_REFERENCES:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_HW_CACHE_REFERENCES"
	                    eventId="13" eventName="perf::CACHE-REFERENCES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at user level" name="perf::CACHE-REFERENCES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at kernel level" name="perf::CACHE-REFERENCES:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_HW_CACHE_MISSES"
	                    eventId="14" eventName="perf::PERF_COUNT_HW_CACHE_MISSES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_MISSES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_MISSES:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_HW_CACHE_MISSES"
	                    eventId="15" eventName="perf::CACHE-MISSES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at user level" name="perf::CACHE-MISSES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at kernel level" name="perf::CACHE-MISSES:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_HW_BRANCH_INSTRUCTIONS"
	                    eventId="16" eventName="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS">
	                    <eventModifier
	                        description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level" name="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_HW_BRANCH_INSTRUCTIONS"
	                    eventId="17" eventName="perf::BRANCH-INSTRUCTIONS">
	                    <eventModifier
	                        description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level" name="perf::BRANCH-INSTRUCTIONS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level" name="perf::BRANCH-INSTRUCTIONS:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_HW_BRANCH_INSTRUCTIONS"
	                    eventId="18" eventName="perf::BRANCHES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level" name="perf::BRANCHES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level" name="perf::BRANCHES:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_HW_BRANCH_MISSES"
	                    eventId="19" eventName="perf::PERF_COUNT_HW_BRANCH_MISSES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at user level" name="perf::PERF_COUNT_HW_BRANCH_MISSES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_BRANCH_MISSES:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_HW_BRANCH_MISSES"
	                    eventId="20" eventName="perf::BRANCH-MISSES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at user level" name="perf::BRANCH-MISSES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at kernel level" name="perf::BRANCH-MISSES:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_HW_BUS_CYCLES"
	                    eventId="21" eventName="perf::PERF_COUNT_HW_BUS_CYCLES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at user level" name="perf::PERF_COUNT_HW_BUS_CYCLES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_BUS_CYCLES:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_HW_BUS_CYCLES"
	                    eventId="22" eventName="perf::BUS-CYCLES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at user level" name="perf::BUS-CYCLES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at kernel level" name="perf::BUS-CYCLES:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_HW_REF_CPU_CYCLES"
	                    eventId="29" eventName="perf::PERF_COUNT_HW_REF_CPU_CYCLES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at user level" name="perf::PERF_COUNT_HW_REF_CPU_CYCLES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_REF_CPU_CYCLES:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_HW_REF_CPU_CYCLES"
	                    eventId="30" eventName="perf::REF-CYCLES">
	                    <eventModifier
	                        description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at user level" name="perf::REF-CYCLES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at kernel level" name="perf::REF-CYCLES:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_SW_CPU_CLOCK"
	                    eventId="31" eventName="perf::PERF_COUNT_SW_CPU_CLOCK">
	                    <eventModifier
	                        description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at user level" name="perf::PERF_COUNT_SW_CPU_CLOCK:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_CPU_CLOCK:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_SW_CPU_CLOCK"
	                    eventId="32" eventName="perf::CPU-CLOCK">
	                    <eventModifier
	                        description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at user level" name="perf::CPU-CLOCK:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at kernel level" name="perf::CPU-CLOCK:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_SW_TASK_CLOCK"
	                    eventId="33" eventName="perf::PERF_COUNT_SW_TASK_CLOCK">
	                    <eventModifier
	                        description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at user level" name="perf::PERF_COUNT_SW_TASK_CLOCK:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_TASK_CLOCK:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_SW_TASK_CLOCK"
	                    eventId="34" eventName="perf::TASK-CLOCK">
	                    <eventModifier
	                        description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at user level" name="perf::TASK-CLOCK:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at kernel level" name="perf::TASK-CLOCK:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_SW_PAGE_FAULTS"
	                    eventId="35" eventName="perf::PERF_COUNT_SW_PAGE_FAULTS">
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level" name="perf::PERF_COUNT_SW_PAGE_FAULTS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_PAGE_FAULTS:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_SW_PAGE_FAULTS"
	                    eventId="36" eventName="perf::PAGE-FAULTS">
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level" name="perf::PAGE-FAULTS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level" name="perf::PAGE-FAULTS:k=0"/>
	                </event>
	                <event eventDescription="PERF_COUNT_SW_PAGE_FAULTS"
	                    eventId="37" eventName="perf::FAULTS">
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level" name="perf::FAULTS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level" name="perf::FAULTS:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_SW_CONTEXT_SWITCHES"
	                    eventId="38" eventName="perf::PERF_COUNT_SW_CONTEXT_SWITCHES">
	                    <eventModifier
	                        description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level" name="perf::PERF_COUNT_SW_CONTEXT_SWITCHES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_CONTEXT_SWITCHES:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_SW_CONTEXT_SWITCHES"
	                    eventId="39" eventName="perf::CONTEXT-SWITCHES">
	                    <eventModifier
	                        description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level" name="perf::CONTEXT-SWITCHES:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level" name="perf::CONTEXT-SWITCHES:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_SW_CONTEXT_SWITCHES"
	                    eventId="40" eventName="perf::CS">
	                    <eventModifier
	                        description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level" name="perf::CS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level" name="perf::CS:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_SW_CPU_MIGRATIONS"
	                    eventId="41" eventName="perf::PERF_COUNT_SW_CPU_MIGRATIONS">
	                    <eventModifier
	                        description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level" name="perf::PERF_COUNT_SW_CPU_MIGRATIONS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_CPU_MIGRATIONS:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_SW_CPU_MIGRATIONS"
	                    eventId="42" eventName="perf::CPU-MIGRATIONS">
	                    <eventModifier
	                        description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level" name="perf::CPU-MIGRATIONS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level" name="perf::CPU-MIGRATIONS:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_SW_CPU_MIGRATIONS"
	                    eventId="43" eventName="perf::MIGRATIONS">
	                    <eventModifier
	                        description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level" name="perf::MIGRATIONS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level" name="perf::MIGRATIONS:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MIN"
	                    eventId="44" eventName="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN">
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at user level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MIN"
	                    eventId="45" eventName="perf::MINOR-FAULTS">
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at user level" name="perf::MINOR-FAULTS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at kernel level" name="perf::MINOR-FAULTS:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MAJ"
	                    eventId="46" eventName="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ">
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at user level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ:k=0"/>
	                </event>
	                <event
	                    eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MAJ"
	                    eventId="47" eventName="perf::MAJOR-FAULTS">
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at user level" name="perf::MAJOR-FAULTS:u=0"/>
	                    <eventModifier
	                        description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at kernel level" name="perf::MAJOR-FAULTS:k=0"/>
	                </event>
	                <event eventDescription="L1 data cache" eventId="48" eventName="perf::PERF_COUNT_HW_CACHE_L1D">
	                    <eventModifier
	                        description="L1 data cache, masks:read access" name="perf::PERF_COUNT_HW_CACHE_L1D:READ"/>
	                </event>
	                <event eventDescription="L1 cache load accesses"
	                    eventId="49" eventName="perf::L1-DCACHE-LOADS">
	                    <eventModifier
	                        description="L1 cache load accesses, masks:monitor at user level" name="perf::L1-DCACHE-LOADS:u=0"/>
	                    <eventModifier
	                        description="L1 cache load accesses, masks:monitor at kernel level" name="perf::L1-DCACHE-LOADS:k=0"/>
	                </event>
	                <event eventDescription="L1 cache load misses"
	                    eventId="50" eventName="perf::L1-DCACHE-LOAD-MISSES">
	                    <eventModifier
	                        description="L1 cache load misses, masks:monitor at user level" name="perf::L1-DCACHE-LOAD-MISSES:u=0"/>
	                    <eventModifier
	                        description="L1 cache load misses, masks:monitor at kernel level" name="perf::L1-DCACHE-LOAD-MISSES:k=0"/>
	                </event>
	                <event eventDescription="L1 cache store accesses"
	                    eventId="51" eventName="perf::L1-DCACHE-STORES">
	                    <eventModifier
	                        description="L1 cache store accesses, masks:monitor at user level" name="perf::L1-DCACHE-STORES:u=0"/>
	                    <eventModifier
	                        description="L1 cache store accesses, masks:monitor at kernel level" name="perf::L1-DCACHE-STORES:k=0"/>
	                </event>
	                <event eventDescription="L1 instruction cache"
	                    eventId="55" eventName="perf::PERF_COUNT_HW_CACHE_L1I">
	                    <eventModifier
	                        description="L1 instruction cache, masks:read access" name="perf::PERF_COUNT_HW_CACHE_L1I:READ"/>
	                </event>
	                <event eventDescription="L1I cache load misses"
	                    eventId="57" eventName="perf::L1-ICACHE-LOAD-MISSES">
	                    <eventModifier
	                        description="L1I cache load misses, masks:monitor at user level" name="perf::L1-ICACHE-LOAD-MISSES:u=0"/>
	                    <eventModifier
	                        description="L1I cache load misses, masks:monitor at kernel level" name="perf::L1-ICACHE-LOAD-MISSES:k=0"/>
	                </event>
	                <event eventDescription="Last level cache"
	                    eventId="60" eventName="perf::PERF_COUNT_HW_CACHE_LL">
	                    <eventModifier
	                        description="Last level cache, masks:read access" name="perf::PERF_COUNT_HW_CACHE_LL:READ"/>
	                    <eventModifier
	                        description="Last level cache, masks:write access" name="perf::PERF_COUNT_HW_CACHE_LL:WRITE"/>
	                </event>
	                <event
	                    eventDescription="Last level cache load accesses"
	                    eventId="61" eventName="perf::LLC-LOADS">
	                    <eventModifier
	                        description="Last level cache load accesses, masks:monitor at user level" name="perf::LLC-LOADS:u=0"/>
	                    <eventModifier
	                        description="Last level cache load accesses, masks:monitor at kernel level" name="perf::LLC-LOADS:k=0"/>
	                </event>
	                <event
	                    eventDescription="Last level cache load misses"
	                    eventId="62" eventName="perf::LLC-LOAD-MISSES">
	                    <eventModifier
	                        description="Last level cache load misses, masks:monitor at user level" name="perf::LLC-LOAD-MISSES:u=0"/>
	                    <eventModifier
	                        description="Last level cache load misses, masks:monitor at kernel level" name="perf::LLC-LOAD-MISSES:k=0"/>
	                </event>
	                <event
	                    eventDescription="Last level cache store accesses"
	                    eventId="63" eventName="perf::LLC-STORES">
	                    <eventModifier
	                        description="Last level cache store accesses, masks:monitor at user level" name="perf::LLC-STORES:u=0"/>
	                    <eventModifier
	                        description="Last level cache store accesses, masks:monitor at kernel level" name="perf::LLC-STORES:k=0"/>
	                </event>
	                <event
	                    eventDescription="Last level cache store misses"
	                    eventId="64" eventName="perf::LLC-STORE-MISSES">
	                    <eventModifier
	                        description="Last level cache store misses, masks:monitor at user level" name="perf::LLC-STORE-MISSES:u=0"/>
	                    <eventModifier
	                        description="Last level cache store misses, masks:monitor at kernel level" name="perf::LLC-STORE-MISSES:k=0"/>
	                </event>
	                <event
	                    eventDescription="Data Translation Lookaside Buffer"
	                    eventId="67" eventName="perf::PERF_COUNT_HW_CACHE_DTLB">
	                    <eventModifier
	                        description="Data Translation Lookaside Buffer, masks:read access" name="perf::PERF_COUNT_HW_CACHE_DTLB:READ"/>
	                    <eventModifier
	                        description="Data Translation Lookaside Buffer, masks:write access" name="perf::PERF_COUNT_HW_CACHE_DTLB:WRITE"/>
	                </event>
	                <event eventDescription="Data TLB load accesses"
	                    eventId="68" eventName="perf::DTLB-LOADS">
	                    <eventModifier
	                        description="Data TLB load accesses, masks:monitor at user level" name="perf::DTLB-LOADS:u=0"/>
	                    <eventModifier
	                        description="Data TLB load accesses, masks:monitor at kernel level" name="perf::DTLB-LOADS:k=0"/>
	                </event>
	                <event eventDescription="Data TLB load misses"
	                    eventId="69" eventName="perf::DTLB-LOAD-MISSES">
	                    <eventModifier
	                        description="Data TLB load misses, masks:monitor at user level" name="perf::DTLB-LOAD-MISSES:u=0"/>
	                    <eventModifier
	                        description="Data TLB load misses, masks:monitor at kernel level" name="perf::DTLB-LOAD-MISSES:k=0"/>
	                </event>
	                <event eventDescription="Data TLB store accesses"
	                    eventId="70" eventName="perf::DTLB-STORES">
	                    <eventModifier
	                        description="Data TLB store accesses, masks:monitor at user level" name="perf::DTLB-STORES:u=0"/>
	                    <eventModifier
	                        description="Data TLB store accesses, masks:monitor at kernel level" name="perf::DTLB-STORES:k=0"/>
	                </event>
	                <event eventDescription="Data TLB store misses"
	                    eventId="71" eventName="perf::DTLB-STORE-MISSES">
	                    <eventModifier
	                        description="Data TLB store misses, masks:monitor at user level" name="perf::DTLB-STORE-MISSES:u=0"/>
	                    <eventModifier
	                        description="Data TLB store misses, masks:monitor at kernel level" name="perf::DTLB-STORE-MISSES:k=0"/>
	                </event>
	                <event
	                    eventDescription="Instruction Translation Lookaside Buffer"
	                    eventId="74" eventName="perf::PERF_COUNT_HW_CACHE_ITLB">
	                    <eventModifier
	                        description="Instruction Translation Lookaside Buffer, masks:read access" name="perf::PERF_COUNT_HW_CACHE_ITLB:READ"/>
	                    <eventModifier
	                        description="Instruction Translation Lookaside Buffer, masks:hit access" name="perf::PERF_COUNT_HW_CACHE_ITLB:ACCESS"/>
	                    <eventModifier
	                        description="Instruction Translation Lookaside Buffer, masks:miss access" name="perf::PERF_COUNT_HW_CACHE_ITLB:MISS"/>
	                    <eventModifier
	                        description="Instruction Translation Lookaside Buffer, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_ITLB:u=0"/>
	                    <eventModifier
	                        description="Instruction Translation Lookaside Buffer, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_ITLB:k=0"/>
	                </event>
	                <event
	                    eventDescription="Instruction TLB load accesses"
	                    eventId="75" eventName="perf::ITLB-LOADS">
	                    <eventModifier
	                        description="Instruction TLB load accesses, masks:monitor at user level" name="perf::ITLB-LOADS:u=0"/>
	                    <eventModifier
	                        description="Instruction TLB load accesses, masks:monitor at kernel level" name="perf::ITLB-LOADS:k=0"/>
	                </event>
	                <event
	                    eventDescription="Instruction TLB load misses"
	                    eventId="76" eventName="perf::ITLB-LOAD-MISSES">
	                    <eventModifier
	                        description="Instruction TLB load misses, masks:monitor at user level" name="perf::ITLB-LOAD-MISSES:u=0"/>
	                    <eventModifier
	                        description="Instruction TLB load misses, masks:monitor at kernel level" name="perf::ITLB-LOAD-MISSES:k=0"/>
	                </event>
	                <event eventDescription="Branch Prediction Unit"
	                    eventId="77" eventName="perf::PERF_COUNT_HW_CACHE_BPU">
	                    <eventModifier
	                        description="Branch Prediction Unit, masks:read access" name="perf::PERF_COUNT_HW_CACHE_BPU:READ"/>
	                    <eventModifier
	                        description="Branch Prediction Unit, masks:hit access" name="perf::PERF_COUNT_HW_CACHE_BPU:ACCESS"/>
	                    <eventModifier
	                        description="Branch Prediction Unit, masks:miss access" name="perf::PERF_COUNT_HW_CACHE_BPU:MISS"/>
	                    <eventModifier
	                        description="Branch Prediction Unit, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_BPU:u=0"/>
	                    <eventModifier
	                        description="Branch Prediction Unit, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_BPU:k=0"/>
	                </event>
	                <event eventDescription="Branch  load accesses"
	                    eventId="78" eventName="perf::BRANCH-LOADS">
	                    <eventModifier
	                        description="Branch  load accesses, masks:monitor at user level" name="perf::BRANCH-LOADS:u=0"/>
	                    <eventModifier
	                        description="Branch  load accesses, masks:monitor at kernel level" name="perf::BRANCH-LOADS:k=0"/>
	                </event>
	                <event eventDescription="Branch  load misses"
	                    eventId="79" eventName="perf::BRANCH-LOAD-MISSES">
	                    <eventModifier
	                        description="Branch  load misses, masks:monitor at user level" name="perf::BRANCH-LOAD-MISSES:u=0"/>
	                    <eventModifier
	                        description="Branch  load misses, masks:monitor at kernel level" name="perf::BRANCH-LOAD-MISSES:k=0"/>
	                </event>
	                <event eventDescription="Node memory access"
	                    eventId="80" eventName="perf::PERF_COUNT_HW_CACHE_NODE">
	                    <eventModifier
	                        description="Node memory access, masks:read access" name="perf::PERF_COUNT_HW_CACHE_NODE:READ"/>
	                    <eventModifier
	                        description="Node memory access, masks:write access" name="perf::PERF_COUNT_HW_CACHE_NODE:WRITE"/>
	                </event>
	                <event eventDescription="Node  load accesses"
	                    eventId="81" eventName="perf::NODE-LOADS">
	                    <eventModifier
	                        description="Node  load accesses, masks:monitor at user level" name="perf::NODE-LOADS:u=0"/>
	                    <eventModifier
	                        description="Node  load accesses, masks:monitor at kernel level" name="perf::NODE-LOADS:k=0"/>
	                </event>
	                <event eventDescription="Node  load misses"
	                    eventId="82" eventName="perf::NODE-LOAD-MISSES">
	                    <eventModifier
	                        description="Node  load misses, masks:monitor at user level" name="perf::NODE-LOAD-MISSES:u=0"/>
	                    <eventModifier
	                        description="Node  load misses, masks:monitor at kernel level" name="perf::NODE-LOAD-MISSES:k=0"/>
	                </event>
	                <event eventDescription="Node  store accesses"
	                    eventId="83" eventName="perf::NODE-STORES">
	                    <eventModifier
	                        description="Node  store accesses, masks:monitor at user level" name="perf::NODE-STORES:u=0"/>
	                    <eventModifier
	                        description="Node  store accesses, masks:monitor at kernel level" name="perf::NODE-STORES:k=0"/>
	                </event>
	                <event eventDescription="Node  store misses"
	                    eventId="84" eventName="perf::NODE-STORE-MISSES">
	                    <eventModifier
	                        description="Node  store misses, masks:monitor at user level" name="perf::NODE-STORE-MISSES:u=0"/>
	                    <eventModifier
	                        description="Node  store misses, masks:monitor at kernel level" name="perf::NODE-STORE-MISSES:k=0"/>
	                </event>
	                <event
	                    eventDescription="Count core clock cycles whenever the clock signal on the specific core is running (not halted)"
	                    eventId="87" eventName="UNHALTED_CORE_CYCLES">
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask >= 1)" name="UNHALTED_CORE_CYCLES:e=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert" name="UNHALTED_CORE_CYCLES:i=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]" name="UNHALTED_CORE_CYCLES:c=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread" name="UNHALTED_CORE_CYCLES:t=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor only inside transactional memory region" name="UNHALTED_CORE_CYCLES:intx=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:do not count occurrences inside aborted transactional memory region" name="UNHALTED_CORE_CYCLES:intxcp=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at user level" name="UNHALTED_CORE_CYCLES:u=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at kernel level" name="UNHALTED_CORE_CYCLES:k=0"/>
	                </event>
	                <event eventDescription="Unhalted reference cycles"
	                    eventId="88" eventName="UNHALTED_REFERENCE_CYCLES">
	                    <eventModifier
	                        description="Unhalted reference cycles, masks:measure any thread" name="UNHALTED_REFERENCE_CYCLES:t=0"/>
	                    <eventModifier
	                        description="Unhalted reference cycles, masks:monitor at user level" name="UNHALTED_REFERENCE_CYCLES:u=0"/>
	                    <eventModifier
	                        description="Unhalted reference cycles, masks:monitor at kernel level" name="UNHALTED_REFERENCE_CYCLES:k=0"/>
	                </event>
	                <event
	                    eventDescription="Number of instructions at retirement"
	                    eventId="89" eventName="INSTRUCTION_RETIRED">
	                    <eventModifier
	                        description="Number of instructions at retirement, masks:edge level (may require counter-mask >= 1)" name="INSTRUCTION_RETIRED:e=0"/>
	                    <eventModifier
	                        description="Number of instructions at retirement, masks:invert" name="INSTRUCTION_RETIRED:i=0"/>
	                    <eventModifier
	                        description="Number of instructions at retirement, masks:counter-mask in range [0-255]" name="INSTRUCTION_RETIRED:c=0"/>
	                    <eventModifier
	                        description="Number of instructions at retirement, masks:measure any thread" name="INSTRUCTION_RETIRED:t=0"/>
	                    <eventModifier
	                        description="Number of instructions at retirement, masks:monitor only inside transactional memory region" name="INSTRUCTION_RETIRED:intx=0"/>
	                    <eventModifier
	                        description="Number of instructions at retirement, masks:do not count occurrences inside aborted transactional memory region" name="INSTRUCTION_RETIRED:intxcp=0"/>
	                    <eventModifier
	                        description="Number of instructions at retirement, masks:monitor at user level" name="INSTRUCTION_RETIRED:u=0"/>
	                    <eventModifier
	                        description="Number of instructions at retirement, masks:monitor at kernel level" name="INSTRUCTION_RETIRED:k=0"/>
	                </event>
	                <event
	                    eventDescription="This is an alias for INSTRUCTION_RETIRED"
	                    eventId="90" eventName="INSTRUCTIONS_RETIRED">
	                    <eventModifier
	                        description="This is an alias for INSTRUCTION_RETIRED, masks:edge level (may require counter-mask >= 1)" name="INSTRUCTIONS_RETIRED:e=0"/>
	                    <eventModifier
	                        description="This is an alias for INSTRUCTION_RETIRED, masks:invert" name="INSTRUCTIONS_RETIRED:i=0"/>
	                    <eventModifier
	                        description="This is an alias for INSTRUCTION_RETIRED, masks:counter-mask in range [0-255]" name="INSTRUCTIONS_RETIRED:c=0"/>
	                    <eventModifier
	                        description="This is an alias for INSTRUCTION_RETIRED, masks:measure any thread" name="INSTRUCTIONS_RETIRED:t=0"/>
	                    <eventModifier
	                        description="This is an alias for INSTRUCTION_RETIRED, masks:monitor only inside transactional memory region" name="INSTRUCTIONS_RETIRED:intx=0"/>
	                    <eventModifier
	                        description="This is an alias for INSTRUCTION_RETIRED, masks:do not count occurrences inside aborted transactional memory region" name="INSTRUCTIONS_RETIRED:intxcp=0"/>
	                    <eventModifier
	                        description="This is an alias for INSTRUCTION_RETIRED, masks:monitor at user level" name="INSTRUCTIONS_RETIRED:u=0"/>
	                    <eventModifier
	                        description="This is an alias for INSTRUCTION_RETIRED, masks:monitor at kernel level" name="INSTRUCTIONS_RETIRED:k=0"/>
	                </event>
	                <event
	                    eventDescription="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction"
	                    eventId="91" eventName="BRANCH_INSTRUCTIONS_RETIRED">
	                    <eventModifier
	                        description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:edge level (may require counter-mask >= 1)" name="BRANCH_INSTRUCTIONS_RETIRED:e=0"/>
	                    <eventModifier
	                        description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:invert" name="BRANCH_INSTRUCTIONS_RETIRED:i=0"/>
	                    <eventModifier
	                        description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:counter-mask in range [0-255]" name="BRANCH_INSTRUCTIONS_RETIRED:c=0"/>
	                    <eventModifier
	                        description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:measure any thread" name="BRANCH_INSTRUCTIONS_RETIRED:t=0"/>
	                    <eventModifier
	                        description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor only inside transactional memory region" name="BRANCH_INSTRUCTIONS_RETIRED:intx=0"/>
	                    <eventModifier
	                        description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:do not count occurrences inside aborted transactional memory region" name="BRANCH_INSTRUCTIONS_RETIRED:intxcp=0"/>
	                    <eventModifier
	                        description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor at user level" name="BRANCH_INSTRUCTIONS_RETIRED:u=0"/>
	                    <eventModifier
	                        description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor at kernel level" name="BRANCH_INSTRUCTIONS_RETIRED:k=0"/>
	                </event>
	                <event
	                    eventDescription="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware"
	                    eventId="92" eventName="MISPREDICTED_BRANCH_RETIRED">
	                    <eventModifier
	                        description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:edge level (may require counter-mask >= 1)" name="MISPREDICTED_BRANCH_RETIRED:e=0"/>
	                    <eventModifier
	                        description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:invert" name="MISPREDICTED_BRANCH_RETIRED:i=0"/>
	                    <eventModifier
	                        description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:counter-mask in range [0-255]" name="MISPREDICTED_BRANCH_RETIRED:c=0"/>
	                    <eventModifier
	                        description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:measure any thread" name="MISPREDICTED_BRANCH_RETIRED:t=0"/>
	                    <eventModifier
	                        description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor only inside transactional memory region" name="MISPREDICTED_BRANCH_RETIRED:intx=0"/>
	                    <eventModifier
	                        description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:do not count occurrences inside aborted transactional memory region" name="MISPREDICTED_BRANCH_RETIRED:intxcp=0"/>
	                    <eventModifier
	                        description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor at user level" name="MISPREDICTED_BRANCH_RETIRED:u=0"/>
	                    <eventModifier
	                        description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor at kernel level" name="MISPREDICTED_BRANCH_RETIRED:k=0"/>
	                </event>
	                <event eventDescription="Branch re-steered"
	                    eventId="93" eventName="BACLEARS">
	                    <eventModifier
	                        description="Branch re-steered, masks:Counts the number of times the front end is re-steered, mainly when the BPU cannot provide a correct prediction and this is corrected by other branch handling mechanisms at the front end" name="BACLEARS:ANY"/>
	                    <eventModifier
	                        description="Branch re-steered, masks:edge level (may require counter-mask >= 1)" name="BACLEARS:e=0"/>
	                    <eventModifier
	                        description="Branch re-steered, masks:invert" name="BACLEARS:i=0"/>
	                    <eventModifier
	                        description="Branch re-steered, masks:counter-mask in range [0-255]" name="BACLEARS:c=0"/>
	                    <eventModifier
	                        description="Branch re-steered, masks:measure any thread" name="BACLEARS:t=0"/>
	                    <eventModifier
	                        description="Branch re-steered, masks:monitor only inside transactional memory region" name="BACLEARS:intx=0"/>
	                    <eventModifier
	                        description="Branch re-steered, masks:do not count occurrences inside aborted transactional memory region" name="BACLEARS:intxcp=0"/>
	                    <eventModifier
	                        description="Branch re-steered, masks:monitor at user level" name="BACLEARS:u=0"/>
	                    <eventModifier
	                        description="Branch re-steered, masks:monitor at kernel level" name="BACLEARS:k=0"/>
	                </event>
	                <event
	                    eventDescription="Branch instructions executed"
	                    eventId="94" eventName="BR_INST_EXEC">
	                    <eventModifier
	                        description="Branch instructions executed, masks:All macro conditional nontaken branch instructions" name="BR_INST_EXEC:NONTAKEN_CONDITIONAL"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:All macro conditional nontaken branch instructions" name="BR_INST_EXEC:NONTAKEN_COND"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Taken speculative and retired macro-conditional branches" name="BR_INST_EXEC:TAKEN_CONDITIONAL"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Taken speculative and retired macro-conditional branches" name="BR_INST_EXEC:TAKEN_COND"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Taken speculative and retired macro-conditional branch instructions excluding calls and indirects" name="BR_INST_EXEC:TAKEN_DIRECT_JUMP"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Taken speculative and retired indirect branches excluding calls and returns" name="BR_INST_EXEC:TAKEN_INDIRECT_JUMP_NON_CALL_RET"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Taken speculative and retired indirect branches with return mnemonic" name="BR_INST_EXEC:TAKEN_INDIRECT_NEAR_RETURN"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Taken speculative and retired direct near calls" name="BR_INST_EXEC:TAKEN_DIRECT_NEAR_CALL"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Speculative and retired macro-conditional branches" name="BR_INST_EXEC:ALL_CONDITIONAL"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Speculative and retired macro-conditional branches" name="BR_INST_EXEC:ALL_COND"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Speculative and retired macro-conditional branches" name="BR_INST_EXEC:ANY_COND"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Speculative and retired macro-unconditional branches excluding calls and indirects" name="BR_INST_EXEC:ALL_DIRECT_JMP"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Speculative and retired indirect branches excluding calls and returns" name="BR_INST_EXEC:ALL_INDIRECT_JUMP_NON_CALL_RET"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Speculative and retired indirect return branches" name="BR_INST_EXEC:ALL_INDIRECT_NEAR_RETURN"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:Speculative and retired direct near calls" name="BR_INST_EXEC:ALL_DIRECT_NEAR_CALL"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:All indirect calls, including both register and memory indirect" name="BR_INST_EXEC:TAKEN_INDIRECT_NEAR_CALL"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:All branch instructions executed" name="BR_INST_EXEC:ALL_BRANCHES"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:edge level (may require counter-mask >= 1)" name="BR_INST_EXEC:e=0"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:invert" name="BR_INST_EXEC:i=0"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:counter-mask in range [0-255]" name="BR_INST_EXEC:c=0"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:measure any thread" name="BR_INST_EXEC:t=0"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:monitor only inside transactional memory region" name="BR_INST_EXEC:intx=0"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:do not count occurrences inside aborted transactional memory region" name="BR_INST_EXEC:intxcp=0"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:monitor at user level" name="BR_INST_EXEC:u=0"/>
	                    <eventModifier
	                        description="Branch instructions executed, masks:monitor at kernel level" name="BR_INST_EXEC:k=0"/>
	                </event>
	                <event
	                    eventDescription="Branch instructions retired (Precise Event)"
	                    eventId="95" eventName="BR_INST_RETIRED">
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro conditional branch instructions" name="BR_INST_RETIRED:CONDITIONAL"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro conditional branch instructions" name="BR_INST_RETIRED:COND"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:Counts all macro direct and indirect near calls" name="BR_INST_RETIRED:NEAR_CALL"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro branches including far branches (architectural event)" name="BR_INST_RETIRED:ALL_BRANCHES"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:Counts the number of near ret instructions retired" name="BR_INST_RETIRED:NEAR_RETURN"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:Counts all not taken macro branch instructions retired" name="BR_INST_RETIRED:NOT_TAKEN"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:Counts the number of near branch taken instructions retired" name="BR_INST_RETIRED:NEAR_TAKEN"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:Counts the number of far branch instructions retired" name="BR_INST_RETIRED:FAR_BRANCH"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:edge level (may require counter-mask >= 1)" name="BR_INST_RETIRED:e=0"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:invert" name="BR_INST_RETIRED:i=0"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:counter-mask in range [0-255]" name="BR_INST_RETIRED:c=0"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:measure any thread" name="BR_INST_RETIRED:t=0"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:monitor only inside transactional memory region" name="BR_INST_RETIRED:intx=0"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="BR_INST_RETIRED:intxcp=0"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:monitor at user level" name="BR_INST_RETIRED:u=0"/>
	                    <eventModifier
	                        description="Branch instructions retired (Precise Event), masks:monitor at kernel level" name="BR_INST_RETIRED:k=0"/>
	                </event>
	                <event
	                    eventDescription="Mispredicted branches executed"
	                    eventId="96" eventName="BR_MISP_EXEC">
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:Not taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:NONTAKEN_CONDITIONAL"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:Not taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:NONTAKEN_COND"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:TAKEN_CONDITIONAL"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:TAKEN_COND"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted indirect branches excluding calls and returns" name="BR_MISP_EXEC:TAKEN_INDIRECT_JUMP_NON_CALL_RET"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted indirect branches with return mnemonic" name="BR_MISP_EXEC:TAKEN_RETURN_NEAR"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:Speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:ALL_CONDITIONAL"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:Speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:ANY_COND"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:All mispredicted indirect branches that are not calls nor returns" name="BR_MISP_EXEC:ALL_INDIRECT_JUMP_NON_CALL_RET"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:Speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:ALL_BRANCHES"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted indirect calls" name="BR_MISP_EXEC:TAKEN_INDIRECT_NEAR_CALL"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:edge level (may require counter-mask >= 1)" name="BR_MISP_EXEC:e=0"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:invert" name="BR_MISP_EXEC:i=0"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:counter-mask in range [0-255]" name="BR_MISP_EXEC:c=0"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:measure any thread" name="BR_MISP_EXEC:t=0"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:monitor only inside transactional memory region" name="BR_MISP_EXEC:intx=0"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:do not count occurrences inside aborted transactional memory region" name="BR_MISP_EXEC:intxcp=0"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:monitor at user level" name="BR_MISP_EXEC:u=0"/>
	                    <eventModifier
	                        description="Mispredicted branches executed, masks:monitor at kernel level" name="BR_MISP_EXEC:k=0"/>
	                </event>
	                <event
	                    eventDescription="Mispredicted retired branches (Precise Event)"
	                    eventId="97" eventName="BR_MISP_RETIRED">
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:All mispredicted macro conditional branch instructions" name="BR_MISP_RETIRED:CONDITIONAL"/>
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:All mispredicted macro conditional branch instructions" name="BR_MISP_RETIRED:COND"/>
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:All mispredicted macro branches (architectural event)" name="BR_MISP_RETIRED:ALL_BRANCHES"/>
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:number of near branch instructions retired that were mispredicted and taken" name="BR_MISP_RETIRED:NEAR_TAKEN"/>
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:edge level (may require counter-mask >= 1)" name="BR_MISP_RETIRED:e=0"/>
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:invert" name="BR_MISP_RETIRED:i=0"/>
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:counter-mask in range [0-255]" name="BR_MISP_RETIRED:c=0"/>
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:measure any thread" name="BR_MISP_RETIRED:t=0"/>
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:monitor only inside transactional memory region" name="BR_MISP_RETIRED:intx=0"/>
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="BR_MISP_RETIRED:intxcp=0"/>
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:monitor at user level" name="BR_MISP_RETIRED:u=0"/>
	                    <eventModifier
	                        description="Mispredicted retired branches (Precise Event), masks:monitor at kernel level" name="BR_MISP_RETIRED:k=0"/>
	                </event>
	                <event
	                    eventDescription="Unhalted core cycles at a specific ring level"
	                    eventId="98" eventName="CPL_CYCLES">
	                    <eventModifier
	                        description="Unhalted core cycles at a specific ring level, masks:Unhalted core cycles when the thread is in ring 0" name="CPL_CYCLES:RING0"/>
	                    <eventModifier
	                        description="Unhalted core cycles at a specific ring level, masks:Unhalted core cycles when thread is in rings 1, 2, or 3" name="CPL_CYCLES:RING123"/>
	                    <eventModifier
	                        description="Unhalted core cycles at a specific ring level, masks:Number of intervals between processor halts while thread is in ring 0" name="CPL_CYCLES:RING0_TRANS"/>
	                </event>
	                <event
	                    eventDescription="Count core clock cycles whenever the clock signal on the specific core is running (not halted)"
	                    eventId="99" eventName="CPU_CLK_THREAD_UNHALTED">
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:Count Xclk pulses (100Mhz) when the core is unhalted" name="CPU_CLK_THREAD_UNHALTED:REF_XCLK"/>
	                </event>
	                <event
	                    eventDescription="Count core clock cycles whenever the clock signal on the specific core is running (not halted)"
	                    eventId="100" eventName="CPU_CLK_UNHALTED">
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask >= 1)" name="CPU_CLK_UNHALTED:e=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert" name="CPU_CLK_UNHALTED:i=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]" name="CPU_CLK_UNHALTED:c=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread" name="CPU_CLK_UNHALTED:t=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor only inside transactional memory region" name="CPU_CLK_UNHALTED:intx=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:do not count occurrences inside aborted transactional memory region" name="CPU_CLK_UNHALTED:intxcp=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at user level" name="CPU_CLK_UNHALTED:u=0"/>
	                    <eventModifier
	                        description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at kernel level" name="CPU_CLK_UNHALTED:k=0"/>
	                </event>
	                <event eventDescription="Stalled cycles"
	                    eventId="101" eventName="CYCLE_ACTIVITY">
	                    <eventModifier
	                        description="Stalled cycles, masks:Cycles with pending L2 miss loads (must use with HT off only)" name="CYCLE_ACTIVITY:CYCLES_L2_PENDING"/>
	                    <eventModifier
	                        description="Stalled cycles, masks:Cycles with pending memory loads" name="CYCLE_ACTIVITY:CYCLES_LDM_PENDING"/>
	                    <eventModifier
	                        description="Stalled cycles, masks:Cycles with pending L1D load cache misses" name="CYCLE_ACTIVITY:CYCLES_L1D_PENDING"/>
	                    <eventModifier
	                        description="Stalled cycles, masks:Executions stalls due to pending L1D load cache misses" name="CYCLE_ACTIVITY:STALLS_L1D_PENDING"/>
	                    <eventModifier
	                        description="Stalled cycles, masks:Execution stalls due to L2 pending loads (must use with HT off only)" name="CYCLE_ACTIVITY:STALLS_L2_PENDING"/>
	                    <eventModifier
	                        description="Stalled cycles, masks:Execution stalls due to memory subsystem" name="CYCLE_ACTIVITY:STALLS_LDM_PENDING"/>
	                    <eventModifier
	                        description="Stalled cycles, masks:Cycles during which no instructions were executed in the execution stage of the pipeline" name="CYCLE_ACTIVITY:CYCLES_NO_EXECUTE"/>
	                </event>
	                <event eventDescription="Data TLB load misses"
	                    eventId="102" eventName="DTLB_LOAD_MISSES">
	                    <eventModifier
	                        description="Data TLB load misses, masks:Misses in all DTLB levels that cause page walks" name="DTLB_LOAD_MISSES:MISS_CAUSES_A_WALK"/>
	                    <eventModifier
	                        description="Data TLB load misses, masks:Misses in all TLB levels causes a page walk that completes (4K)" name="DTLB_LOAD_MISSES:WALK_COMPLETED_4K"/>
	                    <eventModifier
	                        description="Data TLB load misses, masks:Misses in all TLB levels causes a page walk that completes (2M/4M)" name="DTLB_LOAD_MISSES:WALK_COMPLETED_2M_4M"/>
	                    <eventModifier
	                        description="Data TLB load misses, masks:Misses in all TLB levels causes a page walk of any page size that completes" name="DTLB_LOAD_MISSES:WALK_COMPLETED"/>
	                    <eventModifier
	                        description="Data TLB load misses, masks:Cycles when PMH is busy with page walks" name="DTLB_LOAD_MISSES:WALK_DURATION"/>
	                    <eventModifier
	                        description="Data TLB load misses, masks:Misses that miss the DTLB and hit the STLB (4K)" name="DTLB_LOAD_MISSES:STLB_HIT_4K"/>
	                    <eventModifier
	                        description="Data TLB load misses, masks:Misses that miss the DTLB and hit the STLB (2M)" name="DTLB_LOAD_MISSES:STLB_HIT_2M"/>
	                    <eventModifier
	                        description="Data TLB load misses, masks:Number of cache load STLB hits. No page walk" name="DTLB_LOAD_MISSES:STLB_HIT"/>
	                    <eventModifier
	                        description="Data TLB load misses, masks:DTLB misses with low part of linear-to-physical address translation missed" name="DTLB_LOAD_MISSES:PDE_CACHE_MISS"/>
	                </event>
	                <event eventDescription="Data TLB store misses"
	                    eventId="103" eventName="DTLB_STORE_MISSES">
	                    <eventModifier
	                        description="Data TLB store misses, masks:Misses in all DTLB levels that cause page walks" name="DTLB_STORE_MISSES:MISS_CAUSES_A_WALK"/>
	                    <eventModifier
	                        description="Data TLB store misses, masks:Misses in all TLB levels causes a page walk that completes (4K)" name="DTLB_STORE_MISSES:WALK_COMPLETED_4K"/>
	                    <eventModifier
	                        description="Data TLB store misses, masks:Misses in all TLB levels causes a page walk that completes (2M/4M)" name="DTLB_STORE_MISSES:WALK_COMPLETED_2M_4M"/>
	                    <eventModifier
	                        description="Data TLB store misses, masks:Misses in all TLB levels causes a page walk of any page size that completes" name="DTLB_STORE_MISSES:WALK_COMPLETED"/>
	                    <eventModifier
	                        description="Data TLB store misses, masks:Cycles when PMH is busy with page walks" name="DTLB_STORE_MISSES:WALK_DURATION"/>
	                    <eventModifier
	                        description="Data TLB store misses, masks:Misses that miss the DTLB and hit the STLB (4K)" name="DTLB_STORE_MISSES:STLB_HIT_4K"/>
	                    <eventModifier
	                        description="Data TLB store misses, masks:Misses that miss the DTLB and hit the STLB (2M)" name="DTLB_STORE_MISSES:STLB_HIT_2M"/>
	                    <eventModifier
	                        description="Data TLB store misses, masks:Number of cache load STLB hits. No page walk" name="DTLB_STORE_MISSES:STLB_HIT"/>
	                    <eventModifier
	                        description="Data TLB store misses, masks:DTLB misses with low part of linear-to-physical address translation missed" name="DTLB_STORE_MISSES:PDE_CACHE_MISS"/>
	                </event>
	                <event eventDescription="X87 floating-point assists"
	                    eventId="104" eventName="FP_ASSIST">
	                    <eventModifier
	                        description="X87 floating-point assists, masks:Number of X87 FP assists due to output values" name="FP_ASSIST:X87_OUTPUT"/>
	                    <eventModifier
	                        description="X87 floating-point assists, masks:Number of X87 FP assists due to input values" name="FP_ASSIST:X87_INPUT"/>
	                    <eventModifier
	                        description="X87 floating-point assists, masks:Number of SIMD FP assists due to output values" name="FP_ASSIST:SIMD_OUTPUT"/>
	                    <eventModifier
	                        description="X87 floating-point assists, masks:Number of SIMD FP assists due to input values" name="FP_ASSIST:SIMD_INPUT"/>
	                    <eventModifier
	                        description="X87 floating-point assists, masks:Cycles with any input/output SEE or FP assists" name="FP_ASSIST:ANY"/>
	                    <eventModifier
	                        description="X87 floating-point assists, masks:Cycles with any input and output SSE or FP assist" name="FP_ASSIST:ALL"/>
	                </event>
	                <event
	                    eventDescription="HLE execution (Precise Event)"
	                    eventId="105" eventName="HLE_RETIRED">
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:Number of times an HLE execution started" name="HLE_RETIRED:START"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:Number of times an HLE execution successfully committed" name="HLE_RETIRED:COMMIT"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to any reasons (multiple categories may count as one) (Precise Event)" name="HLE_RETIRED:ABORTED"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to various memory events" name="HLE_RETIRED:ABORTED_MISC1"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to uncommon conditions" name="HLE_RETIRED:ABORTED_MISC2"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to HLE-unfriendly instructions" name="HLE_RETIRED:ABORTED_MISC3"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to incompatible memory type" name="HLE_RETIRED:ABORTED_MISC4"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to none of the other 4 reasons (e.g., interrupt)" name="HLE_RETIRED:ABORTED_MISC5"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:edge level (may require counter-mask >= 1)" name="HLE_RETIRED:e=0"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:invert" name="HLE_RETIRED:i=0"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:counter-mask in range [0-255]" name="HLE_RETIRED:c=0"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:measure any thread" name="HLE_RETIRED:t=0"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:monitor only inside transactional memory region" name="HLE_RETIRED:intx=0"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="HLE_RETIRED:intxcp=0"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:monitor at user level" name="HLE_RETIRED:u=0"/>
	                    <eventModifier
	                        description="HLE execution (Precise Event), masks:monitor at kernel level" name="HLE_RETIRED:k=0"/>
	                </event>
	                <event eventDescription="Instruction Cache"
	                    eventId="106" eventName="ICACHE">
	                    <eventModifier
	                        description="Instruction Cache, masks:Number of Instruction Cache, Streaming Buffer and Victim Cache Misses. Includes Uncacheable accesses" name="ICACHE:MISSES"/>
	                    <eventModifier
	                        description="Instruction Cache, masks:Number of Instruction Cache, Streaming Buffer and Victim Cache Reads. Includes cacheable and uncacheable accesses and uncacheable fetches" name="ICACHE:HIT"/>
	                    <eventModifier
	                        description="Instruction Cache, masks:Number of cycles where a code-fetch stalled due to L1 instruction cache miss or an iTLB miss" name="ICACHE:IFETCH_STALL"/>
	                </event>
	                <event eventDescription="IDQ operations"
	                    eventId="107" eventName="IDQ">
	                    <eventModifier
	                        description="IDQ operations, masks:Cycles the Instruction Decode Queue (IDQ) is empty" name="IDQ:EMPTY"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from MITE path" name="IDQ:MITE_UOPS"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path" name="IDQ:DSB_UOPS"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Uops initiated by Decode Stream Buffer (DSB) that are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy" name="IDQ:MS_DSB_UOPS"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Uops initiated by MITE and delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy" name="IDQ:MS_MITE_UOPS"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Number of Uops were delivered into Instruction Decode Queue (IDQ) from MS, initiated by Decode Stream Buffer (DSB) or MITE" name="IDQ:MS_UOPS"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Number of cycles that Uops were delivered into Instruction Decode Queue (IDQ) when MS_Busy, initiated by Decode Stream Buffer (DSB) or MITE" name="IDQ:MS_UOPS_CYCLES"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Number of cycles that Uops were delivered into Instruction Decode Queue (IDQ) when MS_Busy, initiated by Decode Stream Buffer (DSB) or MITE" name="IDQ:MS_SWITCHES"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from MITE path" name="IDQ:MITE_UOPS_CYCLES"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path" name="IDQ:DSB_UOPS_CYCLES"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Cycles when uops initiated by Decode Stream Buffer (DSB) are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy" name="IDQ:MS_DSB_UOPS_CYCLES"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Deliveries to Instruction Decode Queue (IDQ) initiated by Decode Stream Buffer (DSB) while Microcode Sequencer (MS) is busy" name="IDQ:MS_DSB_OCCUR"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Cycles Decode Stream Buffer (DSB) is delivering 4 Uops" name="IDQ:ALL_DSB_CYCLES_4_UOPS"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Cycles Decode Stream Buffer (DSB) is delivering any Uop" name="IDQ:ALL_DSB_CYCLES_ANY_UOPS"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Cycles MITE is delivering 4 Uops" name="IDQ:ALL_MITE_CYCLES_4_UOPS"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Cycles MITE is delivering any Uop" name="IDQ:ALL_MITE_CYCLES_ANY_UOPS"/>
	                    <eventModifier
	                        description="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from any path" name="IDQ:ALL_MITE_UOPS"/>
	                </event>
	                <event eventDescription="Uops not delivered"
	                    eventId="108" eventName="IDQ_UOPS_NOT_DELIVERED">
	                    <eventModifier
	                        description="Uops not delivered, masks:Count number of non-delivered uops to Resource Allocation Table (RAT)" name="IDQ_UOPS_NOT_DELIVERED:CORE"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:Cycles per thread when 4 or more uops are not delivered to the Resource Allocation Table (RAT) when backend is not stalled" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_0_UOPS_DELIV_CORE"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:Cycles per thread when 3 or more uops are not delivered to the Resource Allocation Table (RAT) when backend is not stalled" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_1_UOP_DELIV_CORE"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:Cycles with less than 2 uops delivered by the front end" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_2_UOP_DELIV_CORE"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:Cycles with less than 3 uops delivered by the front end" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_3_UOP_DELIV_CORE"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:Cycles Front-End (FE) delivered 4 uops or Resource Allocation Table (RAT) was stalling FE" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_FE_WAS_OK"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:edge level (may require counter-mask >= 1)" name="IDQ_UOPS_NOT_DELIVERED:e=0"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:invert" name="IDQ_UOPS_NOT_DELIVERED:i=0"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:counter-mask in range [0-255]" name="IDQ_UOPS_NOT_DELIVERED:c=0"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:measure any thread" name="IDQ_UOPS_NOT_DELIVERED:t=0"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:monitor only inside transactional memory region" name="IDQ_UOPS_NOT_DELIVERED:intx=0"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:do not count occurrences inside aborted transactional memory region" name="IDQ_UOPS_NOT_DELIVERED:intxcp=0"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:monitor at user level" name="IDQ_UOPS_NOT_DELIVERED:u=0"/>
	                    <eventModifier
	                        description="Uops not delivered, masks:monitor at kernel level" name="IDQ_UOPS_NOT_DELIVERED:k=0"/>
	                </event>
	                <event
	                    eventDescription="Number of instructions retired (Precise Event)"
	                    eventId="109" eventName="INST_RETIRED">
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:Number of instructions retired. General Counter - architectural event" name="INST_RETIRED:ANY_P"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution (Precise Event)" name="INST_RETIRED:ALL"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:Number of cycles using always true condition" name="INST_RETIRED:TOTAL_CYCLES"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution" name="INST_RETIRED:PREC_DIST"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:X87 FP operations retired with no exceptions. Also counts flows that have several X87 or flows that use X87 uops in the exception handling" name="INST_RETIRED:X87"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:edge level (may require counter-mask >= 1)" name="INST_RETIRED:e=0"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:invert" name="INST_RETIRED:i=0"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:counter-mask in range [0-255]" name="INST_RETIRED:c=0"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:measure any thread" name="INST_RETIRED:t=0"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:monitor only inside transactional memory region" name="INST_RETIRED:intx=0"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="INST_RETIRED:intxcp=0"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:monitor at user level" name="INST_RETIRED:u=0"/>
	                    <eventModifier
	                        description="Number of instructions retired (Precise Event), masks:monitor at kernel level" name="INST_RETIRED:k=0"/>
	                </event>
	                <event
	                    eventDescription="Miscellaneous interruptions"
	                    eventId="110" eventName="INT_MISC">
	                    <eventModifier
	                        description="Miscellaneous interruptions, masks:Cycles waiting for the checkpoints in Resource Allocation Table (RAT) to be recovered after Nuke due to all other cases except JEClear (e.g. whenever a ucode assist is needed like SSE exception, memory disambiguation, etc...)" name="INT_MISC:RECOVERY_CYCLES"/>
	                </event>
	                <event eventDescription="Instruction TLB"
	                    eventId="111" eventName="ITLB">
	                    <eventModifier
	                        description="Instruction TLB, masks:Flushing of the Instruction TLB (ITLB) pages independent of page size" name="ITLB:ITLB_FLUSH"/>
	                    <eventModifier
	                        description="Instruction TLB, masks:edge level (may require counter-mask >= 1)" name="ITLB:e=0"/>
	                    <eventModifier
	                        description="Instruction TLB, masks:invert" name="ITLB:i=0"/>
	                    <eventModifier
	                        description="Instruction TLB, masks:counter-mask in range [0-255]" name="ITLB:c=0"/>
	                    <eventModifier
	                        description="Instruction TLB, masks:measure any thread" name="ITLB:t=0"/>
	                    <eventModifier
	                        description="Instruction TLB, masks:monitor only inside transactional memory region" name="ITLB:intx=0"/>
	                    <eventModifier
	                        description="Instruction TLB, masks:do not count occurrences inside aborted transactional memory region" name="ITLB:intxcp=0"/>
	                    <eventModifier
	                        description="Instruction TLB, masks:monitor at user level" name="ITLB:u=0"/>
	                    <eventModifier
	                        description="Instruction TLB, masks:monitor at kernel level" name="ITLB:k=0"/>
	                </event>
	                <event eventDescription="Instruction TLB misses"
	                    eventId="112" eventName="ITLB_MISSES">
	                    <eventModifier
	                        description="Instruction TLB misses, masks:Misses in all DTLB levels that cause page walks" name="ITLB_MISSES:MISS_CAUSES_A_WALK"/>
	                    <eventModifier
	                        description="Instruction TLB misses, masks:Misses in all TLB levels causes a page walk that completes (4K)" name="ITLB_MISSES:WALK_COMPLETED_4K"/>
	                    <eventModifier
	                        description="Instruction TLB misses, masks:Misses in all TLB levels causes a page walk that completes (2M/4M)" name="ITLB_MISSES:WALK_COMPLETED_2M_4M"/>
	                    <eventModifier
	                        description="Instruction TLB misses, masks:Misses in all TLB levels causes a page walk of any page size that completes" name="ITLB_MISSES:WALK_COMPLETED"/>
	                    <eventModifier
	                        description="Instruction TLB misses, masks:Cycles when PMH is busy with page walks" name="ITLB_MISSES:WALK_DURATION"/>
	                    <eventModifier
	                        description="Instruction TLB misses, masks:Misses that miss the DTLB and hit the STLB (4K)" name="ITLB_MISSES:STLB_HIT_4K"/>
	                    <eventModifier
	                        description="Instruction TLB misses, masks:Misses that miss the DTLB and hit the STLB (2M)" name="ITLB_MISSES:STLB_HIT_2M"/>
	                    <eventModifier
	                        description="Instruction TLB misses, masks:Number of cache load STLB hits. No page walk" name="ITLB_MISSES:STLB_HIT"/>
	                </event>
	                <event eventDescription="L1D cache" eventId="113" eventName="L1D">
	                    <eventModifier
	                        description="L1D cache, masks:L1D Data line replacements" name="L1D:REPLACEMENT"/>
	                    <eventModifier
	                        description="L1D cache, masks:edge level (may require counter-mask >= 1)" name="L1D:e=0"/>
	                    <eventModifier
	                        description="L1D cache, masks:invert" name="L1D:i=0"/>
	                    <eventModifier
	                        description="L1D cache, masks:counter-mask in range [0-255]" name="L1D:c=0"/>
	                    <eventModifier
	                        description="L1D cache, masks:measure any thread" name="L1D:t=0"/>
	                    <eventModifier
	                        description="L1D cache, masks:monitor only inside transactional memory region" name="L1D:intx=0"/>
	                    <eventModifier
	                        description="L1D cache, masks:do not count occurrences inside aborted transactional memory region" name="L1D:intxcp=0"/>
	                    <eventModifier
	                        description="L1D cache, masks:monitor at user level" name="L1D:u=0"/>
	                    <eventModifier
	                        description="L1D cache, masks:monitor at kernel level" name="L1D:k=0"/>
	                </event>
	                <event eventDescription="L1D pending misses"
	                    eventId="114" eventName="L1D_PEND_MISS">
	                    <eventModifier
	                        description="L1D pending misses, masks:Cycles with L1D load misses outstanding" name="L1D_PEND_MISS:PENDING"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:Cycles with L1D load misses outstanding" name="L1D_PEND_MISS:PENDING_CYCLES"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:Number L1D miss outstanding" name="L1D_PEND_MISS:OCCURRENCES"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:Number L1D miss outstanding" name="L1D_PEND_MISS:EDGE"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:Number of times a demand request was blocked due to Fill Buffer (FB) unavailability" name="L1D_PEND_MISS:REQUEST_FB_FULL"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:Number of cycles a demand request was blocked due to Fill Buffer (FB) unavailability" name="L1D_PEND_MISS:FB_FULL"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:edge level (may require counter-mask >= 1)" name="L1D_PEND_MISS:e=0"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:invert" name="L1D_PEND_MISS:i=0"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:counter-mask in range [0-255]" name="L1D_PEND_MISS:c=0"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:measure any thread" name="L1D_PEND_MISS:t=0"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:monitor only inside transactional memory region" name="L1D_PEND_MISS:intx=0"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:do not count occurrences inside aborted transactional memory region" name="L1D_PEND_MISS:intxcp=0"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:monitor at user level" name="L1D_PEND_MISS:u=0"/>
	                    <eventModifier
	                        description="L1D pending misses, masks:monitor at kernel level" name="L1D_PEND_MISS:k=0"/>
	                </event>
	                <event
	                    eventDescription="Demand Data Read requests to L2"
	                    eventId="115" eventName="L2_DEMAND_RQSTS">
	                    <eventModifier
	                        description="Demand Data Read requests to L2, masks:WB requests that hit L2 cache" name="L2_DEMAND_RQSTS:WB_HIT"/>
	                    <eventModifier
	                        description="Demand Data Read requests to L2, masks:edge level (may require counter-mask >= 1)" name="L2_DEMAND_RQSTS:e=0"/>
	                    <eventModifier
	                        description="Demand Data Read requests to L2, masks:invert" name="L2_DEMAND_RQSTS:i=0"/>
	                    <eventModifier
	                        description="Demand Data Read requests to L2, masks:counter-mask in range [0-255]" name="L2_DEMAND_RQSTS:c=0"/>
	                    <eventModifier
	                        description="Demand Data Read requests to L2, masks:measure any thread" name="L2_DEMAND_RQSTS:t=0"/>
	                    <eventModifier
	                        description="Demand Data Read requests to L2, masks:monitor only inside transactional memory region" name="L2_DEMAND_RQSTS:intx=0"/>
	                    <eventModifier
	                        description="Demand Data Read requests to L2, masks:do not count occurrences inside aborted transactional memory region" name="L2_DEMAND_RQSTS:intxcp=0"/>
	                    <eventModifier
	                        description="Demand Data Read requests to L2, masks:monitor at user level" name="L2_DEMAND_RQSTS:u=0"/>
	                    <eventModifier
	                        description="Demand Data Read requests to L2, masks:monitor at kernel level" name="L2_DEMAND_RQSTS:k=0"/>
	                </event>
	                <event eventDescription="L2 lines allocated"
	                    eventId="116" eventName="L2_LINES_IN">
	                    <eventModifier
	                        description="L2 lines allocated, masks:L2 cache lines in I state filling L2" name="L2_LINES_IN:I"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:L2 cache lines in S state filling L2" name="L2_LINES_IN:S"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:L2 cache lines in E state filling L2" name="L2_LINES_IN:E"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:L2 cache lines filling L2" name="L2_LINES_IN:ALL"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:L2 cache lines filling L2" name="L2_LINES_IN:ANY"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:edge level (may require counter-mask >= 1)" name="L2_LINES_IN:e=0"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:invert" name="L2_LINES_IN:i=0"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:counter-mask in range [0-255]" name="L2_LINES_IN:c=0"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:measure any thread" name="L2_LINES_IN:t=0"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:monitor only inside transactional memory region" name="L2_LINES_IN:intx=0"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:do not count occurrences inside aborted transactional memory region" name="L2_LINES_IN:intxcp=0"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:monitor at user level" name="L2_LINES_IN:u=0"/>
	                    <eventModifier
	                        description="L2 lines allocated, masks:monitor at kernel level" name="L2_LINES_IN:k=0"/>
	                </event>
	                <event eventDescription="L2 lines evicted"
	                    eventId="117" eventName="L2_LINES_OUT">
	                    <eventModifier
	                        description="L2 lines evicted, masks:Number of clean L2 cachelines evicted by demand" name="L2_LINES_OUT:DEMAND_CLEAN"/>
	                    <eventModifier
	                        description="L2 lines evicted, masks:Number of dirty L2 cachelines evicted by demand" name="L2_LINES_OUT:DEMAND_DIRTY"/>
	                </event>
	                <event eventDescription="L2 requests" eventId="118" eventName="L2_RQSTS">
	                    <eventModifier
	                        description="L2 requests, masks:Demand Data Read requests that miss L2 cache" name="L2_RQSTS:DEMAND_DATA_RD_MISS"/>
	                    <eventModifier
	                        description="L2 requests, masks:Demand Data Read requests that hit L2 cache" name="L2_RQSTS:DEMAND_DATA_RD_HIT"/>
	                    <eventModifier
	                        description="L2 requests, masks:RFO requests that miss L2 cache" name="L2_RQSTS:DEMAND_RFO_MISS"/>
	                    <eventModifier
	                        description="L2 requests, masks:RFO requests that miss L2 cache" name="L2_RQSTS:RFO_MISS"/>
	                    <eventModifier
	                        description="L2 requests, masks:RFO requests that hit L2 cache" name="L2_RQSTS:DEMAND_RFO_HIT"/>
	                    <eventModifier
	                        description="L2 requests, masks:RFO requests that hit L2 cache" name="L2_RQSTS:RFO_HIT"/>
	                    <eventModifier
	                        description="L2 requests, masks:L2 cache misses when fetching instructions" name="L2_RQSTS:CODE_RD_MISS"/>
	                    <eventModifier
	                        description="L2 requests, masks:All demand requests that miss the L2 cache" name="L2_RQSTS:ALL_DEMAND_MISS"/>
	                    <eventModifier
	                        description="L2 requests, masks:L2 cache hits when fetching instructions, code reads" name="L2_RQSTS:CODE_RD_HIT"/>
	                    <eventModifier
	                        description="L2 requests, masks:Requests from the L2 hardware prefetchers that miss L2 cache" name="L2_RQSTS:L2_PF_MISS"/>
	                    <eventModifier
	                        description="L2 requests, masks:Requests from the L1/L2/L3 hardware prefetchers or Load software prefetches that miss L2 cache" name="L2_RQSTS:PF_MISS"/>
	                    <eventModifier
	                        description="L2 requests, masks:All requests that miss the L2 cache" name="L2_RQSTS:MISS"/>
	                    <eventModifier
	                        description="L2 requests, masks:Requests from the L2 hardware prefetchers that hit L2 cache" name="L2_RQSTS:L2_PF_HIT"/>
	                    <eventModifier
	                        description="L2 requests, masks:Requests from the L2 hardware prefetchers that hit L2 cache" name="L2_RQSTS:PF_HIT"/>
	                    <eventModifier
	                        description="L2 requests, masks:Any data read request to L2 cache" name="L2_RQSTS:ALL_DEMAND_DATA_RD"/>
	                    <eventModifier
	                        description="L2 requests, masks:Any data RFO request to L2 cache" name="L2_RQSTS:ALL_RFO"/>
	                    <eventModifier
	                        description="L2 requests, masks:Any code read request to L2 cache" name="L2_RQSTS:ALL_CODE_RD"/>
	                    <eventModifier
	                        description="L2 requests, masks:All demand requests to L2 cache " name="L2_RQSTS:ALL_DEMAND_REFERENCES"/>
	                    <eventModifier
	                        description="L2 requests, masks:Any L2 HW prefetch request to L2 cache" name="L2_RQSTS:ALL_PF"/>
	                    <eventModifier
	                        description="L2 requests, masks:All requests to L2 cache" name="L2_RQSTS:REFERENCES"/>
	                    <eventModifier
	                        description="L2 requests, masks:edge level (may require counter-mask >= 1)" name="L2_RQSTS:e=0"/>
	                    <eventModifier
	                        description="L2 requests, masks:invert" name="L2_RQSTS:i=0"/>
	                    <eventModifier
	                        description="L2 requests, masks:counter-mask in range [0-255]" name="L2_RQSTS:c=0"/>
	                    <eventModifier
	                        description="L2 requests, masks:measure any thread" name="L2_RQSTS:t=0"/>
	                    <eventModifier
	                        description="L2 requests, masks:monitor only inside transactional memory region" name="L2_RQSTS:intx=0"/>
	                    <eventModifier
	                        description="L2 requests, masks:do not count occurrences inside aborted transactional memory region" name="L2_RQSTS:intxcp=0"/>
	                    <eventModifier
	                        description="L2 requests, masks:monitor at user level" name="L2_RQSTS:u=0"/>
	                    <eventModifier
	                        description="L2 requests, masks:monitor at kernel level" name="L2_RQSTS:k=0"/>
	                </event>
	                <event eventDescription="L2 transactions"
	                    eventId="119" eventName="L2_TRANS">
	                    <eventModifier
	                        description="L2 transactions, masks:Demand Data Read requests that access L2 cache" name="L2_TRANS:DEMAND_DATA_RD"/>
	                    <eventModifier
	                        description="L2 transactions, masks:RFO requests that access L2 cache" name="L2_TRANS:RFO"/>
	                    <eventModifier
	                        description="L2 transactions, masks:L2 cache accesses when fetching instructions" name="L2_TRANS:CODE_RD"/>
	                    <eventModifier
	                        description="L2 transactions, masks:L2 or L3 HW prefetches that access L2 cache, including rejects" name="L2_TRANS:ALL_PF"/>
	                    <eventModifier
	                        description="L2 transactions, masks:L1D writebacks that access L2 cache" name="L2_TRANS:L1D_WB"/>
	                    <eventModifier
	                        description="L2 transactions, masks:L2 fill requests that access L2 cache" name="L2_TRANS:L2_FILL"/>
	                    <eventModifier
	                        description="L2 transactions, masks:L2 writebacks that access L2 cache" name="L2_TRANS:L2_WB"/>
	                    <eventModifier
	                        description="L2 transactions, masks:Transactions accessing L2 pipe" name="L2_TRANS:ALL_REQUESTS"/>
	                    <eventModifier
	                        description="L2 transactions, masks:edge level (may require counter-mask >= 1)" name="L2_TRANS:e=0"/>
	                    <eventModifier
	                        description="L2 transactions, masks:invert" name="L2_TRANS:i=0"/>
	                    <eventModifier
	                        description="L2 transactions, masks:counter-mask in range [0-255]" name="L2_TRANS:c=0"/>
	                    <eventModifier
	                        description="L2 transactions, masks:measure any thread" name="L2_TRANS:t=0"/>
	                    <eventModifier
	                        description="L2 transactions, masks:monitor only inside transactional memory region" name="L2_TRANS:intx=0"/>
	                    <eventModifier
	                        description="L2 transactions, masks:do not count occurrences inside aborted transactional memory region" name="L2_TRANS:intxcp=0"/>
	                    <eventModifier
	                        description="L2 transactions, masks:monitor at user level" name="L2_TRANS:u=0"/>
	                    <eventModifier
	                        description="L2 transactions, masks:monitor at kernel level" name="L2_TRANS:k=0"/>
	                </event>
	                <event eventDescription="Blocking loads"
	                    eventId="120" eventName="LD_BLOCKS">
	                    <eventModifier
	                        description="Blocking loads, masks:Counts the number of loads blocked by overlapping with store buffer entries that cannot be forwarded" name="LD_BLOCKS:STORE_FORWARD"/>
	                    <eventModifier
	                        description="Blocking loads, masks:number of times that split load operations are temporarily blocked because all resources for handling the split accesses are in use" name="LD_BLOCKS:NO_SR"/>
	                </event>
	                <event eventDescription="Partial load blocks"
	                    eventId="121" eventName="LD_BLOCKS_PARTIAL">
	                    <eventModifier
	                        description="Partial load blocks, masks:False dependencies in MOB due to partial compare on address" name="LD_BLOCKS_PARTIAL:ADDRESS_ALIAS"/>
	                    <eventModifier
	                        description="Partial load blocks, masks:edge level (may require counter-mask >= 1)" name="LD_BLOCKS_PARTIAL:e=0"/>
	                    <eventModifier
	                        description="Partial load blocks, masks:invert" name="LD_BLOCKS_PARTIAL:i=0"/>
	                    <eventModifier
	                        description="Partial load blocks, masks:counter-mask in range [0-255]" name="LD_BLOCKS_PARTIAL:c=0"/>
	                    <eventModifier
	                        description="Partial load blocks, masks:measure any thread" name="LD_BLOCKS_PARTIAL:t=0"/>
	                    <eventModifier
	                        description="Partial load blocks, masks:monitor only inside transactional memory region" name="LD_BLOCKS_PARTIAL:intx=0"/>
	                    <eventModifier
	                        description="Partial load blocks, masks:do not count occurrences inside aborted transactional memory region" name="LD_BLOCKS_PARTIAL:intxcp=0"/>
	                    <eventModifier
	                        description="Partial load blocks, masks:monitor at user level" name="LD_BLOCKS_PARTIAL:u=0"/>
	                    <eventModifier
	                        description="Partial load blocks, masks:monitor at kernel level" name="LD_BLOCKS_PARTIAL:k=0"/>
	                </event>
	                <event eventDescription="Load dispatches"
	                    eventId="122" eventName="LOAD_HIT_PRE">
	                    <eventModifier
	                        description="Load dispatches, masks:Non software-prefetch load dispatches that hit FB allocated for software prefetch" name="LOAD_HIT_PRE:SW_PF"/>
	                    <eventModifier
	                        description="Load dispatches, masks:Non software-prefetch load dispatches that hit FB allocated for hardware prefetch" name="LOAD_HIT_PRE:HW_PF"/>
	                </event>
	                <event
	                    eventDescription="Locked cycles in L1D and L2"
	                    eventId="123" eventName="LOCK_CYCLES">
	                    <eventModifier
	                        description="Locked cycles in L1D and L2, masks:Cycles in which the L1D and L2 are locked, due to a UC lock or split lock" name="LOCK_CYCLES:SPLIT_LOCK_UC_LOCK_DURATION"/>
	                    <eventModifier
	                        description="Locked cycles in L1D and L2, masks:cycles that the L1D is locked" name="LOCK_CYCLES:CACHE_LOCK_DURATION"/>
	                </event>
	                <event eventDescription="L3 cache" eventId="124" eventName="LONGEST_LAT_CACHE">
	                    <eventModifier
	                        description="L3 cache, masks:Core-originated cacheable demand requests missed LLC - architectural event" name="LONGEST_LAT_CACHE:MISS"/>
	                    <eventModifier
	                        description="L3 cache, masks:Core-originated cacheable demand requests that refer to LLC - architectural event" name="LONGEST_LAT_CACHE:REFERENCE"/>
	                </event>
	                <event eventDescription="Machine clear asserted"
	                    eventId="125" eventName="MACHINE_CLEARS">
	                    <eventModifier
	                        description="Machine clear asserted, masks:Cycles there was a Nuke. Account for both thread-specific and All Thread Nukes" name="MACHINE_CLEARS:CYCLES"/>
	                    <eventModifier
	                        description="Machine clear asserted, masks:Number of Memory Ordering Machine Clears detected" name="MACHINE_CLEARS:MEMORY_ORDERING"/>
	                    <eventModifier
	                        description="Machine clear asserted, masks:Number of Self-modifying code (SMC) Machine Clears detected" name="MACHINE_CLEARS:SMC"/>
	                    <eventModifier
	                        description="Machine clear asserted, masks:This event counts the number of executed Intel AVX masked load operations that refer to an illegal address range with the mask bits set to 0" name="MACHINE_CLEARS:MASKMOV"/>
	                    <eventModifier
	                        description="Machine clear asserted, masks:Number of machine clears (nukes) of any type" name="MACHINE_CLEARS:COUNT"/>
	                </event>
	                <event
	                    eventDescription="L3 hit load uops retired (Precise Event)"
	                    eventId="126" eventName="MEM_LOAD_UOPS_L3_HIT_RETIRED">
	                    <eventModifier
	                        description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_MISS"/>
	                    <eventModifier
	                        description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_HIT"/>
	                    <eventModifier
	                        description="L3 hit load uops retired (Precise Event), masks:Load had HitM Response from a core on same socket (shared L3). (Non PEBS" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_HITM"/>
	                    <eventModifier
	                        description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were hits in L3 without snoops required" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_NONE"/>
	                </event>
	                <event
	                    eventDescription="L3 hit load uops retired (Precise Event)"
	                    eventId="127" eventName="MEM_LOAD_UOPS_LLC_HIT_RETIRED">
	                    <eventModifier
	                        description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_MISS"/>
	                    <eventModifier
	                        description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_HIT"/>
	                    <eventModifier
	                        description="L3 hit load uops retired (Precise Event), masks:Load had HitM Response from a core on same socket (shared L3). (Non PEBS" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_HITM"/>
	                    <eventModifier
	                        description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were hits in L3 without snoops required" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_NONE"/>
	                </event>
	                <event
	                    eventDescription="Load uops retired that missed the L3 (Precise Event)"
	                    eventId="128" eventName="MEM_LOAD_UOPS_L3_MISS_RETIRED">
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:Retired load uops missing L3 cache but hitting local memory" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:LOCAL_DRAM"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:edge level (may require counter-mask >= 1)" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:e=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:invert" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:i=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:counter-mask in range [0-255]" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:c=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:measure any thread" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:t=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:monitor only inside transactional memory region" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:intx=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:intxcp=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:monitor at user level" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:u=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:monitor at kernel level" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:k=0"/>
	                </event>
	                <event
	                    eventDescription="Load uops retired that missed the L3 (Precise Event)"
	                    eventId="129" eventName="MEM_LOAD_UOPS_LLC_MISS_RETIRED">
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:Retired load uops missing L3 cache but hitting local memory" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:LOCAL_DRAM"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:edge level (may require counter-mask >= 1)" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:e=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:invert" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:i=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:counter-mask in range [0-255]" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:c=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:measure any thread" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:t=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:monitor only inside transactional memory region" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:intx=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:intxcp=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:monitor at user level" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:u=0"/>
	                    <eventModifier
	                        description="Load uops retired that missed the L3 (Precise Event), masks:monitor at kernel level" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:k=0"/>
	                </event>
	                <event
	                    eventDescription="Retired load uops (Precise Event)"
	                    eventId="130" eventName="MEM_LOAD_UOPS_RETIRED">
	                    <eventModifier
	                        description="Retired load uops (Precise Event), masks:Retired load uops with L1 cache hits as data source" name="MEM_LOAD_UOPS_RETIRED:L1_HIT"/>
	                    <eventModifier
	                        description="Retired load uops (Precise Event), masks:Retired load uops with L2 cache hits as data source" name="MEM_LOAD_UOPS_RETIRED:L2_HIT"/>
	                    <eventModifier
	                        description="Retired load uops (Precise Event), masks:Retired load uops with L3 cache hits as data source" name="MEM_LOAD_UOPS_RETIRED:L3_HIT"/>
	                    <eventModifier
	                        description="Retired load uops (Precise Event), masks:Retired load uops which missed the L1D" name="MEM_LOAD_UOPS_RETIRED:L1_MISS"/>
	                    <eventModifier
	                        description="Retired load uops (Precise Event), masks:Retired load uops which missed the L2. Unknown data source excluded" name="MEM_LOAD_UOPS_RETIRED:L2_MISS"/>
	                    <eventModifier
	                        description="Retired load uops (Precise Event), masks:Retired load uops which missed the L3" name="MEM_LOAD_UOPS_RETIRED:L3_MISS"/>
	                    <eventModifier
	                        description="Retired load uops (Precise Event), masks:Retired load uops which missed L1 but hit line fill buffer (LFB)" name="MEM_LOAD_UOPS_RETIRED:HIT_LFB"/>
	                </event>
	                <event
	                    eventDescription="Memory transactions retired (Precise Event)"
	                    eventId="131" eventName="MEM_TRANS_RETIRED">
	                    <eventModifier
	                        description="Memory transactions retired (Precise Event), masks:Memory load instructions retired above programmed clocks, minimum threshold value is 3 (Precise Event and ldlat required)" name="MEM_TRANS_RETIRED:LOAD_LATENCY"/>
	                    <eventModifier
	                        description="Memory transactions retired (Precise Event), masks:Memory load instructions retired above programmed clocks, minimum threshold value is 3 (Precise Event and ldlat required)" name="MEM_TRANS_RETIRED:LATENCY_ABOVE_THRESHOLD"/>
	                    <eventModifier
	                        description="Memory transactions retired (Precise Event), masks:edge level (may require counter-mask >= 1)" name="MEM_TRANS_RETIRED:e=0"/>
	                    <eventModifier
	                        description="Memory transactions retired (Precise Event), masks:invert" name="MEM_TRANS_RETIRED:i=0"/>
	                    <eventModifier
	                        description="Memory transactions retired (Precise Event), masks:counter-mask in range [0-255]" name="MEM_TRANS_RETIRED:c=0"/>
	                    <eventModifier
	                        description="Memory transactions retired (Precise Event), masks:measure any thread" name="MEM_TRANS_RETIRED:t=0"/>
	                </event>
	                <event
	                    eventDescription="Memory uops retired (Precise Event)"
	                    eventId="132" eventName="MEM_UOPS_RETIRED">
	                    <eventModifier
	                        description="Memory uops retired (Precise Event), masks:Load uops with true STLB miss retired to architected path" name="MEM_UOPS_RETIRED:STLB_MISS_LOADS"/>
	                    <eventModifier
	                        description="Memory uops retired (Precise Event), masks:Store uops with true STLB miss retired to architected path" name="MEM_UOPS_RETIRED:STLB_MISS_STORES"/>
	                    <eventModifier
	                        description="Memory uops retired (Precise Event), masks:Load uops with locked access retired" name="MEM_UOPS_RETIRED:LOCK_LOADS"/>
	                    <eventModifier
	                        description="Memory uops retired (Precise Event), masks:Line-splitted load uops retired" name="MEM_UOPS_RETIRED:SPLIT_LOADS"/>
	                    <eventModifier
	                        description="Memory uops retired (Precise Event), masks:Line-splitted store uops retired" name="MEM_UOPS_RETIRED:SPLIT_STORES"/>
	                    <eventModifier
	                        description="Memory uops retired (Precise Event), masks:All load uops retired" name="MEM_UOPS_RETIRED:ALL_LOADS"/>
	                    <eventModifier
	                        description="Memory uops retired (Precise Event), masks:All store uops retired" name="MEM_UOPS_RETIRED:ALL_STORES"/>
	                </event>
	                <event
	                    eventDescription="Misaligned memory references"
	                    eventId="133" eventName="MISALIGN_MEM_REF">
	                    <eventModifier
	                        description="Misaligned memory references, masks:Speculative cache-line split load uops dispatched to the L1D" name="MISALIGN_MEM_REF:LOADS"/>
	                    <eventModifier
	                        description="Misaligned memory references, masks:Speculative cache-line split store-address uops dispatched to L1D" name="MISALIGN_MEM_REF:STORES"/>
	                </event>
	                <event eventDescription="Move Elimination"
	                    eventId="134" eventName="MOVE_ELIMINATION">
	                    <eventModifier
	                        description="Move Elimination, masks:Number of integer Move Elimination candidate uops that were eliminated" name="MOVE_ELIMINATION:INT_ELIMINATED"/>
	                    <eventModifier
	                        description="Move Elimination, masks:Number of SIMD Move Elimination candidate uops that were eliminated" name="MOVE_ELIMINATION:SIMD_ELIMINATED"/>
	                    <eventModifier
	                        description="Move Elimination, masks:Number of integer Move Elimination candidate uops that were not eliminated" name="MOVE_ELIMINATION:INT_NOT_ELIMINATED"/>
	                    <eventModifier
	                        description="Move Elimination, masks:Number of SIMD Move Elimination candidate uops that were not eliminated" name="MOVE_ELIMINATION:SIMD_NOT_ELIMINATED"/>
	                </event>
	                <event
	                    eventDescription="Demand Data Read requests sent to uncore"
	                    eventId="135" eventName="OFFCORE_REQUESTS">
	                    <eventModifier
	                        description="Demand Data Read requests sent to uncore, masks:Demand data read requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:DEMAND_DATA_RD"/>
	                    <eventModifier
	                        description="Demand Data Read requests sent to uncore, masks:Demand code read requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:DEMAND_CODE_RD"/>
	                    <eventModifier
	                        description="Demand Data Read requests sent to uncore, masks:Demand RFOs requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:DEMAND_RFO"/>
	                    <eventModifier
	                        description="Demand Data Read requests sent to uncore, masks:Data read requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:ALL_DATA_RD"/>
	                </event>
	                <event eventDescription="Software assist"
	                    eventId="136" eventName="OTHER_ASSISTS">
	                    <eventModifier
	                        description="Software assist, masks:Number of transitions from AVX-256 to legacy SSE when penalty applicable" name="OTHER_ASSISTS:AVX_TO_SSE"/>
	                    <eventModifier
	                        description="Software assist, masks:Number of transitions from legacy SSE to AVX-256 when penalty applicable" name="OTHER_ASSISTS:SSE_TO_AVX"/>
	                    <eventModifier
	                        description="Software assist, masks:Number of times any microcode assist is invoked by HW upon uop writeback" name="OTHER_ASSISTS:ANY_WB_ASSIST"/>
	                </event>
	                <event
	                    eventDescription="Cycles Allocation is stalled due to Resource Related reason"
	                    eventId="137" eventName="RESOURCE_STALLS">
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocation is stalled due to Resource Related reason" name="RESOURCE_STALLS:ANY"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocation is stalled due to Resource Related reason" name="RESOURCE_STALLS:ALL"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:Stall cycles caused by absence of eligible entries in Reservation Station (RS)" name="RESOURCE_STALLS:RS"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocator is stalled due to Store Buffer full (not including draining from synch)" name="RESOURCE_STALLS:SB"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:ROB full stall cycles" name="RESOURCE_STALLS:ROB"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:edge level (may require counter-mask >= 1)" name="RESOURCE_STALLS:e=0"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:invert" name="RESOURCE_STALLS:i=0"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:counter-mask in range [0-255]" name="RESOURCE_STALLS:c=0"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:measure any thread" name="RESOURCE_STALLS:t=0"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:monitor only inside transactional memory region" name="RESOURCE_STALLS:intx=0"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:do not count occurrences inside aborted transactional memory region" name="RESOURCE_STALLS:intxcp=0"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:monitor at user level" name="RESOURCE_STALLS:u=0"/>
	                    <eventModifier
	                        description="Cycles Allocation is stalled due to Resource Related reason, masks:monitor at kernel level" name="RESOURCE_STALLS:k=0"/>
	                </event>
	                <event eventDescription="ROB miscellaneous events"
	                    eventId="138" eventName="ROB_MISC_EVENTS">
	                    <eventModifier
	                        description="ROB miscellaneous events, masks:Count each time an new Last Branch Record (LBR) is inserted" name="ROB_MISC_EVENTS:LBR_INSERTS"/>
	                    <eventModifier
	                        description="ROB miscellaneous events, masks:edge level (may require counter-mask >= 1)" name="ROB_MISC_EVENTS:e=0"/>
	                    <eventModifier
	                        description="ROB miscellaneous events, masks:invert" name="ROB_MISC_EVENTS:i=0"/>
	                    <eventModifier
	                        description="ROB miscellaneous events, masks:counter-mask in range [0-255]" name="ROB_MISC_EVENTS:c=0"/>
	                    <eventModifier
	                        description="ROB miscellaneous events, masks:measure any thread" name="ROB_MISC_EVENTS:t=0"/>
	                    <eventModifier
	                        description="ROB miscellaneous events, masks:monitor only inside transactional memory region" name="ROB_MISC_EVENTS:intx=0"/>
	                    <eventModifier
	                        description="ROB miscellaneous events, masks:do not count occurrences inside aborted transactional memory region" name="ROB_MISC_EVENTS:intxcp=0"/>
	                    <eventModifier
	                        description="ROB miscellaneous events, masks:monitor at user level" name="ROB_MISC_EVENTS:u=0"/>
	                    <eventModifier
	                        description="ROB miscellaneous events, masks:monitor at kernel level" name="ROB_MISC_EVENTS:k=0"/>
	                </event>
	                <event eventDescription="Reservation Station"
	                    eventId="139" eventName="RS_EVENTS">
	                    <eventModifier
	                        description="Reservation Station, masks:Cycles the Reservation Station (RS) is empty for this thread" name="RS_EVENTS:EMPTY_CYCLES"/>
	                    <eventModifier
	                        description="Reservation Station, masks:Counts number of time the Reservation Station (RS) goes from empty to non-empty" name="RS_EVENTS:EMPTY_END"/>
	                    <eventModifier
	                        description="Reservation Station, masks:edge level (may require counter-mask >= 1)" name="RS_EVENTS:e=0"/>
	                    <eventModifier
	                        description="Reservation Station, masks:invert" name="RS_EVENTS:i=0"/>
	                    <eventModifier
	                        description="Reservation Station, masks:counter-mask in range [0-255]" name="RS_EVENTS:c=0"/>
	                    <eventModifier
	                        description="Reservation Station, masks:measure any thread" name="RS_EVENTS:t=0"/>
	                    <eventModifier
	                        description="Reservation Station, masks:monitor only inside transactional memory region" name="RS_EVENTS:intx=0"/>
	                    <eventModifier
	                        description="Reservation Station, masks:do not count occurrences inside aborted transactional memory region" name="RS_EVENTS:intxcp=0"/>
	                    <eventModifier
	                        description="Reservation Station, masks:monitor at user level" name="RS_EVENTS:u=0"/>
	                    <eventModifier
	                        description="Reservation Station, masks:monitor at kernel level" name="RS_EVENTS:k=0"/>
	                </event>
	                <event
	                    eventDescription="Restricted Transaction Memory execution (Precise Event)"
	                    eventId="140" eventName="RTM_RETIRED">
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution started" name="RTM_RETIRED:START"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution successfully committed" name="RTM_RETIRED:COMMIT"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to any reasons (multiple categories may count as one) (Precise Event)" name="RTM_RETIRED:ABORTED"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to various memory events" name="RTM_RETIRED:ABORTED_MISC1"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to uncommon conditions" name="RTM_RETIRED:ABORTED_MISC2"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to RTM-unfriendly instructions" name="RTM_RETIRED:ABORTED_MISC3"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to incompatible memory type" name="RTM_RETIRED:ABORTED_MISC4"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to none of the other 4 reasons (e.g., interrupt)" name="RTM_RETIRED:ABORTED_MISC5"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:edge level (may require counter-mask >= 1)" name="RTM_RETIRED:e=0"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:invert" name="RTM_RETIRED:i=0"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:counter-mask in range [0-255]" name="RTM_RETIRED:c=0"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:measure any thread" name="RTM_RETIRED:t=0"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:monitor only inside transactional memory region" name="RTM_RETIRED:intx=0"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="RTM_RETIRED:intxcp=0"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:monitor at user level" name="RTM_RETIRED:u=0"/>
	                    <eventModifier
	                        description="Restricted Transaction Memory execution (Precise Event), masks:monitor at kernel level" name="RTM_RETIRED:k=0"/>
	                </event>
	                <event eventDescription="TLB flushes" eventId="141" eventName="TLB_FLUSH">
	                    <eventModifier
	                        description="TLB flushes, masks:Count number of DTLB flushes of thread-specific entries" name="TLB_FLUSH:DTLB_THREAD"/>
	                    <eventModifier
	                        description="TLB flushes, masks:Count number of any STLB flushes" name="TLB_FLUSH:STLB_ANY"/>
	                </event>
	                <event eventDescription="Uops executed"
	                    eventId="142" eventName="UOPS_EXECUTED">
	                    <eventModifier
	                        description="Uops executed, masks:Number of uops executed from any thread" name="UOPS_EXECUTED:CORE"/>
	                    <eventModifier
	                        description="Uops executed, masks:Number of cycles with no uops executed" name="UOPS_EXECUTED:STALL_CYCLES"/>
	                    <eventModifier
	                        description="Uops executed, masks:Cycles where at least 1 uop was executed per thread" name="UOPS_EXECUTED:CYCLES_GE_1_UOP_EXEC"/>
	                    <eventModifier
	                        description="Uops executed, masks:Cycles where at least 2 uops were executed per thread" name="UOPS_EXECUTED:CYCLES_GE_2_UOPS_EXEC"/>
	                    <eventModifier
	                        description="Uops executed, masks:Cycles where at least 3 uops were executed per thread" name="UOPS_EXECUTED:CYCLES_GE_3_UOPS_EXEC"/>
	                    <eventModifier
	                        description="Uops executed, masks:Cycles where at least 4 uops were executed per thread" name="UOPS_EXECUTED:CYCLES_GE_4_UOPS_EXEC"/>
	                    <eventModifier
	                        description="Uops executed, masks:Cycles where at least 1 uop was executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_1"/>
	                    <eventModifier
	                        description="Uops executed, masks:Cycles where at least 2 uops were executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_2"/>
	                    <eventModifier
	                        description="Uops executed, masks:Cycles where at least 3 uops were executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_3"/>
	                    <eventModifier
	                        description="Uops executed, masks:Cycles where at least 4 uops were executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_4"/>
	                    <eventModifier
	                        description="Uops executed, masks:Cycles where no uop is executed on any thread" name="UOPS_EXECUTED:CORE_CYCLES_NONE"/>
	                    <eventModifier
	                        description="Uops executed, masks:edge level (may require counter-mask >= 1)" name="UOPS_EXECUTED:e=0"/>
	                    <eventModifier
	                        description="Uops executed, masks:invert" name="UOPS_EXECUTED:i=0"/>
	                    <eventModifier
	                        description="Uops executed, masks:counter-mask in range [0-255]" name="UOPS_EXECUTED:c=0"/>
	                    <eventModifier
	                        description="Uops executed, masks:measure any thread" name="UOPS_EXECUTED:t=0"/>
	                    <eventModifier
	                        description="Uops executed, masks:monitor only inside transactional memory region" name="UOPS_EXECUTED:intx=0"/>
	                    <eventModifier
	                        description="Uops executed, masks:do not count occurrences inside aborted transactional memory region" name="UOPS_EXECUTED:intxcp=0"/>
	                    <eventModifier
	                        description="Uops executed, masks:monitor at user level" name="UOPS_EXECUTED:u=0"/>
	                    <eventModifier
	                        description="Uops executed, masks:monitor at kernel level" name="UOPS_EXECUTED:k=0"/>
	                </event>
	                <event eventDescription="Loop stream detector"
	                    eventId="143" eventName="LSD">
	                    <eventModifier
	                        description="Loop stream detector, masks:Number of uops delivered by the Loop Stream Detector (LSD)" name="LSD:UOPS"/>
	                    <eventModifier
	                        description="Loop stream detector, masks:Cycles with uops delivered by the LSD but which did not come from decoder" name="LSD:ACTIVE"/>
	                    <eventModifier
	                        description="Loop stream detector, masks:Cycles with 4 uops delivered by the LSD but which did not come from decoder" name="LSD:CYCLES_4_UOPS"/>
	                    <eventModifier
	                        description="Loop stream detector, masks:edge level (may require counter-mask >= 1)" name="LSD:e=0"/>
	                    <eventModifier
	                        description="Loop stream detector, masks:invert" name="LSD:i=0"/>
	                    <eventModifier
	                        description="Loop stream detector, masks:counter-mask in range [0-255]" name="LSD:c=0"/>
	                    <eventModifier
	                        description="Loop stream detector, masks:measure any thread" name="LSD:t=0"/>
	                    <eventModifier
	                        description="Loop stream detector, masks:monitor only inside transactional memory region" name="LSD:intx=0"/>
	                    <eventModifier
	                        description="Loop stream detector, masks:do not count occurrences inside aborted transactional memory region" name="LSD:intxcp=0"/>
	                    <eventModifier
	                        description="Loop stream detector, masks:monitor at user level" name="LSD:u=0"/>
	                    <eventModifier
	                        description="Loop stream detector, masks:monitor at kernel level" name="LSD:k=0"/>
	                </event>
	                <event
	                    eventDescription="Uops dispatched to specific ports"
	                    eventId="144" eventName="UOPS_EXECUTED_PORT">
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 0" name="UOPS_EXECUTED_PORT:PORT_0"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 1" name="UOPS_EXECUTED_PORT:PORT_1"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 2" name="UOPS_EXECUTED_PORT:PORT_2"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 3" name="UOPS_EXECUTED_PORT:PORT_3"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 4" name="UOPS_EXECUTED_PORT:PORT_4"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 5" name="UOPS_EXECUTED_PORT:PORT_5"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 6" name="UOPS_EXECUTED_PORT:PORT_6"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 7" name="UOPS_EXECUTED_PORT:PORT_7"/>
	                </event>
	                <event
	                    eventDescription="Uops dispatched to specific ports"
	                    eventId="145" eventName="UOPS_DISPATCHED_PORT">
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 0" name="UOPS_DISPATCHED_PORT:PORT_0"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 1" name="UOPS_DISPATCHED_PORT:PORT_1"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 2" name="UOPS_DISPATCHED_PORT:PORT_2"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 3" name="UOPS_DISPATCHED_PORT:PORT_3"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 4" name="UOPS_DISPATCHED_PORT:PORT_4"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 5" name="UOPS_DISPATCHED_PORT:PORT_5"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 6" name="UOPS_DISPATCHED_PORT:PORT_6"/>
	                    <eventModifier
	                        description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 7" name="UOPS_DISPATCHED_PORT:PORT_7"/>
	                </event>
	                <event eventDescription="Uops issued" eventId="146" eventName="UOPS_ISSUED">
	                    <eventModifier
	                        description="Uops issued, masks:Number of Uops issued by the Resource Allocation Table (RAT) to the Reservation Station (RS)" name="UOPS_ISSUED:ANY"/>
	                    <eventModifier
	                        description="Uops issued, masks:Number of Uops issued by the Resource Allocation Table (RAT) to the Reservation Station (RS)" name="UOPS_ISSUED:ALL"/>
	                    <eventModifier
	                        description="Uops issued, masks:Number of flags-merge uops being allocated. Such uops adds delay" name="UOPS_ISSUED:FLAGS_MERGE"/>
	                    <eventModifier
	                        description="Uops issued, masks:Number of slow LEA or similar uops allocated. Such uop has 3 sources regardless if result of LEA instruction or not" name="UOPS_ISSUED:SLOW_LEA"/>
	                    <eventModifier
	                        description="Uops issued, masks:Number of Multiply packed/scalar single precision uops allocated" name="UOPS_ISSUED:SINGLE_MUL"/>
	                    <eventModifier
	                        description="Uops issued, masks:Counts the number of cycles no uops issued by this thread" name="UOPS_ISSUED:STALL_CYCLES"/>
	                </event>
	                <event
	                    eventDescription="Uops retired (Precise Event)"
	                    eventId="147" eventName="UOPS_RETIRED">
	                    <eventModifier
	                        description="Uops retired (Precise Event), masks:All uops that actually retired" name="UOPS_RETIRED:ALL"/>
	                    <eventModifier
	                        description="Uops retired (Precise Event), masks:All uops that actually retired" name="UOPS_RETIRED:ANY"/>
	                    <eventModifier
	                        description="Uops retired (Precise Event), masks:number of retirement slots used non PEBS" name="UOPS_RETIRED:RETIRE_SLOTS"/>
	                    <eventModifier
	                        description="Uops retired (Precise Event), masks:Cycles no executable uops retired (Precise Event)" name="UOPS_RETIRED:STALL_CYCLES"/>
	                    <eventModifier
	                        description="Uops retired (Precise Event), masks:Number of cycles using always true condition applied to PEBS uops retired event" name="UOPS_RETIRED:TOTAL_CYCLES"/>
	                </event>
	                <event
	                    eventDescription="Transactional memory aborts"
	                    eventId="148" eventName="TX_MEM">
	                    <eventModifier
	                        description="Transactional memory aborts, masks:Number of times a transactional abort was signaled due to data conflict on a transactionally accessed address" name="TX_MEM:ABORT_CONFLICT"/>
	                    <eventModifier
	                        description="Transactional memory aborts, masks:Number of times a transactional abort was signaled due to data capacity limitation for transactional writes" name="TX_MEM:ABORT_CAPACITY_WRITE"/>
	                    <eventModifier
	                        description="Transactional memory aborts, masks:Number of times a HLE transactional execution aborted due to a non xrelease prefixed instruction writing to an elided lock in the elision buffer" name="TX_MEM:ABORT_HLE_STORE_TO_ELIDED_LOCK"/>
	                    <eventModifier
	                        description="Transactional memory aborts, masks:Number of times a HLE transactional execution aborted due to NoAllocatedElisionBuffer being non-zero" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_NOT_EMPTY"/>
	                    <eventModifier
	                        description="Transactional memory aborts, masks:Number of times a HLE transaction execution aborted due to xrelease lock not satisfying the address and value requirements in the elision buffer" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_MISMATCH"/>
	                    <eventModifier
	                        description="Transactional memory aborts, masks:Number of times a HLE transaction execution aborted due to an unsupported read alignment from the elision buffer" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_UNSUPPORTED_ALIGNMENT"/>
	                    <eventModifier
	                        description="Transactional memory aborts, masks:Number of times a HLE clock could not be elided due to ElisionBufferAvailable being zero" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_FULL"/>
	                </event>
	                <event eventDescription="Transactional execution"
	                    eventId="149" eventName="TX_EXEC">
	                    <eventModifier
	                        description="Transactional execution, masks:Number of times a class of instructions that may cause a transactional abort was executed. Since this is the count of execution, it may not always cause a transactional abort" name="TX_EXEC:MISC1"/>
	                    <eventModifier
	                        description="Transactional execution, masks:Number of times a class of instructions that may cause a transactional abort was executed inside a transactional region" name="TX_EXEC:MISC2"/>
	                    <eventModifier
	                        description="Transactional execution, masks:Number of times an instruction execution caused the supported nest count to be exceeded" name="TX_EXEC:MISC3"/>
	                    <eventModifier
	                        description="Transactional execution, masks:Number of times an instruction with HLE xbegin prefix was executed inside a RTM transactional region" name="TX_EXEC:MISC4"/>
	                    <eventModifier
	                        description="Transactional execution, masks:Number of times an instruction with HLE xacquire prefix was executed inside a RTM transactional region" name="TX_EXEC:MISC5"/>
	                </event>
	                <event
	                    eventDescription="Outstanding offcore requests"
	                    eventId="150" eventName="OFFCORE_REQUESTS_OUTSTANDING">
	                    <eventModifier
	                        description="Outstanding offcore requests, masks:Cycles with cacheable data read transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:ALL_DATA_RD_CYCLES"/>
	                    <eventModifier
	                        description="Outstanding offcore requests, masks:Cycles with demand code reads transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_CODE_RD_CYCLES"/>
	                    <eventModifier
	                        description="Outstanding offcore requests, masks:Cycles with demand data read transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD_CYCLES"/>
	                    <eventModifier
	                        description="Outstanding offcore requests, masks:Cacheable data read transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:ALL_DATA_RD"/>
	                    <eventModifier
	                        description="Outstanding offcore requests, masks:Code read transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_CODE_RD"/>
	                    <eventModifier
	                        description="Outstanding offcore requests, masks:Demand data read transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD"/>
	                    <eventModifier
	                        description="Outstanding offcore requests, masks:Cycles with at lesat 6 offcore outstanding demand data read requests in the uncore queue" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD_GE_6"/>
	                    <eventModifier
	                        description="Outstanding offcore requests, masks:Outstanding RFO (store) transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_RFO"/>
	                    <eventModifier
	                        description="Outstanding offcore requests, masks:Cycles with outstanding RFO (store) transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_RFO_CYCLES"/>
	                </event>
	                <event
	                    eventDescription="Instruction Length Decoder stalls"
	                    eventId="151" eventName="ILD_STALL">
	                    <eventModifier
	                        description="Instruction Length Decoder stalls, masks:Stall caused by changing prefix length of the instruction" name="ILD_STALL:LCP"/>
	                    <eventModifier
	                        description="Instruction Length Decoder stalls, masks:Stall cycles due to IQ full" name="ILD_STALL:IQ_FULL"/>
	                </event>
	                <event eventDescription="Page walker loads"
	                    eventId="152" eventName="PAGE_WALKER_LOADS">
	                    <eventModifier
	                        description="Page walker loads, masks:Number of DTLB page walker loads that hit in the L1D and line fill buffer" name="PAGE_WALKER_LOADS:DTLB_L1"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of ITLB page walker loads that hit in the L1I and line fill buffer" name="PAGE_WALKER_LOADS:ITLB_L1"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of DTLB page walker loads that hit in the L2" name="PAGE_WALKER_LOADS:DTLB_L2"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of ITLB page walker loads that hit in the L2" name="PAGE_WALKER_LOADS:ITLB_L2"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of DTLB page walker loads that hit in the L3" name="PAGE_WALKER_LOADS:DTLB_L3"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of ITLB page walker loads that hit in the L3" name="PAGE_WALKER_LOADS:ITLB_L3"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit in the L1D and line fill buffer" name="PAGE_WALKER_LOADS:EPT_DTLB_L1"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit in the L1D and line fill buffer" name="PAGE_WALKER_LOADS:EPT_ITLB_L1"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit in the L2" name="PAGE_WALKER_LOADS:EPT_DTLB_L2"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit in the L2" name="PAGE_WALKER_LOADS:EPT_ITLB_L2"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit in the L3" name="PAGE_WALKER_LOADS:EPT_DTLB_L3"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit in the L3" name="PAGE_WALKER_LOADS:EPT_ITLB_L3"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of DTLB page walker loads that hit memory" name="PAGE_WALKER_LOADS:DTLB_MEMORY"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of ITLB page walker loads that hit memory" name="PAGE_WALKER_LOADS:ITLB_MEMORY"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit memory" name="PAGE_WALKER_LOADS:EPT_DTLB_MEMORY"/>
	                    <eventModifier
	                        description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit memory" name="PAGE_WALKER_LOADS:EPT_ITLB_MEMORY"/>
	                </event>
	                <event
	                    eventDescription="Number of DSB to MITE switches"
	                    eventId="153" eventName="DSB2MITE_SWITCHES">
	                    <eventModifier
	                        description="Number of DSB to MITE switches, masks:Number of DSB to MITE switch true penalty cycles" name="DSB2MITE_SWITCHES:PENALTY_CYCLES"/>
	                    <eventModifier
	                        description="Number of DSB to MITE switches, masks:edge level (may require counter-mask >= 1)" name="DSB2MITE_SWITCHES:e=0"/>
	                    <eventModifier
	                        description="Number of DSB to MITE switches, masks:invert" name="DSB2MITE_SWITCHES:i=0"/>
	                    <eventModifier
	                        description="Number of DSB to MITE switches, masks:counter-mask in range [0-255]" name="DSB2MITE_SWITCHES:c=0"/>
	                    <eventModifier
	                        description="Number of DSB to MITE switches, masks:measure any thread" name="DSB2MITE_SWITCHES:t=0"/>
	                    <eventModifier
	                        description="Number of DSB to MITE switches, masks:monitor only inside transactional memory region" name="DSB2MITE_SWITCHES:intx=0"/>
	                    <eventModifier
	                        description="Number of DSB to MITE switches, masks:do not count occurrences inside aborted transactional memory region" name="DSB2MITE_SWITCHES:intxcp=0"/>
	                    <eventModifier
	                        description="Number of DSB to MITE switches, masks:monitor at user level" name="DSB2MITE_SWITCHES:u=0"/>
	                    <eventModifier
	                        description="Number of DSB to MITE switches, masks:monitor at kernel level" name="DSB2MITE_SWITCHES:k=0"/>
	                </event>
	                <event eventDescription="Extended page table"
	                    eventId="154" eventName="EPT">
	                    <eventModifier
	                        description="Extended page table, masks:Cycles for an extended page table walk" name="EPT:WALK_CYCLES"/>
	                    <eventModifier
	                        description="Extended page table, masks:edge level (may require counter-mask >= 1)" name="EPT:e=0"/>
	                    <eventModifier
	                        description="Extended page table, masks:invert" name="EPT:i=0"/>
	                    <eventModifier
	                        description="Extended page table, masks:counter-mask in range [0-255]" name="EPT:c=0"/>
	                    <eventModifier
	                        description="Extended page table, masks:measure any thread" name="EPT:t=0"/>
	                    <eventModifier
	                        description="Extended page table, masks:monitor only inside transactional memory region" name="EPT:intx=0"/>
	                    <eventModifier
	                        description="Extended page table, masks:do not count occurrences inside aborted transactional memory region" name="EPT:intxcp=0"/>
	                    <eventModifier
	                        description="Extended page table, masks:monitor at user level" name="EPT:u=0"/>
	                    <eventModifier
	                        description="Extended page table, masks:monitor at kernel level" name="EPT:k=0"/>
	                </event>
	                <event
	                    eventDescription="Counts arithmetic multiply operations"
	                    eventId="155" eventName="ARITH">
	                    <eventModifier
	                        description="Counts arithmetic multiply operations, masks:Number of uops executed by divider" name="ARITH:DIVIDER_UOPS"/>
	                    <eventModifier
	                        description="Counts arithmetic multiply operations, masks:edge level (may require counter-mask >= 1)" name="ARITH:e=0"/>
	                    <eventModifier
	                        description="Counts arithmetic multiply operations, masks:invert" name="ARITH:i=0"/>
	                    <eventModifier
	                        description="Counts arithmetic multiply operations, masks:counter-mask in range [0-255]" name="ARITH:c=0"/>
	                    <eventModifier
	                        description="Counts arithmetic multiply operations, masks:measure any thread" name="ARITH:t=0"/>
	                    <eventModifier
	                        description="Counts arithmetic multiply operations, masks:monitor only inside transactional memory region" name="ARITH:intx=0"/>
	                    <eventModifier
	                        description="Counts arithmetic multiply operations, masks:do not count occurrences inside aborted transactional memory region" name="ARITH:intxcp=0"/>
	                    <eventModifier
	                        description="Counts arithmetic multiply operations, masks:monitor at user level" name="ARITH:u=0"/>
	                    <eventModifier
	                        description="Counts arithmetic multiply operations, masks:monitor at kernel level" name="ARITH:k=0"/>
	                </event>
	                <event eventDescription="Counts AVX instructions"
	                    eventId="156" eventName="AVX">
	                    <eventModifier
	                        description="Counts AVX instructions, masks:Approximate counts of AVX and AVX2 256-bit instructions, including non-arithmetic instructions, loads, and stores. May count non-AVX instructions using 256-bit operations" name="AVX:ALL"/>
	                    <eventModifier
	                        description="Counts AVX instructions, masks:edge level (may require counter-mask >= 1)" name="AVX:e=0"/>
	                    <eventModifier
	                        description="Counts AVX instructions, masks:invert" name="AVX:i=0"/>
	                    <eventModifier
	                        description="Counts AVX instructions, masks:counter-mask in range [0-255]" name="AVX:c=0"/>
	                    <eventModifier
	                        description="Counts AVX instructions, masks:measure any thread" name="AVX:t=0"/>
	                    <eventModifier
	                        description="Counts AVX instructions, masks:monitor only inside transactional memory region" name="AVX:intx=0"/>
	                    <eventModifier
	                        description="Counts AVX instructions, masks:do not count occurrences inside aborted transactional memory region" name="AVX:intxcp=0"/>
	                    <eventModifier
	                        description="Counts AVX instructions, masks:monitor at user level" name="AVX:u=0"/>
	                    <eventModifier
	                        description="Counts AVX instructions, masks:monitor at kernel level" name="AVX:k=0"/>
	                </event>
	                <event eventDescription="SuperQueue miscellaneous"
	                    eventId="157" eventName="SQ_MISC">
	                    <eventModifier
	                        description="SuperQueue miscellaneous, masks:Number of split locks in the super queue (SQ)" name="SQ_MISC:SPLIT_LOCK"/>
	                    <eventModifier
	                        description="SuperQueue miscellaneous, masks:edge level (may require counter-mask >= 1)" name="SQ_MISC:e=0"/>
	                    <eventModifier
	                        description="SuperQueue miscellaneous, masks:invert" name="SQ_MISC:i=0"/>
	                    <eventModifier
	                        description="SuperQueue miscellaneous, masks:counter-mask in range [0-255]" name="SQ_MISC:c=0"/>
	                    <eventModifier
	                        description="SuperQueue miscellaneous, masks:measure any thread" name="SQ_MISC:t=0"/>
	                    <eventModifier
	                        description="SuperQueue miscellaneous, masks:monitor only inside transactional memory region" name="SQ_MISC:intx=0"/>
	                    <eventModifier
	                        description="SuperQueue miscellaneous, masks:do not count occurrences inside aborted transactional memory region" name="SQ_MISC:intxcp=0"/>
	                    <eventModifier
	                        description="SuperQueue miscellaneous, masks:monitor at user level" name="SQ_MISC:u=0"/>
	                    <eventModifier
	                        description="SuperQueue miscellaneous, masks:monitor at kernel level" name="SQ_MISC:k=0"/>
	                </event>
	                <event eventDescription="Offcore reqest buffer"
	                    eventId="158" eventName="OFFCORE_REQUESTS_BUFFER">
	                    <eventModifier
	                        description="Offcore reqest buffer, masks:Number of cycles the offcore requests buffer is full" name="OFFCORE_REQUESTS_BUFFER:SQ_FULL"/>
	                    <eventModifier
	                        description="Offcore reqest buffer, masks:edge level (may require counter-mask >= 1)" name="OFFCORE_REQUESTS_BUFFER:e=0"/>
	                    <eventModifier
	                        description="Offcore reqest buffer, masks:invert" name="OFFCORE_REQUESTS_BUFFER:i=0"/>
	                    <eventModifier
	                        description="Offcore reqest buffer, masks:counter-mask in range [0-255]" name="OFFCORE_REQUESTS_BUFFER:c=0"/>
	                    <eventModifier
	                        description="Offcore reqest buffer, masks:measure any thread" name="OFFCORE_REQUESTS_BUFFER:t=0"/>
	                    <eventModifier
	                        description="Offcore reqest buffer, masks:monitor only inside transactional memory region" name="OFFCORE_REQUESTS_BUFFER:intx=0"/>
	                    <eventModifier
	                        description="Offcore reqest buffer, masks:do not count occurrences inside aborted transactional memory region" name="OFFCORE_REQUESTS_BUFFER:intxcp=0"/>
	                    <eventModifier
	                        description="Offcore reqest buffer, masks:monitor at user level" name="OFFCORE_REQUESTS_BUFFER:u=0"/>
	                    <eventModifier
	                        description="Offcore reqest buffer, masks:monitor at kernel level" name="OFFCORE_REQUESTS_BUFFER:k=0"/>
	                </event>
	                <event
	                    eventDescription="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop)"
	                    eventId="159" eventName="OFFCORE_RESPONSE_0">
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch data reads of full and partial cachelines as well as demand data page table entry cacheline reads. Does not count L2 data read prefetches or instruction fetches" name="OFFCORE_RESPONSE_0:DMND_DATA_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch reads for ownership (RFO) requests generated by a write to data cacheline. Does not count L2 RFO prefetches" name="OFFCORE_RESPONSE_0:DMND_RFO"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_0:DMND_CODE_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_0:DMND_IFETCH"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of writebacks (modified to exclusive) transactions" name="OFFCORE_RESPONSE_0:WB"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of data cacheline reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_DATA_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_RFO"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_CODE_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_IFETCH"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for loads" name="OFFCORE_RESPONSE_0:PF_L3_DATA_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetcher" name="OFFCORE_RESPONSE_0:PF_L3_RFO"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_0:PF_L3_CODE_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_0:PF_L3_IFETCH"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_0:SPLIT_LOCK_UC_LOCK"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_0:BUS_LOCKS"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of streaming store requests" name="OFFCORE_RESPONSE_0:STRM_ST"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: counts one of the following transaction types, including L3 invalidate, I/O, full or partial writes, WC or non-temporal stores, CLFLUSH, Fences, lock, unlock, split lock" name="OFFCORE_RESPONSE_0:OTHER"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | DMND_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_0:ANY_CODE_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_0:ANY_IFETCH"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of all request umasks" name="OFFCORE_RESPONSE_0:ANY_REQUEST"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_DATA | PF_DATA_RD | PF_L3_DATA_RD" name="OFFCORE_RESPONSE_0:ANY_DATA"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_RFO | PF_RFO | PF_L3_RFO" name="OFFCORE_RESPONSE_0:ANY_RFO"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Response: count any response type" name="OFFCORE_RESPONSE_0:ANY_RESPONSE"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts number of times supplier information is not available" name="OFFCORE_RESPONSE_0:NO_SUPP"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in M-state (initial lookup)" name="OFFCORE_RESPONSE_0:L3_HITM"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in E-state" name="OFFCORE_RESPONSE_0:L3_HITE"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in S-state" name="OFFCORE_RESPONSE_0:L3_HITS"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in any state (M, E, S)" name="OFFCORE_RESPONSE_0:L3_HIT"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_0:L3_MISS_LOCAL"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_0:L3_MISS"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 supplier hit" name="OFFCORE_RESPONSE_0:SPL_HIT"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times no snoop-related information is available" name="OFFCORE_RESPONSE_0:SNP_NONE"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts the number of times no snoop was needed to satisfy the request" name="OFFCORE_RESPONSE_0:SNP_NOT_NEEDED"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it missed all snooped caches" name="OFFCORE_RESPONSE_0:SNP_MISS"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hit in at leas one snooped cache" name="OFFCORE_RESPONSE_0:SNP_NO_FWD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and data was forwarded from a remote socket" name="OFFCORE_RESPONSE_0:SNP_FWD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache" name="OFFCORE_RESPONSE_0:SNP_HITM"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop:  counts number of times target was a non-DRAM system address. This includes MMIO transactions" name="OFFCORE_RESPONSE_0:SNP_NON_DRAM"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: any snoop reason" name="OFFCORE_RESPONSE_0:SNP_ANY"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:edge level (may require counter-mask >= 1)" name="OFFCORE_RESPONSE_0:e=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:invert" name="OFFCORE_RESPONSE_0:i=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:counter-mask in range [0-255]" name="OFFCORE_RESPONSE_0:c=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:measure any thread" name="OFFCORE_RESPONSE_0:t=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor only inside transactional memory region" name="OFFCORE_RESPONSE_0:intx=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:do not count occurrences inside aborted transactional memory region" name="OFFCORE_RESPONSE_0:intxcp=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at user level" name="OFFCORE_RESPONSE_0:u=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at kernel level" name="OFFCORE_RESPONSE_0:k=0"/>
	                </event>
	                <event
	                    eventDescription="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop)"
	                    eventId="160" eventName="OFFCORE_RESPONSE_1">
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch data reads of full and partial cachelines as well as demand data page table entry cacheline reads. Does not count L2 data read prefetches or instruction fetches" name="OFFCORE_RESPONSE_1:DMND_DATA_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch reads for ownership (RFO) requests generated by a write to data cacheline. Does not count L2 RFO prefetches" name="OFFCORE_RESPONSE_1:DMND_RFO"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_1:DMND_CODE_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_1:DMND_IFETCH"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of writebacks (modified to exclusive) transactions" name="OFFCORE_RESPONSE_1:WB"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of data cacheline reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_DATA_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_RFO"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_CODE_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_IFETCH"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for loads" name="OFFCORE_RESPONSE_1:PF_L3_DATA_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetcher" name="OFFCORE_RESPONSE_1:PF_L3_RFO"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_1:PF_L3_CODE_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_1:PF_L3_IFETCH"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_1:SPLIT_LOCK_UC_LOCK"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_1:BUS_LOCKS"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of streaming store requests" name="OFFCORE_RESPONSE_1:STRM_ST"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: counts one of the following transaction types, including L3 invalidate, I/O, full or partial writes, WC or non-temporal stores, CLFLUSH, Fences, lock, unlock, split lock" name="OFFCORE_RESPONSE_1:OTHER"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | DMND_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_1:ANY_CODE_RD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_1:ANY_IFETCH"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of all request umasks" name="OFFCORE_RESPONSE_1:ANY_REQUEST"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_DATA | PF_DATA_RD | PF_L3_DATA_RD" name="OFFCORE_RESPONSE_1:ANY_DATA"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_RFO | PF_RFO | PF_L3_RFO" name="OFFCORE_RESPONSE_1:ANY_RFO"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Response: count any response type" name="OFFCORE_RESPONSE_1:ANY_RESPONSE"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts number of times supplier information is not available" name="OFFCORE_RESPONSE_1:NO_SUPP"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in M-state (initial lookup)" name="OFFCORE_RESPONSE_1:L3_HITM"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in E-state" name="OFFCORE_RESPONSE_1:L3_HITE"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in S-state" name="OFFCORE_RESPONSE_1:L3_HITS"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in any state (M, E, S)" name="OFFCORE_RESPONSE_1:L3_HIT"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_1:L3_MISS_LOCAL"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_1:L3_MISS"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 supplier hit" name="OFFCORE_RESPONSE_1:SPL_HIT"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times no snoop-related information is available" name="OFFCORE_RESPONSE_1:SNP_NONE"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts the number of times no snoop was needed to satisfy the request" name="OFFCORE_RESPONSE_1:SNP_NOT_NEEDED"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it missed all snooped caches" name="OFFCORE_RESPONSE_1:SNP_MISS"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hit in at leas one snooped cache" name="OFFCORE_RESPONSE_1:SNP_NO_FWD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and data was forwarded from a remote socket" name="OFFCORE_RESPONSE_1:SNP_FWD"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache" name="OFFCORE_RESPONSE_1:SNP_HITM"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop:  counts number of times target was a non-DRAM system address. This includes MMIO transactions" name="OFFCORE_RESPONSE_1:SNP_NON_DRAM"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: any snoop reason" name="OFFCORE_RESPONSE_1:SNP_ANY"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:edge level (may require counter-mask >= 1)" name="OFFCORE_RESPONSE_1:e=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:invert" name="OFFCORE_RESPONSE_1:i=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:counter-mask in range [0-255]" name="OFFCORE_RESPONSE_1:c=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:measure any thread" name="OFFCORE_RESPONSE_1:t=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor only inside transactional memory region" name="OFFCORE_RESPONSE_1:intx=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:do not count occurrences inside aborted transactional memory region" name="OFFCORE_RESPONSE_1:intxcp=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at user level" name="OFFCORE_RESPONSE_1:u=0"/>
	                    <eventModifier
	                        description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at kernel level" name="OFFCORE_RESPONSE_1:k=0"/>
	                </event>
	                <event
	                    eventDescription="perf_events raw event syntax: r[0-9a-fA-F]+"
	                    eventId="161" eventName="perf_raw::r0000">
	                    <eventModifier
	                        description="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at user level" name="perf_raw::r0000:u=0"/>
	                    <eventModifier
	                        description="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at kernel level" name="perf_raw::r0000:k=0"/>
	                    <eventModifier
	                        description="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at hypervisor level" name="perf_raw::r0000:h=0"/>
	                </event>
	            </eventSet>
	            <eventSet type="PRESET">
	                <event eventDescription="Level 1 data cache misses"
	                    eventId="0" eventName="PAPI_L1_DCM"/>
	                <event
	                    eventDescription="Level 1 instruction cache misses"
	                    eventId="1" eventName="PAPI_L1_ICM"/>
	                <event eventDescription="Level 2 data cache misses"
	                    eventId="2" eventName="PAPI_L2_DCM"/>
	                <event
	                    eventDescription="Level 2 instruction cache misses"
	                    eventId="3" eventName="PAPI_L2_ICM"/>
	                <event eventDescription="Level 1 cache misses"
	                    eventId="6" eventName="PAPI_L1_TCM"/>
	                <event eventDescription="Level 2 cache misses"
	                    eventId="7" eventName="PAPI_L2_TCM"/>
	                <event eventDescription="Level 3 cache misses"
	                    eventId="8" eventName="PAPI_L3_TCM"/>
	                <event eventDescription="Requests for a snoop"
	                    eventId="9" eventName="PAPI_CA_SNP"/>
	                <event
	                    eventDescription="Requests for exclusive access to shared cache line"
	                    eventId="10" eventName="PAPI_CA_SHR"/>
	                <event
	                    eventDescription="Requests for exclusive access to clean cache line"
	                    eventId="11" eventName="PAPI_CA_CLN"/>
	                <event
	                    eventDescription="Requests for cache line invalidation"
	                    eventId="12" eventName="PAPI_CA_INV"/>
	                <event
	                    eventDescription="Requests for cache line intervention"
	                    eventId="13" eventName="PAPI_CA_ITV"/>
	                <event eventDescription="Level 3 load misses"
	                    eventId="14" eventName="PAPI_L3_LDM"/>
	                <event
	                    eventDescription="Data translation lookaside buffer misses"
	                    eventId="20" eventName="PAPI_TLB_DM"/>
	                <event
	                    eventDescription="Instruction translation lookaside buffer misses"
	                    eventId="21" eventName="PAPI_TLB_IM"/>
	                <event eventDescription="Level 1 load misses"
	                    eventId="23" eventName="PAPI_L1_LDM"/>
	                <event eventDescription="Level 1 store misses"
	                    eventId="24" eventName="PAPI_L1_STM"/>
	                <event eventDescription="Level 2 load misses"
	                    eventId="25" eventName="PAPI_L2_LDM"/>
	                <event eventDescription="Level 2 store misses"
	                    eventId="26" eventName="PAPI_L2_STM"/>
	                <event eventDescription="Data prefetch cache misses"
	                    eventId="28" eventName="PAPI_PRF_DM"/>
	                <event
	                    eventDescription="Cycles Stalled Waiting for memory writes"
	                    eventId="36" eventName="PAPI_MEM_WCY"/>
	                <event
	                    eventDescription="Cycles with no instruction issue"
	                    eventId="37" eventName="PAPI_STL_ICY"/>
	                <event
	                    eventDescription="Cycles with maximum instruction issue"
	                    eventId="38" eventName="PAPI_FUL_ICY"/>
	                <event
	                    eventDescription="Cycles with no instructions completed"
	                    eventId="39" eventName="PAPI_STL_CCY"/>
	                <event
	                    eventDescription="Cycles with maximum instructions completed"
	                    eventId="40" eventName="PAPI_FUL_CCY"/>
	                <event
	                    eventDescription="Unconditional branch instructions"
	                    eventId="42" eventName="PAPI_BR_UCN"/>
	                <event
	                    eventDescription="Conditional branch instructions"
	                    eventId="43" eventName="PAPI_BR_CN"/>
	                <event
	                    eventDescription="Conditional branch instructions taken"
	                    eventId="44" eventName="PAPI_BR_TKN"/>
	                <event
	                    eventDescription="Conditional branch instructions not taken"
	                    eventId="45" eventName="PAPI_BR_NTK"/>
	                <event
	                    eventDescription="Conditional branch instructions mispredicted"
	                    eventId="46" eventName="PAPI_BR_MSP"/>
	                <event
	                    eventDescription="Conditional branch instructions correctly predicted"
	                    eventId="47" eventName="PAPI_BR_PRC"/>
	                <event eventDescription="Instructions completed"
	                    eventId="50" eventName="PAPI_TOT_INS"/>
	                <event eventDescription="Load instructions"
	                    eventId="53" eventName="PAPI_LD_INS"/>
	                <event eventDescription="Store instructions"
	                    eventId="54" eventName="PAPI_SR_INS"/>
	                <event eventDescription="Branch instructions"
	                    eventId="55" eventName="PAPI_BR_INS"/>
	                <event
	                    eventDescription="Cycles stalled on any resource"
	                    eventId="57" eventName="PAPI_RES_STL"/>
	                <event eventDescription="Total cycles" eventId="59" eventName="PAPI_TOT_CYC"/>
	                <event
	                    eventDescription="Load/store instructions completed"
	                    eventId="60" eventName="PAPI_LST_INS"/>
	                <event
	                    eventDescription="Level 2 data cache accesses"
	                    eventId="65" eventName="PAPI_L2_DCA"/>
	                <event
	                    eventDescription="Level 3 data cache accesses"
	                    eventId="66" eventName="PAPI_L3_DCA"/>
	                <event eventDescription="Level 2 data cache reads"
	                    eventId="68" eventName="PAPI_L2_DCR"/>
	                <event eventDescription="Level 3 data cache reads"
	                    eventId="69" eventName="PAPI_L3_DCR"/>
	                <event eventDescription="Level 2 data cache writes"
	                    eventId="71" eventName="PAPI_L2_DCW"/>
	                <event eventDescription="Level 3 data cache writes"
	                    eventId="72" eventName="PAPI_L3_DCW"/>
	                <event
	                    eventDescription="Level 2 instruction cache hits"
	                    eventId="74" eventName="PAPI_L2_ICH"/>
	                <event
	                    eventDescription="Level 2 instruction cache accesses"
	                    eventId="77" eventName="PAPI_L2_ICA"/>
	                <event
	                    eventDescription="Level 3 instruction cache accesses"
	                    eventId="78" eventName="PAPI_L3_ICA"/>
	                <event
	                    eventDescription="Level 2 instruction cache reads"
	                    eventId="80" eventName="PAPI_L2_ICR"/>
	                <event
	                    eventDescription="Level 3 instruction cache reads"
	                    eventId="81" eventName="PAPI_L3_ICR"/>
	                <event
	                    eventDescription="Level 2 total cache accesses"
	                    eventId="89" eventName="PAPI_L2_TCA"/>
	                <event
	                    eventDescription="Level 3 total cache accesses"
	                    eventId="90" eventName="PAPI_L3_TCA"/>
	                <event eventDescription="Level 2 total cache reads"
	                    eventId="92" eventName="PAPI_L2_TCR"/>
	                <event eventDescription="Level 3 total cache reads"
	                    eventId="93" eventName="PAPI_L3_TCR"/>
	                <event eventDescription="Level 2 total cache writes"
	                    eventId="95" eventName="PAPI_L2_TCW"/>
	                <event eventDescription="Level 3 total cache writes"
	                    eventId="96" eventName="PAPI_L3_TCW"/>
	                <event eventDescription="Reference clock cycles"
	                    eventId="107" eventName="PAPI_REF_CYC"/>
	            </eventSet>
	        </PapiComponent>
	        <event
	            eventDescription="Event to time through PAPI_get_time()"
	            eventId="9999" eventName="Timing"/>
	    </papifyConfig>
	    
        <papifyConfig>
            <coreId coreId="Split"/>
            <PapiComponent componentId="perf_event" componentIndex="0" componentType="CPU">
                <eventSet type="NATIVE">
                    <event
                        eventDescription="count core clock cycles whenever the clock signal on the specific core is running (not halted)"
                        eventId="0" eventName="ix86arch::UNHALTED_CORE_CYCLES">
                        <eventModifier
                            description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask >= 1)" name="ix86arch::UNHALTED_CORE_CYCLES:e=0"/>
                        <eventModifier
                            description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert" name="ix86arch::UNHALTED_CORE_CYCLES:i=0"/>
                        <eventModifier
                            description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]" name="ix86arch::UNHALTED_CORE_CYCLES:c=0"/>
                        <eventModifier
                            description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread" name="ix86arch::UNHALTED_CORE_CYCLES:t=0"/>
                    </event>
                    <event
                        eventDescription="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction"
                        eventId="1" eventName="ix86arch::INSTRUCTION_RETIRED">
                        <eventModifier
                            description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:edge level (may require counter-mask >= 1)" name="ix86arch::INSTRUCTION_RETIRED:e=0"/>
                        <eventModifier
                            description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:invert" name="ix86arch::INSTRUCTION_RETIRED:i=0"/>
                        <eventModifier
                            description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:counter-mask in range [0-255]" name="ix86arch::INSTRUCTION_RETIRED:c=0"/>
                        <eventModifier
                            description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:measure any thread" name="ix86arch::INSTRUCTION_RETIRED:t=0"/>
                    </event>
                    <event
                        eventDescription="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions"
                        eventId="2" eventName="ix86arch::UNHALTED_REFERENCE_CYCLES">
                        <eventModifier
                            description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:edge level (may require counter-mask >= 1)" name="ix86arch::UNHALTED_REFERENCE_CYCLES:e=0"/>
                        <eventModifier
                            description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:invert" name="ix86arch::UNHALTED_REFERENCE_CYCLES:i=0"/>
                        <eventModifier
                            description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:counter-mask in range [0-255]" name="ix86arch::UNHALTED_REFERENCE_CYCLES:c=0"/>
                        <eventModifier
                            description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:measure any thread" name="ix86arch::UNHALTED_REFERENCE_CYCLES:t=0"/>
                    </event>
                    <event
                        eventDescription="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch"
                        eventId="3" eventName="ix86arch::LLC_REFERENCES">
                        <eventModifier
                            description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:edge level (may require counter-mask >= 1)" name="ix86arch::LLC_REFERENCES:e=0"/>
                        <eventModifier
                            description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:invert" name="ix86arch::LLC_REFERENCES:i=0"/>
                        <eventModifier
                            description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:counter-mask in range [0-255]" name="ix86arch::LLC_REFERENCES:c=0"/>
                        <eventModifier
                            description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:measure any thread" name="ix86arch::LLC_REFERENCES:t=0"/>
                    </event>
                    <event
                        eventDescription="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch"
                        eventId="4" eventName="ix86arch::LLC_MISSES">
                        <eventModifier
                            description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:edge level (may require counter-mask >= 1)" name="ix86arch::LLC_MISSES:e=0"/>
                        <eventModifier
                            description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:invert" name="ix86arch::LLC_MISSES:i=0"/>
                        <eventModifier
                            description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:counter-mask in range [0-255]" name="ix86arch::LLC_MISSES:c=0"/>
                        <eventModifier
                            description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:measure any thread" name="ix86arch::LLC_MISSES:t=0"/>
                    </event>
                    <event
                        eventDescription="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction"
                        eventId="5" eventName="ix86arch::BRANCH_INSTRUCTIONS_RETIRED">
                        <eventModifier
                            description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:edge level (may require counter-mask >= 1)" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:e=0"/>
                        <eventModifier
                            description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:invert" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:i=0"/>
                        <eventModifier
                            description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:counter-mask in range [0-255]" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:c=0"/>
                        <eventModifier
                            description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:measure any thread" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:t=0"/>
                    </event>
                    <event
                        eventDescription="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware"
                        eventId="6" eventName="ix86arch::MISPREDICTED_BRANCH_RETIRED">
                        <eventModifier
                            description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:edge level (may require counter-mask >= 1)" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:e=0"/>
                        <eventModifier
                            description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:invert" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:i=0"/>
                        <eventModifier
                            description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:counter-mask in range [0-255]" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:c=0"/>
                        <eventModifier
                            description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:measure any thread" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:t=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_CPU_CYCLES"
                        eventId="7" eventName="perf::PERF_COUNT_HW_CPU_CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level" name="perf::PERF_COUNT_HW_CPU_CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CPU_CYCLES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_CPU_CYCLES"
                        eventId="8" eventName="perf::CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level" name="perf::CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level" name="perf::CYCLES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_CPU_CYCLES"
                        eventId="9" eventName="perf::CPU-CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level" name="perf::CPU-CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level" name="perf::CPU-CYCLES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_INSTRUCTIONS"
                        eventId="10" eventName="perf::PERF_COUNT_HW_INSTRUCTIONS">
                        <eventModifier
                            description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at user level" name="perf::PERF_COUNT_HW_INSTRUCTIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_INSTRUCTIONS:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_INSTRUCTIONS"
                        eventId="11" eventName="perf::INSTRUCTIONS">
                        <eventModifier
                            description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at user level" name="perf::INSTRUCTIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at kernel level" name="perf::INSTRUCTIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_CACHE_REFERENCES"
                        eventId="12" eventName="perf::PERF_COUNT_HW_CACHE_REFERENCES">
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_REFERENCES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_REFERENCES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_CACHE_REFERENCES"
                        eventId="13" eventName="perf::CACHE-REFERENCES">
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at user level" name="perf::CACHE-REFERENCES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at kernel level" name="perf::CACHE-REFERENCES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_CACHE_MISSES"
                        eventId="14" eventName="perf::PERF_COUNT_HW_CACHE_MISSES">
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_MISSES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_MISSES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_CACHE_MISSES"
                        eventId="15" eventName="perf::CACHE-MISSES">
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at user level" name="perf::CACHE-MISSES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at kernel level" name="perf::CACHE-MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_BRANCH_INSTRUCTIONS"
                        eventId="16" eventName="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS">
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level" name="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_BRANCH_INSTRUCTIONS"
                        eventId="17" eventName="perf::BRANCH-INSTRUCTIONS">
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level" name="perf::BRANCH-INSTRUCTIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level" name="perf::BRANCH-INSTRUCTIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_BRANCH_INSTRUCTIONS"
                        eventId="18" eventName="perf::BRANCHES">
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level" name="perf::BRANCHES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level" name="perf::BRANCHES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_BRANCH_MISSES"
                        eventId="19" eventName="perf::PERF_COUNT_HW_BRANCH_MISSES">
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at user level" name="perf::PERF_COUNT_HW_BRANCH_MISSES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_BRANCH_MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_BRANCH_MISSES"
                        eventId="20" eventName="perf::BRANCH-MISSES">
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at user level" name="perf::BRANCH-MISSES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at kernel level" name="perf::BRANCH-MISSES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_BUS_CYCLES"
                        eventId="21" eventName="perf::PERF_COUNT_HW_BUS_CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at user level" name="perf::PERF_COUNT_HW_BUS_CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_BUS_CYCLES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_BUS_CYCLES"
                        eventId="22" eventName="perf::BUS-CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at user level" name="perf::BUS-CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at kernel level" name="perf::BUS-CYCLES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_REF_CPU_CYCLES"
                        eventId="29" eventName="perf::PERF_COUNT_HW_REF_CPU_CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at user level" name="perf::PERF_COUNT_HW_REF_CPU_CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_REF_CPU_CYCLES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_REF_CPU_CYCLES"
                        eventId="30" eventName="perf::REF-CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at user level" name="perf::REF-CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at kernel level" name="perf::REF-CYCLES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_CPU_CLOCK"
                        eventId="31" eventName="perf::PERF_COUNT_SW_CPU_CLOCK">
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at user level" name="perf::PERF_COUNT_SW_CPU_CLOCK:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_CPU_CLOCK:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_CPU_CLOCK"
                        eventId="32" eventName="perf::CPU-CLOCK">
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at user level" name="perf::CPU-CLOCK:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at kernel level" name="perf::CPU-CLOCK:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_TASK_CLOCK"
                        eventId="33" eventName="perf::PERF_COUNT_SW_TASK_CLOCK">
                        <eventModifier
                            description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at user level" name="perf::PERF_COUNT_SW_TASK_CLOCK:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_TASK_CLOCK:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_TASK_CLOCK"
                        eventId="34" eventName="perf::TASK-CLOCK">
                        <eventModifier
                            description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at user level" name="perf::TASK-CLOCK:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at kernel level" name="perf::TASK-CLOCK:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_PAGE_FAULTS"
                        eventId="35" eventName="perf::PERF_COUNT_SW_PAGE_FAULTS">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level" name="perf::PERF_COUNT_SW_PAGE_FAULTS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_PAGE_FAULTS:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_PAGE_FAULTS"
                        eventId="36" eventName="perf::PAGE-FAULTS">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level" name="perf::PAGE-FAULTS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level" name="perf::PAGE-FAULTS:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_PAGE_FAULTS"
                        eventId="37" eventName="perf::FAULTS">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level" name="perf::FAULTS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level" name="perf::FAULTS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CONTEXT_SWITCHES"
                        eventId="38" eventName="perf::PERF_COUNT_SW_CONTEXT_SWITCHES">
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level" name="perf::PERF_COUNT_SW_CONTEXT_SWITCHES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_CONTEXT_SWITCHES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CONTEXT_SWITCHES"
                        eventId="39" eventName="perf::CONTEXT-SWITCHES">
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level" name="perf::CONTEXT-SWITCHES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level" name="perf::CONTEXT-SWITCHES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CONTEXT_SWITCHES"
                        eventId="40" eventName="perf::CS">
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level" name="perf::CS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level" name="perf::CS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CPU_MIGRATIONS"
                        eventId="41" eventName="perf::PERF_COUNT_SW_CPU_MIGRATIONS">
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level" name="perf::PERF_COUNT_SW_CPU_MIGRATIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_CPU_MIGRATIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CPU_MIGRATIONS"
                        eventId="42" eventName="perf::CPU-MIGRATIONS">
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level" name="perf::CPU-MIGRATIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level" name="perf::CPU-MIGRATIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CPU_MIGRATIONS"
                        eventId="43" eventName="perf::MIGRATIONS">
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level" name="perf::MIGRATIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level" name="perf::MIGRATIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MIN"
                        eventId="44" eventName="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at user level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MIN"
                        eventId="45" eventName="perf::MINOR-FAULTS">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at user level" name="perf::MINOR-FAULTS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at kernel level" name="perf::MINOR-FAULTS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MAJ"
                        eventId="46" eventName="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at user level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MAJ"
                        eventId="47" eventName="perf::MAJOR-FAULTS">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at user level" name="perf::MAJOR-FAULTS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at kernel level" name="perf::MAJOR-FAULTS:k=0"/>
                    </event>
                    <event eventDescription="L1 data cache" eventId="48" eventName="perf::PERF_COUNT_HW_CACHE_L1D">
                        <eventModifier
                            description="L1 data cache, masks:read access" name="perf::PERF_COUNT_HW_CACHE_L1D:READ"/>
                    </event>
                    <event eventDescription="L1 cache load accesses"
                        eventId="49" eventName="perf::L1-DCACHE-LOADS">
                        <eventModifier
                            description="L1 cache load accesses, masks:monitor at user level" name="perf::L1-DCACHE-LOADS:u=0"/>
                        <eventModifier
                            description="L1 cache load accesses, masks:monitor at kernel level" name="perf::L1-DCACHE-LOADS:k=0"/>
                    </event>
                    <event eventDescription="L1 cache load misses"
                        eventId="50" eventName="perf::L1-DCACHE-LOAD-MISSES">
                        <eventModifier
                            description="L1 cache load misses, masks:monitor at user level" name="perf::L1-DCACHE-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="L1 cache load misses, masks:monitor at kernel level" name="perf::L1-DCACHE-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="L1 cache store accesses"
                        eventId="51" eventName="perf::L1-DCACHE-STORES">
                        <eventModifier
                            description="L1 cache store accesses, masks:monitor at user level" name="perf::L1-DCACHE-STORES:u=0"/>
                        <eventModifier
                            description="L1 cache store accesses, masks:monitor at kernel level" name="perf::L1-DCACHE-STORES:k=0"/>
                    </event>
                    <event eventDescription="L1 instruction cache"
                        eventId="55" eventName="perf::PERF_COUNT_HW_CACHE_L1I">
                        <eventModifier
                            description="L1 instruction cache, masks:read access" name="perf::PERF_COUNT_HW_CACHE_L1I:READ"/>
                    </event>
                    <event eventDescription="L1I cache load misses"
                        eventId="57" eventName="perf::L1-ICACHE-LOAD-MISSES">
                        <eventModifier
                            description="L1I cache load misses, masks:monitor at user level" name="perf::L1-ICACHE-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="L1I cache load misses, masks:monitor at kernel level" name="perf::L1-ICACHE-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="Last level cache"
                        eventId="60" eventName="perf::PERF_COUNT_HW_CACHE_LL">
                        <eventModifier
                            description="Last level cache, masks:read access" name="perf::PERF_COUNT_HW_CACHE_LL:READ"/>
                        <eventModifier
                            description="Last level cache, masks:write access" name="perf::PERF_COUNT_HW_CACHE_LL:WRITE"/>
                    </event>
                    <event
                        eventDescription="Last level cache load accesses"
                        eventId="61" eventName="perf::LLC-LOADS">
                        <eventModifier
                            description="Last level cache load accesses, masks:monitor at user level" name="perf::LLC-LOADS:u=0"/>
                        <eventModifier
                            description="Last level cache load accesses, masks:monitor at kernel level" name="perf::LLC-LOADS:k=0"/>
                    </event>
                    <event
                        eventDescription="Last level cache load misses"
                        eventId="62" eventName="perf::LLC-LOAD-MISSES">
                        <eventModifier
                            description="Last level cache load misses, masks:monitor at user level" name="perf::LLC-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="Last level cache load misses, masks:monitor at kernel level" name="perf::LLC-LOAD-MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="Last level cache store accesses"
                        eventId="63" eventName="perf::LLC-STORES">
                        <eventModifier
                            description="Last level cache store accesses, masks:monitor at user level" name="perf::LLC-STORES:u=0"/>
                        <eventModifier
                            description="Last level cache store accesses, masks:monitor at kernel level" name="perf::LLC-STORES:k=0"/>
                    </event>
                    <event
                        eventDescription="Last level cache store misses"
                        eventId="64" eventName="perf::LLC-STORE-MISSES">
                        <eventModifier
                            description="Last level cache store misses, masks:monitor at user level" name="perf::LLC-STORE-MISSES:u=0"/>
                        <eventModifier
                            description="Last level cache store misses, masks:monitor at kernel level" name="perf::LLC-STORE-MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="Data Translation Lookaside Buffer"
                        eventId="67" eventName="perf::PERF_COUNT_HW_CACHE_DTLB">
                        <eventModifier
                            description="Data Translation Lookaside Buffer, masks:read access" name="perf::PERF_COUNT_HW_CACHE_DTLB:READ"/>
                        <eventModifier
                            description="Data Translation Lookaside Buffer, masks:write access" name="perf::PERF_COUNT_HW_CACHE_DTLB:WRITE"/>
                    </event>
                    <event eventDescription="Data TLB load accesses"
                        eventId="68" eventName="perf::DTLB-LOADS">
                        <eventModifier
                            description="Data TLB load accesses, masks:monitor at user level" name="perf::DTLB-LOADS:u=0"/>
                        <eventModifier
                            description="Data TLB load accesses, masks:monitor at kernel level" name="perf::DTLB-LOADS:k=0"/>
                    </event>
                    <event eventDescription="Data TLB load misses"
                        eventId="69" eventName="perf::DTLB-LOAD-MISSES">
                        <eventModifier
                            description="Data TLB load misses, masks:monitor at user level" name="perf::DTLB-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="Data TLB load misses, masks:monitor at kernel level" name="perf::DTLB-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="Data TLB store accesses"
                        eventId="70" eventName="perf::DTLB-STORES">
                        <eventModifier
                            description="Data TLB store accesses, masks:monitor at user level" name="perf::DTLB-STORES:u=0"/>
                        <eventModifier
                            description="Data TLB store accesses, masks:monitor at kernel level" name="perf::DTLB-STORES:k=0"/>
                    </event>
                    <event eventDescription="Data TLB store misses"
                        eventId="71" eventName="perf::DTLB-STORE-MISSES">
                        <eventModifier
                            description="Data TLB store misses, masks:monitor at user level" name="perf::DTLB-STORE-MISSES:u=0"/>
                        <eventModifier
                            description="Data TLB store misses, masks:monitor at kernel level" name="perf::DTLB-STORE-MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="Instruction Translation Lookaside Buffer"
                        eventId="74" eventName="perf::PERF_COUNT_HW_CACHE_ITLB">
                        <eventModifier
                            description="Instruction Translation Lookaside Buffer, masks:read access" name="perf::PERF_COUNT_HW_CACHE_ITLB:READ"/>
                        <eventModifier
                            description="Instruction Translation Lookaside Buffer, masks:hit access" name="perf::PERF_COUNT_HW_CACHE_ITLB:ACCESS"/>
                        <eventModifier
                            description="Instruction Translation Lookaside Buffer, masks:miss access" name="perf::PERF_COUNT_HW_CACHE_ITLB:MISS"/>
                        <eventModifier
                            description="Instruction Translation Lookaside Buffer, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_ITLB:u=0"/>
                        <eventModifier
                            description="Instruction Translation Lookaside Buffer, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_ITLB:k=0"/>
                    </event>
                    <event
                        eventDescription="Instruction TLB load accesses"
                        eventId="75" eventName="perf::ITLB-LOADS">
                        <eventModifier
                            description="Instruction TLB load accesses, masks:monitor at user level" name="perf::ITLB-LOADS:u=0"/>
                        <eventModifier
                            description="Instruction TLB load accesses, masks:monitor at kernel level" name="perf::ITLB-LOADS:k=0"/>
                    </event>
                    <event
                        eventDescription="Instruction TLB load misses"
                        eventId="76" eventName="perf::ITLB-LOAD-MISSES">
                        <eventModifier
                            description="Instruction TLB load misses, masks:monitor at user level" name="perf::ITLB-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="Instruction TLB load misses, masks:monitor at kernel level" name="perf::ITLB-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="Branch Prediction Unit"
                        eventId="77" eventName="perf::PERF_COUNT_HW_CACHE_BPU">
                        <eventModifier
                            description="Branch Prediction Unit, masks:read access" name="perf::PERF_COUNT_HW_CACHE_BPU:READ"/>
                        <eventModifier
                            description="Branch Prediction Unit, masks:hit access" name="perf::PERF_COUNT_HW_CACHE_BPU:ACCESS"/>
                        <eventModifier
                            description="Branch Prediction Unit, masks:miss access" name="perf::PERF_COUNT_HW_CACHE_BPU:MISS"/>
                        <eventModifier
                            description="Branch Prediction Unit, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_BPU:u=0"/>
                        <eventModifier
                            description="Branch Prediction Unit, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_BPU:k=0"/>
                    </event>
                    <event eventDescription="Branch  load accesses"
                        eventId="78" eventName="perf::BRANCH-LOADS">
                        <eventModifier
                            description="Branch  load accesses, masks:monitor at user level" name="perf::BRANCH-LOADS:u=0"/>
                        <eventModifier
                            description="Branch  load accesses, masks:monitor at kernel level" name="perf::BRANCH-LOADS:k=0"/>
                    </event>
                    <event eventDescription="Branch  load misses"
                        eventId="79" eventName="perf::BRANCH-LOAD-MISSES">
                        <eventModifier
                            description="Branch  load misses, masks:monitor at user level" name="perf::BRANCH-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="Branch  load misses, masks:monitor at kernel level" name="perf::BRANCH-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="Node memory access"
                        eventId="80" eventName="perf::PERF_COUNT_HW_CACHE_NODE">
                        <eventModifier
                            description="Node memory access, masks:read access" name="perf::PERF_COUNT_HW_CACHE_NODE:READ"/>
                        <eventModifier
                            description="Node memory access, masks:write access" name="perf::PERF_COUNT_HW_CACHE_NODE:WRITE"/>
                    </event>
                    <event eventDescription="Node  load accesses"
                        eventId="81" eventName="perf::NODE-LOADS">
                        <eventModifier
                            description="Node  load accesses, masks:monitor at user level" name="perf::NODE-LOADS:u=0"/>
                        <eventModifier
                            description="Node  load accesses, masks:monitor at kernel level" name="perf::NODE-LOADS:k=0"/>
                    </event>
                    <event eventDescription="Node  load misses"
                        eventId="82" eventName="perf::NODE-LOAD-MISSES">
                        <eventModifier
                            description="Node  load misses, masks:monitor at user level" name="perf::NODE-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="Node  load misses, masks:monitor at kernel level" name="perf::NODE-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="Node  store accesses"
                        eventId="83" eventName="perf::NODE-STORES">
                        <eventModifier
                            description="Node  store accesses, masks:monitor at user level" name="perf::NODE-STORES:u=0"/>
                        <eventModifier
                            description="Node  store accesses, masks:monitor at kernel level" name="perf::NODE-STORES:k=0"/>
                    </event>
                    <event eventDescription="Node  store misses"
                        eventId="84" eventName="perf::NODE-STORE-MISSES">
                        <eventModifier
                            description="Node  store misses, masks:monitor at user level" name="perf::NODE-STORE-MISSES:u=0"/>
                        <eventModifier
                            description="Node  store misses, masks:monitor at kernel level" name="perf::NODE-STORE-MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="Count core clock cycles whenever the clock signal on the specific core is running (not halted)"
                        eventId="87" eventName="UNHALTED_CORE_CYCLES">
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask >= 1)" name="UNHALTED_CORE_CYCLES:e=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert" name="UNHALTED_CORE_CYCLES:i=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]" name="UNHALTED_CORE_CYCLES:c=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread" name="UNHALTED_CORE_CYCLES:t=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor only inside transactional memory region" name="UNHALTED_CORE_CYCLES:intx=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:do not count occurrences inside aborted transactional memory region" name="UNHALTED_CORE_CYCLES:intxcp=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at user level" name="UNHALTED_CORE_CYCLES:u=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at kernel level" name="UNHALTED_CORE_CYCLES:k=0"/>
                    </event>
                    <event eventDescription="Unhalted reference cycles"
                        eventId="88" eventName="UNHALTED_REFERENCE_CYCLES">
                        <eventModifier
                            description="Unhalted reference cycles, masks:measure any thread" name="UNHALTED_REFERENCE_CYCLES:t=0"/>
                        <eventModifier
                            description="Unhalted reference cycles, masks:monitor at user level" name="UNHALTED_REFERENCE_CYCLES:u=0"/>
                        <eventModifier
                            description="Unhalted reference cycles, masks:monitor at kernel level" name="UNHALTED_REFERENCE_CYCLES:k=0"/>
                    </event>
                    <event
                        eventDescription="Number of instructions at retirement"
                        eventId="89" eventName="INSTRUCTION_RETIRED">
                        <eventModifier
                            description="Number of instructions at retirement, masks:edge level (may require counter-mask >= 1)" name="INSTRUCTION_RETIRED:e=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:invert" name="INSTRUCTION_RETIRED:i=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:counter-mask in range [0-255]" name="INSTRUCTION_RETIRED:c=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:measure any thread" name="INSTRUCTION_RETIRED:t=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:monitor only inside transactional memory region" name="INSTRUCTION_RETIRED:intx=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:do not count occurrences inside aborted transactional memory region" name="INSTRUCTION_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:monitor at user level" name="INSTRUCTION_RETIRED:u=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:monitor at kernel level" name="INSTRUCTION_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="This is an alias for INSTRUCTION_RETIRED"
                        eventId="90" eventName="INSTRUCTIONS_RETIRED">
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:edge level (may require counter-mask >= 1)" name="INSTRUCTIONS_RETIRED:e=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:invert" name="INSTRUCTIONS_RETIRED:i=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:counter-mask in range [0-255]" name="INSTRUCTIONS_RETIRED:c=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:measure any thread" name="INSTRUCTIONS_RETIRED:t=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:monitor only inside transactional memory region" name="INSTRUCTIONS_RETIRED:intx=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:do not count occurrences inside aborted transactional memory region" name="INSTRUCTIONS_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:monitor at user level" name="INSTRUCTIONS_RETIRED:u=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:monitor at kernel level" name="INSTRUCTIONS_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction"
                        eventId="91" eventName="BRANCH_INSTRUCTIONS_RETIRED">
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:edge level (may require counter-mask >= 1)" name="BRANCH_INSTRUCTIONS_RETIRED:e=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:invert" name="BRANCH_INSTRUCTIONS_RETIRED:i=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:counter-mask in range [0-255]" name="BRANCH_INSTRUCTIONS_RETIRED:c=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:measure any thread" name="BRANCH_INSTRUCTIONS_RETIRED:t=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor only inside transactional memory region" name="BRANCH_INSTRUCTIONS_RETIRED:intx=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:do not count occurrences inside aborted transactional memory region" name="BRANCH_INSTRUCTIONS_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor at user level" name="BRANCH_INSTRUCTIONS_RETIRED:u=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor at kernel level" name="BRANCH_INSTRUCTIONS_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware"
                        eventId="92" eventName="MISPREDICTED_BRANCH_RETIRED">
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:edge level (may require counter-mask >= 1)" name="MISPREDICTED_BRANCH_RETIRED:e=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:invert" name="MISPREDICTED_BRANCH_RETIRED:i=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:counter-mask in range [0-255]" name="MISPREDICTED_BRANCH_RETIRED:c=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:measure any thread" name="MISPREDICTED_BRANCH_RETIRED:t=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor only inside transactional memory region" name="MISPREDICTED_BRANCH_RETIRED:intx=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:do not count occurrences inside aborted transactional memory region" name="MISPREDICTED_BRANCH_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor at user level" name="MISPREDICTED_BRANCH_RETIRED:u=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor at kernel level" name="MISPREDICTED_BRANCH_RETIRED:k=0"/>
                    </event>
                    <event eventDescription="Branch re-steered"
                        eventId="93" eventName="BACLEARS">
                        <eventModifier
                            description="Branch re-steered, masks:Counts the number of times the front end is re-steered, mainly when the BPU cannot provide a correct prediction and this is corrected by other branch handling mechanisms at the front end" name="BACLEARS:ANY"/>
                        <eventModifier
                            description="Branch re-steered, masks:edge level (may require counter-mask >= 1)" name="BACLEARS:e=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:invert" name="BACLEARS:i=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:counter-mask in range [0-255]" name="BACLEARS:c=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:measure any thread" name="BACLEARS:t=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:monitor only inside transactional memory region" name="BACLEARS:intx=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:do not count occurrences inside aborted transactional memory region" name="BACLEARS:intxcp=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:monitor at user level" name="BACLEARS:u=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:monitor at kernel level" name="BACLEARS:k=0"/>
                    </event>
                    <event
                        eventDescription="Branch instructions executed"
                        eventId="94" eventName="BR_INST_EXEC">
                        <eventModifier
                            description="Branch instructions executed, masks:All macro conditional nontaken branch instructions" name="BR_INST_EXEC:NONTAKEN_CONDITIONAL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:All macro conditional nontaken branch instructions" name="BR_INST_EXEC:NONTAKEN_COND"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired macro-conditional branches" name="BR_INST_EXEC:TAKEN_CONDITIONAL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired macro-conditional branches" name="BR_INST_EXEC:TAKEN_COND"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired macro-conditional branch instructions excluding calls and indirects" name="BR_INST_EXEC:TAKEN_DIRECT_JUMP"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired indirect branches excluding calls and returns" name="BR_INST_EXEC:TAKEN_INDIRECT_JUMP_NON_CALL_RET"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired indirect branches with return mnemonic" name="BR_INST_EXEC:TAKEN_INDIRECT_NEAR_RETURN"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired direct near calls" name="BR_INST_EXEC:TAKEN_DIRECT_NEAR_CALL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired macro-conditional branches" name="BR_INST_EXEC:ALL_CONDITIONAL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired macro-conditional branches" name="BR_INST_EXEC:ALL_COND"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired macro-conditional branches" name="BR_INST_EXEC:ANY_COND"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired macro-unconditional branches excluding calls and indirects" name="BR_INST_EXEC:ALL_DIRECT_JMP"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired indirect branches excluding calls and returns" name="BR_INST_EXEC:ALL_INDIRECT_JUMP_NON_CALL_RET"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired indirect return branches" name="BR_INST_EXEC:ALL_INDIRECT_NEAR_RETURN"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired direct near calls" name="BR_INST_EXEC:ALL_DIRECT_NEAR_CALL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:All indirect calls, including both register and memory indirect" name="BR_INST_EXEC:TAKEN_INDIRECT_NEAR_CALL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:All branch instructions executed" name="BR_INST_EXEC:ALL_BRANCHES"/>
                        <eventModifier
                            description="Branch instructions executed, masks:edge level (may require counter-mask >= 1)" name="BR_INST_EXEC:e=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:invert" name="BR_INST_EXEC:i=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:counter-mask in range [0-255]" name="BR_INST_EXEC:c=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:measure any thread" name="BR_INST_EXEC:t=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:monitor only inside transactional memory region" name="BR_INST_EXEC:intx=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:do not count occurrences inside aborted transactional memory region" name="BR_INST_EXEC:intxcp=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:monitor at user level" name="BR_INST_EXEC:u=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:monitor at kernel level" name="BR_INST_EXEC:k=0"/>
                    </event>
                    <event
                        eventDescription="Branch instructions retired (Precise Event)"
                        eventId="95" eventName="BR_INST_RETIRED">
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro conditional branch instructions" name="BR_INST_RETIRED:CONDITIONAL"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro conditional branch instructions" name="BR_INST_RETIRED:COND"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts all macro direct and indirect near calls" name="BR_INST_RETIRED:NEAR_CALL"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro branches including far branches (architectural event)" name="BR_INST_RETIRED:ALL_BRANCHES"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts the number of near ret instructions retired" name="BR_INST_RETIRED:NEAR_RETURN"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts all not taken macro branch instructions retired" name="BR_INST_RETIRED:NOT_TAKEN"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts the number of near branch taken instructions retired" name="BR_INST_RETIRED:NEAR_TAKEN"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts the number of far branch instructions retired" name="BR_INST_RETIRED:FAR_BRANCH"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:edge level (may require counter-mask >= 1)" name="BR_INST_RETIRED:e=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:invert" name="BR_INST_RETIRED:i=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:counter-mask in range [0-255]" name="BR_INST_RETIRED:c=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:measure any thread" name="BR_INST_RETIRED:t=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:monitor only inside transactional memory region" name="BR_INST_RETIRED:intx=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="BR_INST_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:monitor at user level" name="BR_INST_RETIRED:u=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:monitor at kernel level" name="BR_INST_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Mispredicted branches executed"
                        eventId="96" eventName="BR_MISP_EXEC">
                        <eventModifier
                            description="Mispredicted branches executed, masks:Not taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:NONTAKEN_CONDITIONAL"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Not taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:NONTAKEN_COND"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:TAKEN_CONDITIONAL"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:TAKEN_COND"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted indirect branches excluding calls and returns" name="BR_MISP_EXEC:TAKEN_INDIRECT_JUMP_NON_CALL_RET"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted indirect branches with return mnemonic" name="BR_MISP_EXEC:TAKEN_RETURN_NEAR"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:ALL_CONDITIONAL"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:ANY_COND"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:All mispredicted indirect branches that are not calls nor returns" name="BR_MISP_EXEC:ALL_INDIRECT_JUMP_NON_CALL_RET"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:ALL_BRANCHES"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted indirect calls" name="BR_MISP_EXEC:TAKEN_INDIRECT_NEAR_CALL"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:edge level (may require counter-mask >= 1)" name="BR_MISP_EXEC:e=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:invert" name="BR_MISP_EXEC:i=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:counter-mask in range [0-255]" name="BR_MISP_EXEC:c=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:measure any thread" name="BR_MISP_EXEC:t=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:monitor only inside transactional memory region" name="BR_MISP_EXEC:intx=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:do not count occurrences inside aborted transactional memory region" name="BR_MISP_EXEC:intxcp=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:monitor at user level" name="BR_MISP_EXEC:u=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:monitor at kernel level" name="BR_MISP_EXEC:k=0"/>
                    </event>
                    <event
                        eventDescription="Mispredicted retired branches (Precise Event)"
                        eventId="97" eventName="BR_MISP_RETIRED">
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:All mispredicted macro conditional branch instructions" name="BR_MISP_RETIRED:CONDITIONAL"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:All mispredicted macro conditional branch instructions" name="BR_MISP_RETIRED:COND"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:All mispredicted macro branches (architectural event)" name="BR_MISP_RETIRED:ALL_BRANCHES"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:number of near branch instructions retired that were mispredicted and taken" name="BR_MISP_RETIRED:NEAR_TAKEN"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:edge level (may require counter-mask >= 1)" name="BR_MISP_RETIRED:e=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:invert" name="BR_MISP_RETIRED:i=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:counter-mask in range [0-255]" name="BR_MISP_RETIRED:c=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:measure any thread" name="BR_MISP_RETIRED:t=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:monitor only inside transactional memory region" name="BR_MISP_RETIRED:intx=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="BR_MISP_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:monitor at user level" name="BR_MISP_RETIRED:u=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:monitor at kernel level" name="BR_MISP_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Unhalted core cycles at a specific ring level"
                        eventId="98" eventName="CPL_CYCLES">
                        <eventModifier
                            description="Unhalted core cycles at a specific ring level, masks:Unhalted core cycles when the thread is in ring 0" name="CPL_CYCLES:RING0"/>
                        <eventModifier
                            description="Unhalted core cycles at a specific ring level, masks:Unhalted core cycles when thread is in rings 1, 2, or 3" name="CPL_CYCLES:RING123"/>
                        <eventModifier
                            description="Unhalted core cycles at a specific ring level, masks:Number of intervals between processor halts while thread is in ring 0" name="CPL_CYCLES:RING0_TRANS"/>
                    </event>
                    <event
                        eventDescription="Count core clock cycles whenever the clock signal on the specific core is running (not halted)"
                        eventId="99" eventName="CPU_CLK_THREAD_UNHALTED">
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:Count Xclk pulses (100Mhz) when the core is unhalted" name="CPU_CLK_THREAD_UNHALTED:REF_XCLK"/>
                    </event>
                    <event
                        eventDescription="Count core clock cycles whenever the clock signal on the specific core is running (not halted)"
                        eventId="100" eventName="CPU_CLK_UNHALTED">
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask >= 1)" name="CPU_CLK_UNHALTED:e=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert" name="CPU_CLK_UNHALTED:i=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]" name="CPU_CLK_UNHALTED:c=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread" name="CPU_CLK_UNHALTED:t=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor only inside transactional memory region" name="CPU_CLK_UNHALTED:intx=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:do not count occurrences inside aborted transactional memory region" name="CPU_CLK_UNHALTED:intxcp=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at user level" name="CPU_CLK_UNHALTED:u=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at kernel level" name="CPU_CLK_UNHALTED:k=0"/>
                    </event>
                    <event eventDescription="Stalled cycles"
                        eventId="101" eventName="CYCLE_ACTIVITY">
                        <eventModifier
                            description="Stalled cycles, masks:Cycles with pending L2 miss loads (must use with HT off only)" name="CYCLE_ACTIVITY:CYCLES_L2_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Cycles with pending memory loads" name="CYCLE_ACTIVITY:CYCLES_LDM_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Cycles with pending L1D load cache misses" name="CYCLE_ACTIVITY:CYCLES_L1D_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Executions stalls due to pending L1D load cache misses" name="CYCLE_ACTIVITY:STALLS_L1D_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Execution stalls due to L2 pending loads (must use with HT off only)" name="CYCLE_ACTIVITY:STALLS_L2_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Execution stalls due to memory subsystem" name="CYCLE_ACTIVITY:STALLS_LDM_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Cycles during which no instructions were executed in the execution stage of the pipeline" name="CYCLE_ACTIVITY:CYCLES_NO_EXECUTE"/>
                    </event>
                    <event eventDescription="Data TLB load misses"
                        eventId="102" eventName="DTLB_LOAD_MISSES">
                        <eventModifier
                            description="Data TLB load misses, masks:Misses in all DTLB levels that cause page walks" name="DTLB_LOAD_MISSES:MISS_CAUSES_A_WALK"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Misses in all TLB levels causes a page walk that completes (4K)" name="DTLB_LOAD_MISSES:WALK_COMPLETED_4K"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Misses in all TLB levels causes a page walk that completes (2M/4M)" name="DTLB_LOAD_MISSES:WALK_COMPLETED_2M_4M"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Misses in all TLB levels causes a page walk of any page size that completes" name="DTLB_LOAD_MISSES:WALK_COMPLETED"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Cycles when PMH is busy with page walks" name="DTLB_LOAD_MISSES:WALK_DURATION"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Misses that miss the DTLB and hit the STLB (4K)" name="DTLB_LOAD_MISSES:STLB_HIT_4K"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Misses that miss the DTLB and hit the STLB (2M)" name="DTLB_LOAD_MISSES:STLB_HIT_2M"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Number of cache load STLB hits. No page walk" name="DTLB_LOAD_MISSES:STLB_HIT"/>
                        <eventModifier
                            description="Data TLB load misses, masks:DTLB misses with low part of linear-to-physical address translation missed" name="DTLB_LOAD_MISSES:PDE_CACHE_MISS"/>
                    </event>
                    <event eventDescription="Data TLB store misses"
                        eventId="103" eventName="DTLB_STORE_MISSES">
                        <eventModifier
                            description="Data TLB store misses, masks:Misses in all DTLB levels that cause page walks" name="DTLB_STORE_MISSES:MISS_CAUSES_A_WALK"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Misses in all TLB levels causes a page walk that completes (4K)" name="DTLB_STORE_MISSES:WALK_COMPLETED_4K"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Misses in all TLB levels causes a page walk that completes (2M/4M)" name="DTLB_STORE_MISSES:WALK_COMPLETED_2M_4M"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Misses in all TLB levels causes a page walk of any page size that completes" name="DTLB_STORE_MISSES:WALK_COMPLETED"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Cycles when PMH is busy with page walks" name="DTLB_STORE_MISSES:WALK_DURATION"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Misses that miss the DTLB and hit the STLB (4K)" name="DTLB_STORE_MISSES:STLB_HIT_4K"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Misses that miss the DTLB and hit the STLB (2M)" name="DTLB_STORE_MISSES:STLB_HIT_2M"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Number of cache load STLB hits. No page walk" name="DTLB_STORE_MISSES:STLB_HIT"/>
                        <eventModifier
                            description="Data TLB store misses, masks:DTLB misses with low part of linear-to-physical address translation missed" name="DTLB_STORE_MISSES:PDE_CACHE_MISS"/>
                    </event>
                    <event eventDescription="X87 floating-point assists"
                        eventId="104" eventName="FP_ASSIST">
                        <eventModifier
                            description="X87 floating-point assists, masks:Number of X87 FP assists due to output values" name="FP_ASSIST:X87_OUTPUT"/>
                        <eventModifier
                            description="X87 floating-point assists, masks:Number of X87 FP assists due to input values" name="FP_ASSIST:X87_INPUT"/>
                        <eventModifier
                            description="X87 floating-point assists, masks:Number of SIMD FP assists due to output values" name="FP_ASSIST:SIMD_OUTPUT"/>
                        <eventModifier
                            description="X87 floating-point assists, masks:Number of SIMD FP assists due to input values" name="FP_ASSIST:SIMD_INPUT"/>
                        <eventModifier
                            description="X87 floating-point assists, masks:Cycles with any input/output SEE or FP assists" name="FP_ASSIST:ANY"/>
                        <eventModifier
                            description="X87 floating-point assists, masks:Cycles with any input and output SSE or FP assist" name="FP_ASSIST:ALL"/>
                    </event>
                    <event
                        eventDescription="HLE execution (Precise Event)"
                        eventId="105" eventName="HLE_RETIRED">
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution started" name="HLE_RETIRED:START"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution successfully committed" name="HLE_RETIRED:COMMIT"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to any reasons (multiple categories may count as one) (Precise Event)" name="HLE_RETIRED:ABORTED"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to various memory events" name="HLE_RETIRED:ABORTED_MISC1"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to uncommon conditions" name="HLE_RETIRED:ABORTED_MISC2"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to HLE-unfriendly instructions" name="HLE_RETIRED:ABORTED_MISC3"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to incompatible memory type" name="HLE_RETIRED:ABORTED_MISC4"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to none of the other 4 reasons (e.g., interrupt)" name="HLE_RETIRED:ABORTED_MISC5"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:edge level (may require counter-mask >= 1)" name="HLE_RETIRED:e=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:invert" name="HLE_RETIRED:i=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:counter-mask in range [0-255]" name="HLE_RETIRED:c=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:measure any thread" name="HLE_RETIRED:t=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:monitor only inside transactional memory region" name="HLE_RETIRED:intx=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="HLE_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:monitor at user level" name="HLE_RETIRED:u=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:monitor at kernel level" name="HLE_RETIRED:k=0"/>
                    </event>
                    <event eventDescription="Instruction Cache"
                        eventId="106" eventName="ICACHE">
                        <eventModifier
                            description="Instruction Cache, masks:Number of Instruction Cache, Streaming Buffer and Victim Cache Misses. Includes Uncacheable accesses" name="ICACHE:MISSES"/>
                        <eventModifier
                            description="Instruction Cache, masks:Number of Instruction Cache, Streaming Buffer and Victim Cache Reads. Includes cacheable and uncacheable accesses and uncacheable fetches" name="ICACHE:HIT"/>
                        <eventModifier
                            description="Instruction Cache, masks:Number of cycles where a code-fetch stalled due to L1 instruction cache miss or an iTLB miss" name="ICACHE:IFETCH_STALL"/>
                    </event>
                    <event eventDescription="IDQ operations"
                        eventId="107" eventName="IDQ">
                        <eventModifier
                            description="IDQ operations, masks:Cycles the Instruction Decode Queue (IDQ) is empty" name="IDQ:EMPTY"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from MITE path" name="IDQ:MITE_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path" name="IDQ:DSB_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Uops initiated by Decode Stream Buffer (DSB) that are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy" name="IDQ:MS_DSB_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Uops initiated by MITE and delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy" name="IDQ:MS_MITE_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of Uops were delivered into Instruction Decode Queue (IDQ) from MS, initiated by Decode Stream Buffer (DSB) or MITE" name="IDQ:MS_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of cycles that Uops were delivered into Instruction Decode Queue (IDQ) when MS_Busy, initiated by Decode Stream Buffer (DSB) or MITE" name="IDQ:MS_UOPS_CYCLES"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of cycles that Uops were delivered into Instruction Decode Queue (IDQ) when MS_Busy, initiated by Decode Stream Buffer (DSB) or MITE" name="IDQ:MS_SWITCHES"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from MITE path" name="IDQ:MITE_UOPS_CYCLES"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path" name="IDQ:DSB_UOPS_CYCLES"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles when uops initiated by Decode Stream Buffer (DSB) are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy" name="IDQ:MS_DSB_UOPS_CYCLES"/>
                        <eventModifier
                            description="IDQ operations, masks:Deliveries to Instruction Decode Queue (IDQ) initiated by Decode Stream Buffer (DSB) while Microcode Sequencer (MS) is busy" name="IDQ:MS_DSB_OCCUR"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles Decode Stream Buffer (DSB) is delivering 4 Uops" name="IDQ:ALL_DSB_CYCLES_4_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles Decode Stream Buffer (DSB) is delivering any Uop" name="IDQ:ALL_DSB_CYCLES_ANY_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles MITE is delivering 4 Uops" name="IDQ:ALL_MITE_CYCLES_4_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles MITE is delivering any Uop" name="IDQ:ALL_MITE_CYCLES_ANY_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from any path" name="IDQ:ALL_MITE_UOPS"/>
                    </event>
                    <event eventDescription="Uops not delivered"
                        eventId="108" eventName="IDQ_UOPS_NOT_DELIVERED">
                        <eventModifier
                            description="Uops not delivered, masks:Count number of non-delivered uops to Resource Allocation Table (RAT)" name="IDQ_UOPS_NOT_DELIVERED:CORE"/>
                        <eventModifier
                            description="Uops not delivered, masks:Cycles per thread when 4 or more uops are not delivered to the Resource Allocation Table (RAT) when backend is not stalled" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_0_UOPS_DELIV_CORE"/>
                        <eventModifier
                            description="Uops not delivered, masks:Cycles per thread when 3 or more uops are not delivered to the Resource Allocation Table (RAT) when backend is not stalled" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_1_UOP_DELIV_CORE"/>
                        <eventModifier
                            description="Uops not delivered, masks:Cycles with less than 2 uops delivered by the front end" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_2_UOP_DELIV_CORE"/>
                        <eventModifier
                            description="Uops not delivered, masks:Cycles with less than 3 uops delivered by the front end" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_3_UOP_DELIV_CORE"/>
                        <eventModifier
                            description="Uops not delivered, masks:Cycles Front-End (FE) delivered 4 uops or Resource Allocation Table (RAT) was stalling FE" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_FE_WAS_OK"/>
                        <eventModifier
                            description="Uops not delivered, masks:edge level (may require counter-mask >= 1)" name="IDQ_UOPS_NOT_DELIVERED:e=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:invert" name="IDQ_UOPS_NOT_DELIVERED:i=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:counter-mask in range [0-255]" name="IDQ_UOPS_NOT_DELIVERED:c=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:measure any thread" name="IDQ_UOPS_NOT_DELIVERED:t=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:monitor only inside transactional memory region" name="IDQ_UOPS_NOT_DELIVERED:intx=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:do not count occurrences inside aborted transactional memory region" name="IDQ_UOPS_NOT_DELIVERED:intxcp=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:monitor at user level" name="IDQ_UOPS_NOT_DELIVERED:u=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:monitor at kernel level" name="IDQ_UOPS_NOT_DELIVERED:k=0"/>
                    </event>
                    <event
                        eventDescription="Number of instructions retired (Precise Event)"
                        eventId="109" eventName="INST_RETIRED">
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:Number of instructions retired. General Counter - architectural event" name="INST_RETIRED:ANY_P"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution (Precise Event)" name="INST_RETIRED:ALL"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:Number of cycles using always true condition" name="INST_RETIRED:TOTAL_CYCLES"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution" name="INST_RETIRED:PREC_DIST"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:X87 FP operations retired with no exceptions. Also counts flows that have several X87 or flows that use X87 uops in the exception handling" name="INST_RETIRED:X87"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:edge level (may require counter-mask >= 1)" name="INST_RETIRED:e=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:invert" name="INST_RETIRED:i=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:counter-mask in range [0-255]" name="INST_RETIRED:c=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:measure any thread" name="INST_RETIRED:t=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:monitor only inside transactional memory region" name="INST_RETIRED:intx=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="INST_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:monitor at user level" name="INST_RETIRED:u=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:monitor at kernel level" name="INST_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Miscellaneous interruptions"
                        eventId="110" eventName="INT_MISC">
                        <eventModifier
                            description="Miscellaneous interruptions, masks:Cycles waiting for the checkpoints in Resource Allocation Table (RAT) to be recovered after Nuke due to all other cases except JEClear (e.g. whenever a ucode assist is needed like SSE exception, memory disambiguation, etc...)" name="INT_MISC:RECOVERY_CYCLES"/>
                    </event>
                    <event eventDescription="Instruction TLB"
                        eventId="111" eventName="ITLB">
                        <eventModifier
                            description="Instruction TLB, masks:Flushing of the Instruction TLB (ITLB) pages independent of page size" name="ITLB:ITLB_FLUSH"/>
                        <eventModifier
                            description="Instruction TLB, masks:edge level (may require counter-mask >= 1)" name="ITLB:e=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:invert" name="ITLB:i=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:counter-mask in range [0-255]" name="ITLB:c=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:measure any thread" name="ITLB:t=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:monitor only inside transactional memory region" name="ITLB:intx=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:do not count occurrences inside aborted transactional memory region" name="ITLB:intxcp=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:monitor at user level" name="ITLB:u=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:monitor at kernel level" name="ITLB:k=0"/>
                    </event>
                    <event eventDescription="Instruction TLB misses"
                        eventId="112" eventName="ITLB_MISSES">
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses in all DTLB levels that cause page walks" name="ITLB_MISSES:MISS_CAUSES_A_WALK"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses in all TLB levels causes a page walk that completes (4K)" name="ITLB_MISSES:WALK_COMPLETED_4K"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses in all TLB levels causes a page walk that completes (2M/4M)" name="ITLB_MISSES:WALK_COMPLETED_2M_4M"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses in all TLB levels causes a page walk of any page size that completes" name="ITLB_MISSES:WALK_COMPLETED"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Cycles when PMH is busy with page walks" name="ITLB_MISSES:WALK_DURATION"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses that miss the DTLB and hit the STLB (4K)" name="ITLB_MISSES:STLB_HIT_4K"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses that miss the DTLB and hit the STLB (2M)" name="ITLB_MISSES:STLB_HIT_2M"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Number of cache load STLB hits. No page walk" name="ITLB_MISSES:STLB_HIT"/>
                    </event>
                    <event eventDescription="L1D cache" eventId="113" eventName="L1D">
                        <eventModifier
                            description="L1D cache, masks:L1D Data line replacements" name="L1D:REPLACEMENT"/>
                        <eventModifier
                            description="L1D cache, masks:edge level (may require counter-mask >= 1)" name="L1D:e=0"/>
                        <eventModifier
                            description="L1D cache, masks:invert" name="L1D:i=0"/>
                        <eventModifier
                            description="L1D cache, masks:counter-mask in range [0-255]" name="L1D:c=0"/>
                        <eventModifier
                            description="L1D cache, masks:measure any thread" name="L1D:t=0"/>
                        <eventModifier
                            description="L1D cache, masks:monitor only inside transactional memory region" name="L1D:intx=0"/>
                        <eventModifier
                            description="L1D cache, masks:do not count occurrences inside aborted transactional memory region" name="L1D:intxcp=0"/>
                        <eventModifier
                            description="L1D cache, masks:monitor at user level" name="L1D:u=0"/>
                        <eventModifier
                            description="L1D cache, masks:monitor at kernel level" name="L1D:k=0"/>
                    </event>
                    <event eventDescription="L1D pending misses"
                        eventId="114" eventName="L1D_PEND_MISS">
                        <eventModifier
                            description="L1D pending misses, masks:Cycles with L1D load misses outstanding" name="L1D_PEND_MISS:PENDING"/>
                        <eventModifier
                            description="L1D pending misses, masks:Cycles with L1D load misses outstanding" name="L1D_PEND_MISS:PENDING_CYCLES"/>
                        <eventModifier
                            description="L1D pending misses, masks:Number L1D miss outstanding" name="L1D_PEND_MISS:OCCURRENCES"/>
                        <eventModifier
                            description="L1D pending misses, masks:Number L1D miss outstanding" name="L1D_PEND_MISS:EDGE"/>
                        <eventModifier
                            description="L1D pending misses, masks:Number of times a demand request was blocked due to Fill Buffer (FB) unavailability" name="L1D_PEND_MISS:REQUEST_FB_FULL"/>
                        <eventModifier
                            description="L1D pending misses, masks:Number of cycles a demand request was blocked due to Fill Buffer (FB) unavailability" name="L1D_PEND_MISS:FB_FULL"/>
                        <eventModifier
                            description="L1D pending misses, masks:edge level (may require counter-mask >= 1)" name="L1D_PEND_MISS:e=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:invert" name="L1D_PEND_MISS:i=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:counter-mask in range [0-255]" name="L1D_PEND_MISS:c=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:measure any thread" name="L1D_PEND_MISS:t=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:monitor only inside transactional memory region" name="L1D_PEND_MISS:intx=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:do not count occurrences inside aborted transactional memory region" name="L1D_PEND_MISS:intxcp=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:monitor at user level" name="L1D_PEND_MISS:u=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:monitor at kernel level" name="L1D_PEND_MISS:k=0"/>
                    </event>
                    <event
                        eventDescription="Demand Data Read requests to L2"
                        eventId="115" eventName="L2_DEMAND_RQSTS">
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:WB requests that hit L2 cache" name="L2_DEMAND_RQSTS:WB_HIT"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:edge level (may require counter-mask >= 1)" name="L2_DEMAND_RQSTS:e=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:invert" name="L2_DEMAND_RQSTS:i=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:counter-mask in range [0-255]" name="L2_DEMAND_RQSTS:c=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:measure any thread" name="L2_DEMAND_RQSTS:t=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:monitor only inside transactional memory region" name="L2_DEMAND_RQSTS:intx=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:do not count occurrences inside aborted transactional memory region" name="L2_DEMAND_RQSTS:intxcp=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:monitor at user level" name="L2_DEMAND_RQSTS:u=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:monitor at kernel level" name="L2_DEMAND_RQSTS:k=0"/>
                    </event>
                    <event eventDescription="L2 lines allocated"
                        eventId="116" eventName="L2_LINES_IN">
                        <eventModifier
                            description="L2 lines allocated, masks:L2 cache lines in I state filling L2" name="L2_LINES_IN:I"/>
                        <eventModifier
                            description="L2 lines allocated, masks:L2 cache lines in S state filling L2" name="L2_LINES_IN:S"/>
                        <eventModifier
                            description="L2 lines allocated, masks:L2 cache lines in E state filling L2" name="L2_LINES_IN:E"/>
                        <eventModifier
                            description="L2 lines allocated, masks:L2 cache lines filling L2" name="L2_LINES_IN:ALL"/>
                        <eventModifier
                            description="L2 lines allocated, masks:L2 cache lines filling L2" name="L2_LINES_IN:ANY"/>
                        <eventModifier
                            description="L2 lines allocated, masks:edge level (may require counter-mask >= 1)" name="L2_LINES_IN:e=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:invert" name="L2_LINES_IN:i=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:counter-mask in range [0-255]" name="L2_LINES_IN:c=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:measure any thread" name="L2_LINES_IN:t=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:monitor only inside transactional memory region" name="L2_LINES_IN:intx=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:do not count occurrences inside aborted transactional memory region" name="L2_LINES_IN:intxcp=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:monitor at user level" name="L2_LINES_IN:u=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:monitor at kernel level" name="L2_LINES_IN:k=0"/>
                    </event>
                    <event eventDescription="L2 lines evicted"
                        eventId="117" eventName="L2_LINES_OUT">
                        <eventModifier
                            description="L2 lines evicted, masks:Number of clean L2 cachelines evicted by demand" name="L2_LINES_OUT:DEMAND_CLEAN"/>
                        <eventModifier
                            description="L2 lines evicted, masks:Number of dirty L2 cachelines evicted by demand" name="L2_LINES_OUT:DEMAND_DIRTY"/>
                    </event>
                    <event eventDescription="L2 requests" eventId="118" eventName="L2_RQSTS">
                        <eventModifier
                            description="L2 requests, masks:Demand Data Read requests that miss L2 cache" name="L2_RQSTS:DEMAND_DATA_RD_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:Demand Data Read requests that hit L2 cache" name="L2_RQSTS:DEMAND_DATA_RD_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:RFO requests that miss L2 cache" name="L2_RQSTS:DEMAND_RFO_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:RFO requests that miss L2 cache" name="L2_RQSTS:RFO_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:RFO requests that hit L2 cache" name="L2_RQSTS:DEMAND_RFO_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:RFO requests that hit L2 cache" name="L2_RQSTS:RFO_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:L2 cache misses when fetching instructions" name="L2_RQSTS:CODE_RD_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:All demand requests that miss the L2 cache" name="L2_RQSTS:ALL_DEMAND_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:L2 cache hits when fetching instructions, code reads" name="L2_RQSTS:CODE_RD_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:Requests from the L2 hardware prefetchers that miss L2 cache" name="L2_RQSTS:L2_PF_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:Requests from the L1/L2/L3 hardware prefetchers or Load software prefetches that miss L2 cache" name="L2_RQSTS:PF_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:All requests that miss the L2 cache" name="L2_RQSTS:MISS"/>
                        <eventModifier
                            description="L2 requests, masks:Requests from the L2 hardware prefetchers that hit L2 cache" name="L2_RQSTS:L2_PF_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:Requests from the L2 hardware prefetchers that hit L2 cache" name="L2_RQSTS:PF_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:Any data read request to L2 cache" name="L2_RQSTS:ALL_DEMAND_DATA_RD"/>
                        <eventModifier
                            description="L2 requests, masks:Any data RFO request to L2 cache" name="L2_RQSTS:ALL_RFO"/>
                        <eventModifier
                            description="L2 requests, masks:Any code read request to L2 cache" name="L2_RQSTS:ALL_CODE_RD"/>
                        <eventModifier
                            description="L2 requests, masks:All demand requests to L2 cache " name="L2_RQSTS:ALL_DEMAND_REFERENCES"/>
                        <eventModifier
                            description="L2 requests, masks:Any L2 HW prefetch request to L2 cache" name="L2_RQSTS:ALL_PF"/>
                        <eventModifier
                            description="L2 requests, masks:All requests to L2 cache" name="L2_RQSTS:REFERENCES"/>
                        <eventModifier
                            description="L2 requests, masks:edge level (may require counter-mask >= 1)" name="L2_RQSTS:e=0"/>
                        <eventModifier
                            description="L2 requests, masks:invert" name="L2_RQSTS:i=0"/>
                        <eventModifier
                            description="L2 requests, masks:counter-mask in range [0-255]" name="L2_RQSTS:c=0"/>
                        <eventModifier
                            description="L2 requests, masks:measure any thread" name="L2_RQSTS:t=0"/>
                        <eventModifier
                            description="L2 requests, masks:monitor only inside transactional memory region" name="L2_RQSTS:intx=0"/>
                        <eventModifier
                            description="L2 requests, masks:do not count occurrences inside aborted transactional memory region" name="L2_RQSTS:intxcp=0"/>
                        <eventModifier
                            description="L2 requests, masks:monitor at user level" name="L2_RQSTS:u=0"/>
                        <eventModifier
                            description="L2 requests, masks:monitor at kernel level" name="L2_RQSTS:k=0"/>
                    </event>
                    <event eventDescription="L2 transactions"
                        eventId="119" eventName="L2_TRANS">
                        <eventModifier
                            description="L2 transactions, masks:Demand Data Read requests that access L2 cache" name="L2_TRANS:DEMAND_DATA_RD"/>
                        <eventModifier
                            description="L2 transactions, masks:RFO requests that access L2 cache" name="L2_TRANS:RFO"/>
                        <eventModifier
                            description="L2 transactions, masks:L2 cache accesses when fetching instructions" name="L2_TRANS:CODE_RD"/>
                        <eventModifier
                            description="L2 transactions, masks:L2 or L3 HW prefetches that access L2 cache, including rejects" name="L2_TRANS:ALL_PF"/>
                        <eventModifier
                            description="L2 transactions, masks:L1D writebacks that access L2 cache" name="L2_TRANS:L1D_WB"/>
                        <eventModifier
                            description="L2 transactions, masks:L2 fill requests that access L2 cache" name="L2_TRANS:L2_FILL"/>
                        <eventModifier
                            description="L2 transactions, masks:L2 writebacks that access L2 cache" name="L2_TRANS:L2_WB"/>
                        <eventModifier
                            description="L2 transactions, masks:Transactions accessing L2 pipe" name="L2_TRANS:ALL_REQUESTS"/>
                        <eventModifier
                            description="L2 transactions, masks:edge level (may require counter-mask >= 1)" name="L2_TRANS:e=0"/>
                        <eventModifier
                            description="L2 transactions, masks:invert" name="L2_TRANS:i=0"/>
                        <eventModifier
                            description="L2 transactions, masks:counter-mask in range [0-255]" name="L2_TRANS:c=0"/>
                        <eventModifier
                            description="L2 transactions, masks:measure any thread" name="L2_TRANS:t=0"/>
                        <eventModifier
                            description="L2 transactions, masks:monitor only inside transactional memory region" name="L2_TRANS:intx=0"/>
                        <eventModifier
                            description="L2 transactions, masks:do not count occurrences inside aborted transactional memory region" name="L2_TRANS:intxcp=0"/>
                        <eventModifier
                            description="L2 transactions, masks:monitor at user level" name="L2_TRANS:u=0"/>
                        <eventModifier
                            description="L2 transactions, masks:monitor at kernel level" name="L2_TRANS:k=0"/>
                    </event>
                    <event eventDescription="Blocking loads"
                        eventId="120" eventName="LD_BLOCKS">
                        <eventModifier
                            description="Blocking loads, masks:Counts the number of loads blocked by overlapping with store buffer entries that cannot be forwarded" name="LD_BLOCKS:STORE_FORWARD"/>
                        <eventModifier
                            description="Blocking loads, masks:number of times that split load operations are temporarily blocked because all resources for handling the split accesses are in use" name="LD_BLOCKS:NO_SR"/>
                    </event>
                    <event eventDescription="Partial load blocks"
                        eventId="121" eventName="LD_BLOCKS_PARTIAL">
                        <eventModifier
                            description="Partial load blocks, masks:False dependencies in MOB due to partial compare on address" name="LD_BLOCKS_PARTIAL:ADDRESS_ALIAS"/>
                        <eventModifier
                            description="Partial load blocks, masks:edge level (may require counter-mask >= 1)" name="LD_BLOCKS_PARTIAL:e=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:invert" name="LD_BLOCKS_PARTIAL:i=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:counter-mask in range [0-255]" name="LD_BLOCKS_PARTIAL:c=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:measure any thread" name="LD_BLOCKS_PARTIAL:t=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:monitor only inside transactional memory region" name="LD_BLOCKS_PARTIAL:intx=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:do not count occurrences inside aborted transactional memory region" name="LD_BLOCKS_PARTIAL:intxcp=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:monitor at user level" name="LD_BLOCKS_PARTIAL:u=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:monitor at kernel level" name="LD_BLOCKS_PARTIAL:k=0"/>
                    </event>
                    <event eventDescription="Load dispatches"
                        eventId="122" eventName="LOAD_HIT_PRE">
                        <eventModifier
                            description="Load dispatches, masks:Non software-prefetch load dispatches that hit FB allocated for software prefetch" name="LOAD_HIT_PRE:SW_PF"/>
                        <eventModifier
                            description="Load dispatches, masks:Non software-prefetch load dispatches that hit FB allocated for hardware prefetch" name="LOAD_HIT_PRE:HW_PF"/>
                    </event>
                    <event
                        eventDescription="Locked cycles in L1D and L2"
                        eventId="123" eventName="LOCK_CYCLES">
                        <eventModifier
                            description="Locked cycles in L1D and L2, masks:Cycles in which the L1D and L2 are locked, due to a UC lock or split lock" name="LOCK_CYCLES:SPLIT_LOCK_UC_LOCK_DURATION"/>
                        <eventModifier
                            description="Locked cycles in L1D and L2, masks:cycles that the L1D is locked" name="LOCK_CYCLES:CACHE_LOCK_DURATION"/>
                    </event>
                    <event eventDescription="L3 cache" eventId="124" eventName="LONGEST_LAT_CACHE">
                        <eventModifier
                            description="L3 cache, masks:Core-originated cacheable demand requests missed LLC - architectural event" name="LONGEST_LAT_CACHE:MISS"/>
                        <eventModifier
                            description="L3 cache, masks:Core-originated cacheable demand requests that refer to LLC - architectural event" name="LONGEST_LAT_CACHE:REFERENCE"/>
                    </event>
                    <event eventDescription="Machine clear asserted"
                        eventId="125" eventName="MACHINE_CLEARS">
                        <eventModifier
                            description="Machine clear asserted, masks:Cycles there was a Nuke. Account for both thread-specific and All Thread Nukes" name="MACHINE_CLEARS:CYCLES"/>
                        <eventModifier
                            description="Machine clear asserted, masks:Number of Memory Ordering Machine Clears detected" name="MACHINE_CLEARS:MEMORY_ORDERING"/>
                        <eventModifier
                            description="Machine clear asserted, masks:Number of Self-modifying code (SMC) Machine Clears detected" name="MACHINE_CLEARS:SMC"/>
                        <eventModifier
                            description="Machine clear asserted, masks:This event counts the number of executed Intel AVX masked load operations that refer to an illegal address range with the mask bits set to 0" name="MACHINE_CLEARS:MASKMOV"/>
                        <eventModifier
                            description="Machine clear asserted, masks:Number of machine clears (nukes) of any type" name="MACHINE_CLEARS:COUNT"/>
                    </event>
                    <event
                        eventDescription="L3 hit load uops retired (Precise Event)"
                        eventId="126" eventName="MEM_LOAD_UOPS_L3_HIT_RETIRED">
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_MISS"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_HIT"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Load had HitM Response from a core on same socket (shared L3). (Non PEBS" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_HITM"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were hits in L3 without snoops required" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_NONE"/>
                    </event>
                    <event
                        eventDescription="L3 hit load uops retired (Precise Event)"
                        eventId="127" eventName="MEM_LOAD_UOPS_LLC_HIT_RETIRED">
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_MISS"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_HIT"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Load had HitM Response from a core on same socket (shared L3). (Non PEBS" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_HITM"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were hits in L3 without snoops required" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_NONE"/>
                    </event>
                    <event
                        eventDescription="Load uops retired that missed the L3 (Precise Event)"
                        eventId="128" eventName="MEM_LOAD_UOPS_L3_MISS_RETIRED">
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:Retired load uops missing L3 cache but hitting local memory" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:LOCAL_DRAM"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:edge level (may require counter-mask >= 1)" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:e=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:invert" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:i=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:counter-mask in range [0-255]" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:c=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:measure any thread" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:t=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor only inside transactional memory region" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:intx=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor at user level" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:u=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor at kernel level" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Load uops retired that missed the L3 (Precise Event)"
                        eventId="129" eventName="MEM_LOAD_UOPS_LLC_MISS_RETIRED">
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:Retired load uops missing L3 cache but hitting local memory" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:LOCAL_DRAM"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:edge level (may require counter-mask >= 1)" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:e=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:invert" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:i=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:counter-mask in range [0-255]" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:c=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:measure any thread" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:t=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor only inside transactional memory region" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:intx=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor at user level" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:u=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor at kernel level" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Retired load uops (Precise Event)"
                        eventId="130" eventName="MEM_LOAD_UOPS_RETIRED">
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops with L1 cache hits as data source" name="MEM_LOAD_UOPS_RETIRED:L1_HIT"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops with L2 cache hits as data source" name="MEM_LOAD_UOPS_RETIRED:L2_HIT"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops with L3 cache hits as data source" name="MEM_LOAD_UOPS_RETIRED:L3_HIT"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops which missed the L1D" name="MEM_LOAD_UOPS_RETIRED:L1_MISS"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops which missed the L2. Unknown data source excluded" name="MEM_LOAD_UOPS_RETIRED:L2_MISS"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops which missed the L3" name="MEM_LOAD_UOPS_RETIRED:L3_MISS"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops which missed L1 but hit line fill buffer (LFB)" name="MEM_LOAD_UOPS_RETIRED:HIT_LFB"/>
                    </event>
                    <event
                        eventDescription="Memory transactions retired (Precise Event)"
                        eventId="131" eventName="MEM_TRANS_RETIRED">
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:Memory load instructions retired above programmed clocks, minimum threshold value is 3 (Precise Event and ldlat required)" name="MEM_TRANS_RETIRED:LOAD_LATENCY"/>
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:Memory load instructions retired above programmed clocks, minimum threshold value is 3 (Precise Event and ldlat required)" name="MEM_TRANS_RETIRED:LATENCY_ABOVE_THRESHOLD"/>
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:edge level (may require counter-mask >= 1)" name="MEM_TRANS_RETIRED:e=0"/>
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:invert" name="MEM_TRANS_RETIRED:i=0"/>
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:counter-mask in range [0-255]" name="MEM_TRANS_RETIRED:c=0"/>
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:measure any thread" name="MEM_TRANS_RETIRED:t=0"/>
                    </event>
                    <event
                        eventDescription="Memory uops retired (Precise Event)"
                        eventId="132" eventName="MEM_UOPS_RETIRED">
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:Load uops with true STLB miss retired to architected path" name="MEM_UOPS_RETIRED:STLB_MISS_LOADS"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:Store uops with true STLB miss retired to architected path" name="MEM_UOPS_RETIRED:STLB_MISS_STORES"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:Load uops with locked access retired" name="MEM_UOPS_RETIRED:LOCK_LOADS"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:Line-splitted load uops retired" name="MEM_UOPS_RETIRED:SPLIT_LOADS"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:Line-splitted store uops retired" name="MEM_UOPS_RETIRED:SPLIT_STORES"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:All load uops retired" name="MEM_UOPS_RETIRED:ALL_LOADS"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:All store uops retired" name="MEM_UOPS_RETIRED:ALL_STORES"/>
                    </event>
                    <event
                        eventDescription="Misaligned memory references"
                        eventId="133" eventName="MISALIGN_MEM_REF">
                        <eventModifier
                            description="Misaligned memory references, masks:Speculative cache-line split load uops dispatched to the L1D" name="MISALIGN_MEM_REF:LOADS"/>
                        <eventModifier
                            description="Misaligned memory references, masks:Speculative cache-line split store-address uops dispatched to L1D" name="MISALIGN_MEM_REF:STORES"/>
                    </event>
                    <event eventDescription="Move Elimination"
                        eventId="134" eventName="MOVE_ELIMINATION">
                        <eventModifier
                            description="Move Elimination, masks:Number of integer Move Elimination candidate uops that were eliminated" name="MOVE_ELIMINATION:INT_ELIMINATED"/>
                        <eventModifier
                            description="Move Elimination, masks:Number of SIMD Move Elimination candidate uops that were eliminated" name="MOVE_ELIMINATION:SIMD_ELIMINATED"/>
                        <eventModifier
                            description="Move Elimination, masks:Number of integer Move Elimination candidate uops that were not eliminated" name="MOVE_ELIMINATION:INT_NOT_ELIMINATED"/>
                        <eventModifier
                            description="Move Elimination, masks:Number of SIMD Move Elimination candidate uops that were not eliminated" name="MOVE_ELIMINATION:SIMD_NOT_ELIMINATED"/>
                    </event>
                    <event
                        eventDescription="Demand Data Read requests sent to uncore"
                        eventId="135" eventName="OFFCORE_REQUESTS">
                        <eventModifier
                            description="Demand Data Read requests sent to uncore, masks:Demand data read requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:DEMAND_DATA_RD"/>
                        <eventModifier
                            description="Demand Data Read requests sent to uncore, masks:Demand code read requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:DEMAND_CODE_RD"/>
                        <eventModifier
                            description="Demand Data Read requests sent to uncore, masks:Demand RFOs requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:DEMAND_RFO"/>
                        <eventModifier
                            description="Demand Data Read requests sent to uncore, masks:Data read requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:ALL_DATA_RD"/>
                    </event>
                    <event eventDescription="Software assist"
                        eventId="136" eventName="OTHER_ASSISTS">
                        <eventModifier
                            description="Software assist, masks:Number of transitions from AVX-256 to legacy SSE when penalty applicable" name="OTHER_ASSISTS:AVX_TO_SSE"/>
                        <eventModifier
                            description="Software assist, masks:Number of transitions from legacy SSE to AVX-256 when penalty applicable" name="OTHER_ASSISTS:SSE_TO_AVX"/>
                        <eventModifier
                            description="Software assist, masks:Number of times any microcode assist is invoked by HW upon uop writeback" name="OTHER_ASSISTS:ANY_WB_ASSIST"/>
                    </event>
                    <event
                        eventDescription="Cycles Allocation is stalled due to Resource Related reason"
                        eventId="137" eventName="RESOURCE_STALLS">
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocation is stalled due to Resource Related reason" name="RESOURCE_STALLS:ANY"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocation is stalled due to Resource Related reason" name="RESOURCE_STALLS:ALL"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:Stall cycles caused by absence of eligible entries in Reservation Station (RS)" name="RESOURCE_STALLS:RS"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocator is stalled due to Store Buffer full (not including draining from synch)" name="RESOURCE_STALLS:SB"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:ROB full stall cycles" name="RESOURCE_STALLS:ROB"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:edge level (may require counter-mask >= 1)" name="RESOURCE_STALLS:e=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:invert" name="RESOURCE_STALLS:i=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:counter-mask in range [0-255]" name="RESOURCE_STALLS:c=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:measure any thread" name="RESOURCE_STALLS:t=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:monitor only inside transactional memory region" name="RESOURCE_STALLS:intx=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:do not count occurrences inside aborted transactional memory region" name="RESOURCE_STALLS:intxcp=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:monitor at user level" name="RESOURCE_STALLS:u=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:monitor at kernel level" name="RESOURCE_STALLS:k=0"/>
                    </event>
                    <event eventDescription="ROB miscellaneous events"
                        eventId="138" eventName="ROB_MISC_EVENTS">
                        <eventModifier
                            description="ROB miscellaneous events, masks:Count each time an new Last Branch Record (LBR) is inserted" name="ROB_MISC_EVENTS:LBR_INSERTS"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:edge level (may require counter-mask >= 1)" name="ROB_MISC_EVENTS:e=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:invert" name="ROB_MISC_EVENTS:i=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:counter-mask in range [0-255]" name="ROB_MISC_EVENTS:c=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:measure any thread" name="ROB_MISC_EVENTS:t=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:monitor only inside transactional memory region" name="ROB_MISC_EVENTS:intx=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:do not count occurrences inside aborted transactional memory region" name="ROB_MISC_EVENTS:intxcp=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:monitor at user level" name="ROB_MISC_EVENTS:u=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:monitor at kernel level" name="ROB_MISC_EVENTS:k=0"/>
                    </event>
                    <event eventDescription="Reservation Station"
                        eventId="139" eventName="RS_EVENTS">
                        <eventModifier
                            description="Reservation Station, masks:Cycles the Reservation Station (RS) is empty for this thread" name="RS_EVENTS:EMPTY_CYCLES"/>
                        <eventModifier
                            description="Reservation Station, masks:Counts number of time the Reservation Station (RS) goes from empty to non-empty" name="RS_EVENTS:EMPTY_END"/>
                        <eventModifier
                            description="Reservation Station, masks:edge level (may require counter-mask >= 1)" name="RS_EVENTS:e=0"/>
                        <eventModifier
                            description="Reservation Station, masks:invert" name="RS_EVENTS:i=0"/>
                        <eventModifier
                            description="Reservation Station, masks:counter-mask in range [0-255]" name="RS_EVENTS:c=0"/>
                        <eventModifier
                            description="Reservation Station, masks:measure any thread" name="RS_EVENTS:t=0"/>
                        <eventModifier
                            description="Reservation Station, masks:monitor only inside transactional memory region" name="RS_EVENTS:intx=0"/>
                        <eventModifier
                            description="Reservation Station, masks:do not count occurrences inside aborted transactional memory region" name="RS_EVENTS:intxcp=0"/>
                        <eventModifier
                            description="Reservation Station, masks:monitor at user level" name="RS_EVENTS:u=0"/>
                        <eventModifier
                            description="Reservation Station, masks:monitor at kernel level" name="RS_EVENTS:k=0"/>
                    </event>
                    <event
                        eventDescription="Restricted Transaction Memory execution (Precise Event)"
                        eventId="140" eventName="RTM_RETIRED">
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution started" name="RTM_RETIRED:START"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution successfully committed" name="RTM_RETIRED:COMMIT"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to any reasons (multiple categories may count as one) (Precise Event)" name="RTM_RETIRED:ABORTED"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to various memory events" name="RTM_RETIRED:ABORTED_MISC1"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to uncommon conditions" name="RTM_RETIRED:ABORTED_MISC2"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to RTM-unfriendly instructions" name="RTM_RETIRED:ABORTED_MISC3"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to incompatible memory type" name="RTM_RETIRED:ABORTED_MISC4"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to none of the other 4 reasons (e.g., interrupt)" name="RTM_RETIRED:ABORTED_MISC5"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:edge level (may require counter-mask >= 1)" name="RTM_RETIRED:e=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:invert" name="RTM_RETIRED:i=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:counter-mask in range [0-255]" name="RTM_RETIRED:c=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:measure any thread" name="RTM_RETIRED:t=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:monitor only inside transactional memory region" name="RTM_RETIRED:intx=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="RTM_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:monitor at user level" name="RTM_RETIRED:u=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:monitor at kernel level" name="RTM_RETIRED:k=0"/>
                    </event>
                    <event eventDescription="TLB flushes" eventId="141" eventName="TLB_FLUSH">
                        <eventModifier
                            description="TLB flushes, masks:Count number of DTLB flushes of thread-specific entries" name="TLB_FLUSH:DTLB_THREAD"/>
                        <eventModifier
                            description="TLB flushes, masks:Count number of any STLB flushes" name="TLB_FLUSH:STLB_ANY"/>
                    </event>
                    <event eventDescription="Uops executed"
                        eventId="142" eventName="UOPS_EXECUTED">
                        <eventModifier
                            description="Uops executed, masks:Number of uops executed from any thread" name="UOPS_EXECUTED:CORE"/>
                        <eventModifier
                            description="Uops executed, masks:Number of cycles with no uops executed" name="UOPS_EXECUTED:STALL_CYCLES"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 1 uop was executed per thread" name="UOPS_EXECUTED:CYCLES_GE_1_UOP_EXEC"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 2 uops were executed per thread" name="UOPS_EXECUTED:CYCLES_GE_2_UOPS_EXEC"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 3 uops were executed per thread" name="UOPS_EXECUTED:CYCLES_GE_3_UOPS_EXEC"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 4 uops were executed per thread" name="UOPS_EXECUTED:CYCLES_GE_4_UOPS_EXEC"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 1 uop was executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_1"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 2 uops were executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_2"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 3 uops were executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_3"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 4 uops were executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_4"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where no uop is executed on any thread" name="UOPS_EXECUTED:CORE_CYCLES_NONE"/>
                        <eventModifier
                            description="Uops executed, masks:edge level (may require counter-mask >= 1)" name="UOPS_EXECUTED:e=0"/>
                        <eventModifier
                            description="Uops executed, masks:invert" name="UOPS_EXECUTED:i=0"/>
                        <eventModifier
                            description="Uops executed, masks:counter-mask in range [0-255]" name="UOPS_EXECUTED:c=0"/>
                        <eventModifier
                            description="Uops executed, masks:measure any thread" name="UOPS_EXECUTED:t=0"/>
                        <eventModifier
                            description="Uops executed, masks:monitor only inside transactional memory region" name="UOPS_EXECUTED:intx=0"/>
                        <eventModifier
                            description="Uops executed, masks:do not count occurrences inside aborted transactional memory region" name="UOPS_EXECUTED:intxcp=0"/>
                        <eventModifier
                            description="Uops executed, masks:monitor at user level" name="UOPS_EXECUTED:u=0"/>
                        <eventModifier
                            description="Uops executed, masks:monitor at kernel level" name="UOPS_EXECUTED:k=0"/>
                    </event>
                    <event eventDescription="Loop stream detector"
                        eventId="143" eventName="LSD">
                        <eventModifier
                            description="Loop stream detector, masks:Number of uops delivered by the Loop Stream Detector (LSD)" name="LSD:UOPS"/>
                        <eventModifier
                            description="Loop stream detector, masks:Cycles with uops delivered by the LSD but which did not come from decoder" name="LSD:ACTIVE"/>
                        <eventModifier
                            description="Loop stream detector, masks:Cycles with 4 uops delivered by the LSD but which did not come from decoder" name="LSD:CYCLES_4_UOPS"/>
                        <eventModifier
                            description="Loop stream detector, masks:edge level (may require counter-mask >= 1)" name="LSD:e=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:invert" name="LSD:i=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:counter-mask in range [0-255]" name="LSD:c=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:measure any thread" name="LSD:t=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:monitor only inside transactional memory region" name="LSD:intx=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:do not count occurrences inside aborted transactional memory region" name="LSD:intxcp=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:monitor at user level" name="LSD:u=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:monitor at kernel level" name="LSD:k=0"/>
                    </event>
                    <event
                        eventDescription="Uops dispatched to specific ports"
                        eventId="144" eventName="UOPS_EXECUTED_PORT">
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 0" name="UOPS_EXECUTED_PORT:PORT_0"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 1" name="UOPS_EXECUTED_PORT:PORT_1"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 2" name="UOPS_EXECUTED_PORT:PORT_2"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 3" name="UOPS_EXECUTED_PORT:PORT_3"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 4" name="UOPS_EXECUTED_PORT:PORT_4"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 5" name="UOPS_EXECUTED_PORT:PORT_5"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 6" name="UOPS_EXECUTED_PORT:PORT_6"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 7" name="UOPS_EXECUTED_PORT:PORT_7"/>
                    </event>
                    <event
                        eventDescription="Uops dispatched to specific ports"
                        eventId="145" eventName="UOPS_DISPATCHED_PORT">
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 0" name="UOPS_DISPATCHED_PORT:PORT_0"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 1" name="UOPS_DISPATCHED_PORT:PORT_1"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 2" name="UOPS_DISPATCHED_PORT:PORT_2"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 3" name="UOPS_DISPATCHED_PORT:PORT_3"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 4" name="UOPS_DISPATCHED_PORT:PORT_4"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 5" name="UOPS_DISPATCHED_PORT:PORT_5"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 6" name="UOPS_DISPATCHED_PORT:PORT_6"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 7" name="UOPS_DISPATCHED_PORT:PORT_7"/>
                    </event>
                    <event eventDescription="Uops issued" eventId="146" eventName="UOPS_ISSUED">
                        <eventModifier
                            description="Uops issued, masks:Number of Uops issued by the Resource Allocation Table (RAT) to the Reservation Station (RS)" name="UOPS_ISSUED:ANY"/>
                        <eventModifier
                            description="Uops issued, masks:Number of Uops issued by the Resource Allocation Table (RAT) to the Reservation Station (RS)" name="UOPS_ISSUED:ALL"/>
                        <eventModifier
                            description="Uops issued, masks:Number of flags-merge uops being allocated. Such uops adds delay" name="UOPS_ISSUED:FLAGS_MERGE"/>
                        <eventModifier
                            description="Uops issued, masks:Number of slow LEA or similar uops allocated. Such uop has 3 sources regardless if result of LEA instruction or not" name="UOPS_ISSUED:SLOW_LEA"/>
                        <eventModifier
                            description="Uops issued, masks:Number of Multiply packed/scalar single precision uops allocated" name="UOPS_ISSUED:SINGLE_MUL"/>
                        <eventModifier
                            description="Uops issued, masks:Counts the number of cycles no uops issued by this thread" name="UOPS_ISSUED:STALL_CYCLES"/>
                    </event>
                    <event
                        eventDescription="Uops retired (Precise Event)"
                        eventId="147" eventName="UOPS_RETIRED">
                        <eventModifier
                            description="Uops retired (Precise Event), masks:All uops that actually retired" name="UOPS_RETIRED:ALL"/>
                        <eventModifier
                            description="Uops retired (Precise Event), masks:All uops that actually retired" name="UOPS_RETIRED:ANY"/>
                        <eventModifier
                            description="Uops retired (Precise Event), masks:number of retirement slots used non PEBS" name="UOPS_RETIRED:RETIRE_SLOTS"/>
                        <eventModifier
                            description="Uops retired (Precise Event), masks:Cycles no executable uops retired (Precise Event)" name="UOPS_RETIRED:STALL_CYCLES"/>
                        <eventModifier
                            description="Uops retired (Precise Event), masks:Number of cycles using always true condition applied to PEBS uops retired event" name="UOPS_RETIRED:TOTAL_CYCLES"/>
                    </event>
                    <event
                        eventDescription="Transactional memory aborts"
                        eventId="148" eventName="TX_MEM">
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a transactional abort was signaled due to data conflict on a transactionally accessed address" name="TX_MEM:ABORT_CONFLICT"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a transactional abort was signaled due to data capacity limitation for transactional writes" name="TX_MEM:ABORT_CAPACITY_WRITE"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a HLE transactional execution aborted due to a non xrelease prefixed instruction writing to an elided lock in the elision buffer" name="TX_MEM:ABORT_HLE_STORE_TO_ELIDED_LOCK"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a HLE transactional execution aborted due to NoAllocatedElisionBuffer being non-zero" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_NOT_EMPTY"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a HLE transaction execution aborted due to xrelease lock not satisfying the address and value requirements in the elision buffer" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_MISMATCH"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a HLE transaction execution aborted due to an unsupported read alignment from the elision buffer" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_UNSUPPORTED_ALIGNMENT"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a HLE clock could not be elided due to ElisionBufferAvailable being zero" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_FULL"/>
                    </event>
                    <event eventDescription="Transactional execution"
                        eventId="149" eventName="TX_EXEC">
                        <eventModifier
                            description="Transactional execution, masks:Number of times a class of instructions that may cause a transactional abort was executed. Since this is the count of execution, it may not always cause a transactional abort" name="TX_EXEC:MISC1"/>
                        <eventModifier
                            description="Transactional execution, masks:Number of times a class of instructions that may cause a transactional abort was executed inside a transactional region" name="TX_EXEC:MISC2"/>
                        <eventModifier
                            description="Transactional execution, masks:Number of times an instruction execution caused the supported nest count to be exceeded" name="TX_EXEC:MISC3"/>
                        <eventModifier
                            description="Transactional execution, masks:Number of times an instruction with HLE xbegin prefix was executed inside a RTM transactional region" name="TX_EXEC:MISC4"/>
                        <eventModifier
                            description="Transactional execution, masks:Number of times an instruction with HLE xacquire prefix was executed inside a RTM transactional region" name="TX_EXEC:MISC5"/>
                    </event>
                    <event
                        eventDescription="Outstanding offcore requests"
                        eventId="150" eventName="OFFCORE_REQUESTS_OUTSTANDING">
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cycles with cacheable data read transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:ALL_DATA_RD_CYCLES"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cycles with demand code reads transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_CODE_RD_CYCLES"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cycles with demand data read transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD_CYCLES"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cacheable data read transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:ALL_DATA_RD"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Code read transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_CODE_RD"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Demand data read transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cycles with at lesat 6 offcore outstanding demand data read requests in the uncore queue" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD_GE_6"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Outstanding RFO (store) transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_RFO"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cycles with outstanding RFO (store) transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_RFO_CYCLES"/>
                    </event>
                    <event
                        eventDescription="Instruction Length Decoder stalls"
                        eventId="151" eventName="ILD_STALL">
                        <eventModifier
                            description="Instruction Length Decoder stalls, masks:Stall caused by changing prefix length of the instruction" name="ILD_STALL:LCP"/>
                        <eventModifier
                            description="Instruction Length Decoder stalls, masks:Stall cycles due to IQ full" name="ILD_STALL:IQ_FULL"/>
                    </event>
                    <event eventDescription="Page walker loads"
                        eventId="152" eventName="PAGE_WALKER_LOADS">
                        <eventModifier
                            description="Page walker loads, masks:Number of DTLB page walker loads that hit in the L1D and line fill buffer" name="PAGE_WALKER_LOADS:DTLB_L1"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of ITLB page walker loads that hit in the L1I and line fill buffer" name="PAGE_WALKER_LOADS:ITLB_L1"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of DTLB page walker loads that hit in the L2" name="PAGE_WALKER_LOADS:DTLB_L2"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of ITLB page walker loads that hit in the L2" name="PAGE_WALKER_LOADS:ITLB_L2"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of DTLB page walker loads that hit in the L3" name="PAGE_WALKER_LOADS:DTLB_L3"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of ITLB page walker loads that hit in the L3" name="PAGE_WALKER_LOADS:ITLB_L3"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit in the L1D and line fill buffer" name="PAGE_WALKER_LOADS:EPT_DTLB_L1"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit in the L1D and line fill buffer" name="PAGE_WALKER_LOADS:EPT_ITLB_L1"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit in the L2" name="PAGE_WALKER_LOADS:EPT_DTLB_L2"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit in the L2" name="PAGE_WALKER_LOADS:EPT_ITLB_L2"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit in the L3" name="PAGE_WALKER_LOADS:EPT_DTLB_L3"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit in the L3" name="PAGE_WALKER_LOADS:EPT_ITLB_L3"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of DTLB page walker loads that hit memory" name="PAGE_WALKER_LOADS:DTLB_MEMORY"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of ITLB page walker loads that hit memory" name="PAGE_WALKER_LOADS:ITLB_MEMORY"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit memory" name="PAGE_WALKER_LOADS:EPT_DTLB_MEMORY"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit memory" name="PAGE_WALKER_LOADS:EPT_ITLB_MEMORY"/>
                    </event>
                    <event
                        eventDescription="Number of DSB to MITE switches"
                        eventId="153" eventName="DSB2MITE_SWITCHES">
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:Number of DSB to MITE switch true penalty cycles" name="DSB2MITE_SWITCHES:PENALTY_CYCLES"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:edge level (may require counter-mask >= 1)" name="DSB2MITE_SWITCHES:e=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:invert" name="DSB2MITE_SWITCHES:i=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:counter-mask in range [0-255]" name="DSB2MITE_SWITCHES:c=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:measure any thread" name="DSB2MITE_SWITCHES:t=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:monitor only inside transactional memory region" name="DSB2MITE_SWITCHES:intx=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:do not count occurrences inside aborted transactional memory region" name="DSB2MITE_SWITCHES:intxcp=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:monitor at user level" name="DSB2MITE_SWITCHES:u=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:monitor at kernel level" name="DSB2MITE_SWITCHES:k=0"/>
                    </event>
                    <event eventDescription="Extended page table"
                        eventId="154" eventName="EPT">
                        <eventModifier
                            description="Extended page table, masks:Cycles for an extended page table walk" name="EPT:WALK_CYCLES"/>
                        <eventModifier
                            description="Extended page table, masks:edge level (may require counter-mask >= 1)" name="EPT:e=0"/>
                        <eventModifier
                            description="Extended page table, masks:invert" name="EPT:i=0"/>
                        <eventModifier
                            description="Extended page table, masks:counter-mask in range [0-255]" name="EPT:c=0"/>
                        <eventModifier
                            description="Extended page table, masks:measure any thread" name="EPT:t=0"/>
                        <eventModifier
                            description="Extended page table, masks:monitor only inside transactional memory region" name="EPT:intx=0"/>
                        <eventModifier
                            description="Extended page table, masks:do not count occurrences inside aborted transactional memory region" name="EPT:intxcp=0"/>
                        <eventModifier
                            description="Extended page table, masks:monitor at user level" name="EPT:u=0"/>
                        <eventModifier
                            description="Extended page table, masks:monitor at kernel level" name="EPT:k=0"/>
                    </event>
                    <event
                        eventDescription="Counts arithmetic multiply operations"
                        eventId="155" eventName="ARITH">
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:Number of uops executed by divider" name="ARITH:DIVIDER_UOPS"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:edge level (may require counter-mask >= 1)" name="ARITH:e=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:invert" name="ARITH:i=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:counter-mask in range [0-255]" name="ARITH:c=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:measure any thread" name="ARITH:t=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:monitor only inside transactional memory region" name="ARITH:intx=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:do not count occurrences inside aborted transactional memory region" name="ARITH:intxcp=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:monitor at user level" name="ARITH:u=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:monitor at kernel level" name="ARITH:k=0"/>
                    </event>
                    <event eventDescription="Counts AVX instructions"
                        eventId="156" eventName="AVX">
                        <eventModifier
                            description="Counts AVX instructions, masks:Approximate counts of AVX and AVX2 256-bit instructions, including non-arithmetic instructions, loads, and stores. May count non-AVX instructions using 256-bit operations" name="AVX:ALL"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:edge level (may require counter-mask >= 1)" name="AVX:e=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:invert" name="AVX:i=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:counter-mask in range [0-255]" name="AVX:c=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:measure any thread" name="AVX:t=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:monitor only inside transactional memory region" name="AVX:intx=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:do not count occurrences inside aborted transactional memory region" name="AVX:intxcp=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:monitor at user level" name="AVX:u=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:monitor at kernel level" name="AVX:k=0"/>
                    </event>
                    <event eventDescription="SuperQueue miscellaneous"
                        eventId="157" eventName="SQ_MISC">
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:Number of split locks in the super queue (SQ)" name="SQ_MISC:SPLIT_LOCK"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:edge level (may require counter-mask >= 1)" name="SQ_MISC:e=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:invert" name="SQ_MISC:i=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:counter-mask in range [0-255]" name="SQ_MISC:c=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:measure any thread" name="SQ_MISC:t=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:monitor only inside transactional memory region" name="SQ_MISC:intx=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:do not count occurrences inside aborted transactional memory region" name="SQ_MISC:intxcp=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:monitor at user level" name="SQ_MISC:u=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:monitor at kernel level" name="SQ_MISC:k=0"/>
                    </event>
                    <event eventDescription="Offcore reqest buffer"
                        eventId="158" eventName="OFFCORE_REQUESTS_BUFFER">
                        <eventModifier
                            description="Offcore reqest buffer, masks:Number of cycles the offcore requests buffer is full" name="OFFCORE_REQUESTS_BUFFER:SQ_FULL"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:edge level (may require counter-mask >= 1)" name="OFFCORE_REQUESTS_BUFFER:e=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:invert" name="OFFCORE_REQUESTS_BUFFER:i=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:counter-mask in range [0-255]" name="OFFCORE_REQUESTS_BUFFER:c=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:measure any thread" name="OFFCORE_REQUESTS_BUFFER:t=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:monitor only inside transactional memory region" name="OFFCORE_REQUESTS_BUFFER:intx=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:do not count occurrences inside aborted transactional memory region" name="OFFCORE_REQUESTS_BUFFER:intxcp=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:monitor at user level" name="OFFCORE_REQUESTS_BUFFER:u=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:monitor at kernel level" name="OFFCORE_REQUESTS_BUFFER:k=0"/>
                    </event>
                    <event
                        eventDescription="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop)"
                        eventId="159" eventName="OFFCORE_RESPONSE_0">
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch data reads of full and partial cachelines as well as demand data page table entry cacheline reads. Does not count L2 data read prefetches or instruction fetches" name="OFFCORE_RESPONSE_0:DMND_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch reads for ownership (RFO) requests generated by a write to data cacheline. Does not count L2 RFO prefetches" name="OFFCORE_RESPONSE_0:DMND_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_0:DMND_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_0:DMND_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of writebacks (modified to exclusive) transactions" name="OFFCORE_RESPONSE_0:WB"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of data cacheline reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for loads" name="OFFCORE_RESPONSE_0:PF_L3_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetcher" name="OFFCORE_RESPONSE_0:PF_L3_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_0:PF_L3_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_0:PF_L3_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_0:SPLIT_LOCK_UC_LOCK"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_0:BUS_LOCKS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of streaming store requests" name="OFFCORE_RESPONSE_0:STRM_ST"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: counts one of the following transaction types, including L3 invalidate, I/O, full or partial writes, WC or non-temporal stores, CLFLUSH, Fences, lock, unlock, split lock" name="OFFCORE_RESPONSE_0:OTHER"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | DMND_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_0:ANY_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_0:ANY_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of all request umasks" name="OFFCORE_RESPONSE_0:ANY_REQUEST"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_DATA | PF_DATA_RD | PF_L3_DATA_RD" name="OFFCORE_RESPONSE_0:ANY_DATA"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_RFO | PF_RFO | PF_L3_RFO" name="OFFCORE_RESPONSE_0:ANY_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Response: count any response type" name="OFFCORE_RESPONSE_0:ANY_RESPONSE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts number of times supplier information is not available" name="OFFCORE_RESPONSE_0:NO_SUPP"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in M-state (initial lookup)" name="OFFCORE_RESPONSE_0:L3_HITM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in E-state" name="OFFCORE_RESPONSE_0:L3_HITE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in S-state" name="OFFCORE_RESPONSE_0:L3_HITS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in any state (M, E, S)" name="OFFCORE_RESPONSE_0:L3_HIT"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_0:L3_MISS_LOCAL"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_0:L3_MISS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 supplier hit" name="OFFCORE_RESPONSE_0:SPL_HIT"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times no snoop-related information is available" name="OFFCORE_RESPONSE_0:SNP_NONE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts the number of times no snoop was needed to satisfy the request" name="OFFCORE_RESPONSE_0:SNP_NOT_NEEDED"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it missed all snooped caches" name="OFFCORE_RESPONSE_0:SNP_MISS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hit in at leas one snooped cache" name="OFFCORE_RESPONSE_0:SNP_NO_FWD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and data was forwarded from a remote socket" name="OFFCORE_RESPONSE_0:SNP_FWD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache" name="OFFCORE_RESPONSE_0:SNP_HITM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop:  counts number of times target was a non-DRAM system address. This includes MMIO transactions" name="OFFCORE_RESPONSE_0:SNP_NON_DRAM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: any snoop reason" name="OFFCORE_RESPONSE_0:SNP_ANY"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:edge level (may require counter-mask >= 1)" name="OFFCORE_RESPONSE_0:e=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:invert" name="OFFCORE_RESPONSE_0:i=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:counter-mask in range [0-255]" name="OFFCORE_RESPONSE_0:c=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:measure any thread" name="OFFCORE_RESPONSE_0:t=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor only inside transactional memory region" name="OFFCORE_RESPONSE_0:intx=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:do not count occurrences inside aborted transactional memory region" name="OFFCORE_RESPONSE_0:intxcp=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at user level" name="OFFCORE_RESPONSE_0:u=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at kernel level" name="OFFCORE_RESPONSE_0:k=0"/>
                    </event>
                    <event
                        eventDescription="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop)"
                        eventId="160" eventName="OFFCORE_RESPONSE_1">
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch data reads of full and partial cachelines as well as demand data page table entry cacheline reads. Does not count L2 data read prefetches or instruction fetches" name="OFFCORE_RESPONSE_1:DMND_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch reads for ownership (RFO) requests generated by a write to data cacheline. Does not count L2 RFO prefetches" name="OFFCORE_RESPONSE_1:DMND_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_1:DMND_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_1:DMND_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of writebacks (modified to exclusive) transactions" name="OFFCORE_RESPONSE_1:WB"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of data cacheline reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for loads" name="OFFCORE_RESPONSE_1:PF_L3_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetcher" name="OFFCORE_RESPONSE_1:PF_L3_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_1:PF_L3_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_1:PF_L3_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_1:SPLIT_LOCK_UC_LOCK"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_1:BUS_LOCKS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of streaming store requests" name="OFFCORE_RESPONSE_1:STRM_ST"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: counts one of the following transaction types, including L3 invalidate, I/O, full or partial writes, WC or non-temporal stores, CLFLUSH, Fences, lock, unlock, split lock" name="OFFCORE_RESPONSE_1:OTHER"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | DMND_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_1:ANY_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_1:ANY_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of all request umasks" name="OFFCORE_RESPONSE_1:ANY_REQUEST"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_DATA | PF_DATA_RD | PF_L3_DATA_RD" name="OFFCORE_RESPONSE_1:ANY_DATA"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_RFO | PF_RFO | PF_L3_RFO" name="OFFCORE_RESPONSE_1:ANY_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Response: count any response type" name="OFFCORE_RESPONSE_1:ANY_RESPONSE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts number of times supplier information is not available" name="OFFCORE_RESPONSE_1:NO_SUPP"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in M-state (initial lookup)" name="OFFCORE_RESPONSE_1:L3_HITM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in E-state" name="OFFCORE_RESPONSE_1:L3_HITE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in S-state" name="OFFCORE_RESPONSE_1:L3_HITS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in any state (M, E, S)" name="OFFCORE_RESPONSE_1:L3_HIT"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_1:L3_MISS_LOCAL"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_1:L3_MISS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 supplier hit" name="OFFCORE_RESPONSE_1:SPL_HIT"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times no snoop-related information is available" name="OFFCORE_RESPONSE_1:SNP_NONE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts the number of times no snoop was needed to satisfy the request" name="OFFCORE_RESPONSE_1:SNP_NOT_NEEDED"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it missed all snooped caches" name="OFFCORE_RESPONSE_1:SNP_MISS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hit in at leas one snooped cache" name="OFFCORE_RESPONSE_1:SNP_NO_FWD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and data was forwarded from a remote socket" name="OFFCORE_RESPONSE_1:SNP_FWD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache" name="OFFCORE_RESPONSE_1:SNP_HITM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop:  counts number of times target was a non-DRAM system address. This includes MMIO transactions" name="OFFCORE_RESPONSE_1:SNP_NON_DRAM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: any snoop reason" name="OFFCORE_RESPONSE_1:SNP_ANY"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:edge level (may require counter-mask >= 1)" name="OFFCORE_RESPONSE_1:e=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:invert" name="OFFCORE_RESPONSE_1:i=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:counter-mask in range [0-255]" name="OFFCORE_RESPONSE_1:c=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:measure any thread" name="OFFCORE_RESPONSE_1:t=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor only inside transactional memory region" name="OFFCORE_RESPONSE_1:intx=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:do not count occurrences inside aborted transactional memory region" name="OFFCORE_RESPONSE_1:intxcp=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at user level" name="OFFCORE_RESPONSE_1:u=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at kernel level" name="OFFCORE_RESPONSE_1:k=0"/>
                    </event>
                    <event
                        eventDescription="perf_events raw event syntax: r[0-9a-fA-F]+"
                        eventId="161" eventName="perf_raw::r0000">
                        <eventModifier
                            description="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at user level" name="perf_raw::r0000:u=0"/>
                        <eventModifier
                            description="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at kernel level" name="perf_raw::r0000:k=0"/>
                        <eventModifier
                            description="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at hypervisor level" name="perf_raw::r0000:h=0"/>
                    </event>
                </eventSet>
                <eventSet type="PRESET">
                    <event eventDescription="Level 1 data cache misses"
                        eventId="0" eventName="PAPI_L1_DCM"/>
                    <event
                        eventDescription="Level 1 instruction cache misses"
                        eventId="1" eventName="PAPI_L1_ICM"/>
                    <event eventDescription="Level 2 data cache misses"
                        eventId="2" eventName="PAPI_L2_DCM"/>
                    <event
                        eventDescription="Level 2 instruction cache misses"
                        eventId="3" eventName="PAPI_L2_ICM"/>
                    <event eventDescription="Level 1 cache misses"
                        eventId="6" eventName="PAPI_L1_TCM"/>
                    <event eventDescription="Level 2 cache misses"
                        eventId="7" eventName="PAPI_L2_TCM"/>
                    <event eventDescription="Level 3 cache misses"
                        eventId="8" eventName="PAPI_L3_TCM"/>
                    <event eventDescription="Requests for a snoop"
                        eventId="9" eventName="PAPI_CA_SNP"/>
                    <event
                        eventDescription="Requests for exclusive access to shared cache line"
                        eventId="10" eventName="PAPI_CA_SHR"/>
                    <event
                        eventDescription="Requests for exclusive access to clean cache line"
                        eventId="11" eventName="PAPI_CA_CLN"/>
                    <event
                        eventDescription="Requests for cache line invalidation"
                        eventId="12" eventName="PAPI_CA_INV"/>
                    <event
                        eventDescription="Requests for cache line intervention"
                        eventId="13" eventName="PAPI_CA_ITV"/>
                    <event eventDescription="Level 3 load misses"
                        eventId="14" eventName="PAPI_L3_LDM"/>
                    <event
                        eventDescription="Data translation lookaside buffer misses"
                        eventId="20" eventName="PAPI_TLB_DM"/>
                    <event
                        eventDescription="Instruction translation lookaside buffer misses"
                        eventId="21" eventName="PAPI_TLB_IM"/>
                    <event eventDescription="Level 1 load misses"
                        eventId="23" eventName="PAPI_L1_LDM"/>
                    <event eventDescription="Level 1 store misses"
                        eventId="24" eventName="PAPI_L1_STM"/>
                    <event eventDescription="Level 2 load misses"
                        eventId="25" eventName="PAPI_L2_LDM"/>
                    <event eventDescription="Level 2 store misses"
                        eventId="26" eventName="PAPI_L2_STM"/>
                    <event eventDescription="Data prefetch cache misses"
                        eventId="28" eventName="PAPI_PRF_DM"/>
                    <event
                        eventDescription="Cycles Stalled Waiting for memory writes"
                        eventId="36" eventName="PAPI_MEM_WCY"/>
                    <event
                        eventDescription="Cycles with no instruction issue"
                        eventId="37" eventName="PAPI_STL_ICY"/>
                    <event
                        eventDescription="Cycles with maximum instruction issue"
                        eventId="38" eventName="PAPI_FUL_ICY"/>
                    <event
                        eventDescription="Cycles with no instructions completed"
                        eventId="39" eventName="PAPI_STL_CCY"/>
                    <event
                        eventDescription="Cycles with maximum instructions completed"
                        eventId="40" eventName="PAPI_FUL_CCY"/>
                    <event
                        eventDescription="Unconditional branch instructions"
                        eventId="42" eventName="PAPI_BR_UCN"/>
                    <event
                        eventDescription="Conditional branch instructions"
                        eventId="43" eventName="PAPI_BR_CN"/>
                    <event
                        eventDescription="Conditional branch instructions taken"
                        eventId="44" eventName="PAPI_BR_TKN"/>
                    <event
                        eventDescription="Conditional branch instructions not taken"
                        eventId="45" eventName="PAPI_BR_NTK"/>
                    <event
                        eventDescription="Conditional branch instructions mispredicted"
                        eventId="46" eventName="PAPI_BR_MSP"/>
                    <event
                        eventDescription="Conditional branch instructions correctly predicted"
                        eventId="47" eventName="PAPI_BR_PRC"/>
                    <event eventDescription="Instructions completed"
                        eventId="50" eventName="PAPI_TOT_INS"/>
                    <event eventDescription="Load instructions"
                        eventId="53" eventName="PAPI_LD_INS"/>
                    <event eventDescription="Store instructions"
                        eventId="54" eventName="PAPI_SR_INS"/>
                    <event eventDescription="Branch instructions"
                        eventId="55" eventName="PAPI_BR_INS"/>
                    <event
                        eventDescription="Cycles stalled on any resource"
                        eventId="57" eventName="PAPI_RES_STL"/>
                    <event eventDescription="Total cycles" eventId="59" eventName="PAPI_TOT_CYC"/>
                    <event
                        eventDescription="Load/store instructions completed"
                        eventId="60" eventName="PAPI_LST_INS"/>
                    <event
                        eventDescription="Level 2 data cache accesses"
                        eventId="65" eventName="PAPI_L2_DCA"/>
                    <event
                        eventDescription="Level 3 data cache accesses"
                        eventId="66" eventName="PAPI_L3_DCA"/>
                    <event eventDescription="Level 2 data cache reads"
                        eventId="68" eventName="PAPI_L2_DCR"/>
                    <event eventDescription="Level 3 data cache reads"
                        eventId="69" eventName="PAPI_L3_DCR"/>
                    <event eventDescription="Level 2 data cache writes"
                        eventId="71" eventName="PAPI_L2_DCW"/>
                    <event eventDescription="Level 3 data cache writes"
                        eventId="72" eventName="PAPI_L3_DCW"/>
                    <event
                        eventDescription="Level 2 instruction cache hits"
                        eventId="74" eventName="PAPI_L2_ICH"/>
                    <event
                        eventDescription="Level 2 instruction cache accesses"
                        eventId="77" eventName="PAPI_L2_ICA"/>
                    <event
                        eventDescription="Level 3 instruction cache accesses"
                        eventId="78" eventName="PAPI_L3_ICA"/>
                    <event
                        eventDescription="Level 2 instruction cache reads"
                        eventId="80" eventName="PAPI_L2_ICR"/>
                    <event
                        eventDescription="Level 3 instruction cache reads"
                        eventId="81" eventName="PAPI_L3_ICR"/>
                    <event
                        eventDescription="Level 2 total cache accesses"
                        eventId="89" eventName="PAPI_L2_TCA"/>
                    <event
                        eventDescription="Level 3 total cache accesses"
                        eventId="90" eventName="PAPI_L3_TCA"/>
                    <event eventDescription="Level 2 total cache reads"
                        eventId="92" eventName="PAPI_L2_TCR"/>
                    <event eventDescription="Level 3 total cache reads"
                        eventId="93" eventName="PAPI_L3_TCR"/>
                    <event eventDescription="Level 2 total cache writes"
                        eventId="95" eventName="PAPI_L2_TCW"/>
                    <event eventDescription="Level 3 total cache writes"
                        eventId="96" eventName="PAPI_L3_TCW"/>
                    <event eventDescription="Reference clock cycles"
                        eventId="107" eventName="PAPI_REF_CYC"/>
                </eventSet>
            </PapiComponent>
            <event eventDescription="Level 1 data cache misses"
                eventId="0" eventName="PAPI_L1_DCM"/>
            <event eventDescription="Level 1 instruction cache misses"
                eventId="1" eventName="PAPI_L1_ICM"/>
            <event eventDescription="Level 2 data cache misses"
                eventId="2" eventName="PAPI_L2_DCM"/>
            <event eventDescription="Level 2 instruction cache misses"
                eventId="3" eventName="PAPI_L2_ICM"/>
        </papifyConfig>
        
        <papifyConfig>
            <coreId coreId="Merge"/>
            <PapiComponent componentId="perf_event" componentIndex="0" componentType="CPU">
                <eventSet type="NATIVE">
                    <event
                        eventDescription="count core clock cycles whenever the clock signal on the specific core is running (not halted)"
                        eventId="0" eventName="ix86arch::UNHALTED_CORE_CYCLES">
                        <eventModifier
                            description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask >= 1)" name="ix86arch::UNHALTED_CORE_CYCLES:e=0"/>
                        <eventModifier
                            description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert" name="ix86arch::UNHALTED_CORE_CYCLES:i=0"/>
                        <eventModifier
                            description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]" name="ix86arch::UNHALTED_CORE_CYCLES:c=0"/>
                        <eventModifier
                            description="count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread" name="ix86arch::UNHALTED_CORE_CYCLES:t=0"/>
                    </event>
                    <event
                        eventDescription="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction"
                        eventId="1" eventName="ix86arch::INSTRUCTION_RETIRED">
                        <eventModifier
                            description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:edge level (may require counter-mask >= 1)" name="ix86arch::INSTRUCTION_RETIRED:e=0"/>
                        <eventModifier
                            description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:invert" name="ix86arch::INSTRUCTION_RETIRED:i=0"/>
                        <eventModifier
                            description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:counter-mask in range [0-255]" name="ix86arch::INSTRUCTION_RETIRED:c=0"/>
                        <eventModifier
                            description="count the number of instructions at retirement. For instructions that consists of multiple micro-ops, this event counts the retirement of the last micro-op of the instruction, masks:measure any thread" name="ix86arch::INSTRUCTION_RETIRED:t=0"/>
                    </event>
                    <event
                        eventDescription="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions"
                        eventId="2" eventName="ix86arch::UNHALTED_REFERENCE_CYCLES">
                        <eventModifier
                            description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:edge level (may require counter-mask >= 1)" name="ix86arch::UNHALTED_REFERENCE_CYCLES:e=0"/>
                        <eventModifier
                            description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:invert" name="ix86arch::UNHALTED_REFERENCE_CYCLES:i=0"/>
                        <eventModifier
                            description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:counter-mask in range [0-255]" name="ix86arch::UNHALTED_REFERENCE_CYCLES:c=0"/>
                        <eventModifier
                            description="count reference clock cycles while the clock signal on the specific core is running. The reference clock operates at a fixed frequency, irrespective of core frequency changes due to performance state transitions, masks:measure any thread" name="ix86arch::UNHALTED_REFERENCE_CYCLES:t=0"/>
                    </event>
                    <event
                        eventDescription="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch"
                        eventId="3" eventName="ix86arch::LLC_REFERENCES">
                        <eventModifier
                            description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:edge level (may require counter-mask >= 1)" name="ix86arch::LLC_REFERENCES:e=0"/>
                        <eventModifier
                            description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:invert" name="ix86arch::LLC_REFERENCES:i=0"/>
                        <eventModifier
                            description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:counter-mask in range [0-255]" name="ix86arch::LLC_REFERENCES:c=0"/>
                        <eventModifier
                            description="count each request originating from the core to reference a cache line in the last level cache. The count may include speculation, but excludes cache line fills due to hardware prefetch, masks:measure any thread" name="ix86arch::LLC_REFERENCES:t=0"/>
                    </event>
                    <event
                        eventDescription="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch"
                        eventId="4" eventName="ix86arch::LLC_MISSES">
                        <eventModifier
                            description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:edge level (may require counter-mask >= 1)" name="ix86arch::LLC_MISSES:e=0"/>
                        <eventModifier
                            description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:invert" name="ix86arch::LLC_MISSES:i=0"/>
                        <eventModifier
                            description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:counter-mask in range [0-255]" name="ix86arch::LLC_MISSES:c=0"/>
                        <eventModifier
                            description="count each cache miss condition for references to the last level cache. The event count may include speculation, but excludes cache line fills due to hardware prefetch, masks:measure any thread" name="ix86arch::LLC_MISSES:t=0"/>
                    </event>
                    <event
                        eventDescription="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction"
                        eventId="5" eventName="ix86arch::BRANCH_INSTRUCTIONS_RETIRED">
                        <eventModifier
                            description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:edge level (may require counter-mask >= 1)" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:e=0"/>
                        <eventModifier
                            description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:invert" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:i=0"/>
                        <eventModifier
                            description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:counter-mask in range [0-255]" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:c=0"/>
                        <eventModifier
                            description="count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:measure any thread" name="ix86arch::BRANCH_INSTRUCTIONS_RETIRED:t=0"/>
                    </event>
                    <event
                        eventDescription="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware"
                        eventId="6" eventName="ix86arch::MISPREDICTED_BRANCH_RETIRED">
                        <eventModifier
                            description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:edge level (may require counter-mask >= 1)" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:e=0"/>
                        <eventModifier
                            description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:invert" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:i=0"/>
                        <eventModifier
                            description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:counter-mask in range [0-255]" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:c=0"/>
                        <eventModifier
                            description="count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:measure any thread" name="ix86arch::MISPREDICTED_BRANCH_RETIRED:t=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_CPU_CYCLES"
                        eventId="7" eventName="perf::PERF_COUNT_HW_CPU_CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level" name="perf::PERF_COUNT_HW_CPU_CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CPU_CYCLES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_CPU_CYCLES"
                        eventId="8" eventName="perf::CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level" name="perf::CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level" name="perf::CYCLES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_CPU_CYCLES"
                        eventId="9" eventName="perf::CPU-CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at user level" name="perf::CPU-CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CPU_CYCLES, masks:monitor at kernel level" name="perf::CPU-CYCLES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_INSTRUCTIONS"
                        eventId="10" eventName="perf::PERF_COUNT_HW_INSTRUCTIONS">
                        <eventModifier
                            description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at user level" name="perf::PERF_COUNT_HW_INSTRUCTIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_INSTRUCTIONS:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_INSTRUCTIONS"
                        eventId="11" eventName="perf::INSTRUCTIONS">
                        <eventModifier
                            description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at user level" name="perf::INSTRUCTIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_INSTRUCTIONS, masks:monitor at kernel level" name="perf::INSTRUCTIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_CACHE_REFERENCES"
                        eventId="12" eventName="perf::PERF_COUNT_HW_CACHE_REFERENCES">
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_REFERENCES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_REFERENCES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_CACHE_REFERENCES"
                        eventId="13" eventName="perf::CACHE-REFERENCES">
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at user level" name="perf::CACHE-REFERENCES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_REFERENCES, masks:monitor at kernel level" name="perf::CACHE-REFERENCES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_CACHE_MISSES"
                        eventId="14" eventName="perf::PERF_COUNT_HW_CACHE_MISSES">
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_MISSES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_MISSES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_CACHE_MISSES"
                        eventId="15" eventName="perf::CACHE-MISSES">
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at user level" name="perf::CACHE-MISSES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_CACHE_MISSES, masks:monitor at kernel level" name="perf::CACHE-MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_BRANCH_INSTRUCTIONS"
                        eventId="16" eventName="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS">
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level" name="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_BRANCH_INSTRUCTIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_BRANCH_INSTRUCTIONS"
                        eventId="17" eventName="perf::BRANCH-INSTRUCTIONS">
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level" name="perf::BRANCH-INSTRUCTIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level" name="perf::BRANCH-INSTRUCTIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_BRANCH_INSTRUCTIONS"
                        eventId="18" eventName="perf::BRANCHES">
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at user level" name="perf::BRANCHES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_INSTRUCTIONS, masks:monitor at kernel level" name="perf::BRANCHES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_BRANCH_MISSES"
                        eventId="19" eventName="perf::PERF_COUNT_HW_BRANCH_MISSES">
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at user level" name="perf::PERF_COUNT_HW_BRANCH_MISSES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_BRANCH_MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_BRANCH_MISSES"
                        eventId="20" eventName="perf::BRANCH-MISSES">
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at user level" name="perf::BRANCH-MISSES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BRANCH_MISSES, masks:monitor at kernel level" name="perf::BRANCH-MISSES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_BUS_CYCLES"
                        eventId="21" eventName="perf::PERF_COUNT_HW_BUS_CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at user level" name="perf::PERF_COUNT_HW_BUS_CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_BUS_CYCLES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_HW_BUS_CYCLES"
                        eventId="22" eventName="perf::BUS-CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at user level" name="perf::BUS-CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_BUS_CYCLES, masks:monitor at kernel level" name="perf::BUS-CYCLES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_REF_CPU_CYCLES"
                        eventId="29" eventName="perf::PERF_COUNT_HW_REF_CPU_CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at user level" name="perf::PERF_COUNT_HW_REF_CPU_CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_REF_CPU_CYCLES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_HW_REF_CPU_CYCLES"
                        eventId="30" eventName="perf::REF-CYCLES">
                        <eventModifier
                            description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at user level" name="perf::REF-CYCLES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_HW_REF_CPU_CYCLES, masks:monitor at kernel level" name="perf::REF-CYCLES:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_CPU_CLOCK"
                        eventId="31" eventName="perf::PERF_COUNT_SW_CPU_CLOCK">
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at user level" name="perf::PERF_COUNT_SW_CPU_CLOCK:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_CPU_CLOCK:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_CPU_CLOCK"
                        eventId="32" eventName="perf::CPU-CLOCK">
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at user level" name="perf::CPU-CLOCK:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_CLOCK, masks:monitor at kernel level" name="perf::CPU-CLOCK:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_TASK_CLOCK"
                        eventId="33" eventName="perf::PERF_COUNT_SW_TASK_CLOCK">
                        <eventModifier
                            description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at user level" name="perf::PERF_COUNT_SW_TASK_CLOCK:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_TASK_CLOCK:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_TASK_CLOCK"
                        eventId="34" eventName="perf::TASK-CLOCK">
                        <eventModifier
                            description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at user level" name="perf::TASK-CLOCK:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_TASK_CLOCK, masks:monitor at kernel level" name="perf::TASK-CLOCK:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_PAGE_FAULTS"
                        eventId="35" eventName="perf::PERF_COUNT_SW_PAGE_FAULTS">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level" name="perf::PERF_COUNT_SW_PAGE_FAULTS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_PAGE_FAULTS:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_PAGE_FAULTS"
                        eventId="36" eventName="perf::PAGE-FAULTS">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level" name="perf::PAGE-FAULTS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level" name="perf::PAGE-FAULTS:k=0"/>
                    </event>
                    <event eventDescription="PERF_COUNT_SW_PAGE_FAULTS"
                        eventId="37" eventName="perf::FAULTS">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at user level" name="perf::FAULTS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS, masks:monitor at kernel level" name="perf::FAULTS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CONTEXT_SWITCHES"
                        eventId="38" eventName="perf::PERF_COUNT_SW_CONTEXT_SWITCHES">
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level" name="perf::PERF_COUNT_SW_CONTEXT_SWITCHES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_CONTEXT_SWITCHES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CONTEXT_SWITCHES"
                        eventId="39" eventName="perf::CONTEXT-SWITCHES">
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level" name="perf::CONTEXT-SWITCHES:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level" name="perf::CONTEXT-SWITCHES:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CONTEXT_SWITCHES"
                        eventId="40" eventName="perf::CS">
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at user level" name="perf::CS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CONTEXT_SWITCHES, masks:monitor at kernel level" name="perf::CS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CPU_MIGRATIONS"
                        eventId="41" eventName="perf::PERF_COUNT_SW_CPU_MIGRATIONS">
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level" name="perf::PERF_COUNT_SW_CPU_MIGRATIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_CPU_MIGRATIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CPU_MIGRATIONS"
                        eventId="42" eventName="perf::CPU-MIGRATIONS">
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level" name="perf::CPU-MIGRATIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level" name="perf::CPU-MIGRATIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_CPU_MIGRATIONS"
                        eventId="43" eventName="perf::MIGRATIONS">
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at user level" name="perf::MIGRATIONS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_CPU_MIGRATIONS, masks:monitor at kernel level" name="perf::MIGRATIONS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MIN"
                        eventId="44" eventName="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at user level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MIN:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MIN"
                        eventId="45" eventName="perf::MINOR-FAULTS">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at user level" name="perf::MINOR-FAULTS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MIN, masks:monitor at kernel level" name="perf::MINOR-FAULTS:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MAJ"
                        eventId="46" eventName="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at user level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at kernel level" name="perf::PERF_COUNT_SW_PAGE_FAULTS_MAJ:k=0"/>
                    </event>
                    <event
                        eventDescription="PERF_COUNT_SW_PAGE_FAULTS_MAJ"
                        eventId="47" eventName="perf::MAJOR-FAULTS">
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at user level" name="perf::MAJOR-FAULTS:u=0"/>
                        <eventModifier
                            description="PERF_COUNT_SW_PAGE_FAULTS_MAJ, masks:monitor at kernel level" name="perf::MAJOR-FAULTS:k=0"/>
                    </event>
                    <event eventDescription="L1 data cache" eventId="48" eventName="perf::PERF_COUNT_HW_CACHE_L1D">
                        <eventModifier
                            description="L1 data cache, masks:read access" name="perf::PERF_COUNT_HW_CACHE_L1D:READ"/>
                    </event>
                    <event eventDescription="L1 cache load accesses"
                        eventId="49" eventName="perf::L1-DCACHE-LOADS">
                        <eventModifier
                            description="L1 cache load accesses, masks:monitor at user level" name="perf::L1-DCACHE-LOADS:u=0"/>
                        <eventModifier
                            description="L1 cache load accesses, masks:monitor at kernel level" name="perf::L1-DCACHE-LOADS:k=0"/>
                    </event>
                    <event eventDescription="L1 cache load misses"
                        eventId="50" eventName="perf::L1-DCACHE-LOAD-MISSES">
                        <eventModifier
                            description="L1 cache load misses, masks:monitor at user level" name="perf::L1-DCACHE-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="L1 cache load misses, masks:monitor at kernel level" name="perf::L1-DCACHE-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="L1 cache store accesses"
                        eventId="51" eventName="perf::L1-DCACHE-STORES">
                        <eventModifier
                            description="L1 cache store accesses, masks:monitor at user level" name="perf::L1-DCACHE-STORES:u=0"/>
                        <eventModifier
                            description="L1 cache store accesses, masks:monitor at kernel level" name="perf::L1-DCACHE-STORES:k=0"/>
                    </event>
                    <event eventDescription="L1 instruction cache"
                        eventId="55" eventName="perf::PERF_COUNT_HW_CACHE_L1I">
                        <eventModifier
                            description="L1 instruction cache, masks:read access" name="perf::PERF_COUNT_HW_CACHE_L1I:READ"/>
                    </event>
                    <event eventDescription="L1I cache load misses"
                        eventId="57" eventName="perf::L1-ICACHE-LOAD-MISSES">
                        <eventModifier
                            description="L1I cache load misses, masks:monitor at user level" name="perf::L1-ICACHE-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="L1I cache load misses, masks:monitor at kernel level" name="perf::L1-ICACHE-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="Last level cache"
                        eventId="60" eventName="perf::PERF_COUNT_HW_CACHE_LL">
                        <eventModifier
                            description="Last level cache, masks:read access" name="perf::PERF_COUNT_HW_CACHE_LL:READ"/>
                        <eventModifier
                            description="Last level cache, masks:write access" name="perf::PERF_COUNT_HW_CACHE_LL:WRITE"/>
                    </event>
                    <event
                        eventDescription="Last level cache load accesses"
                        eventId="61" eventName="perf::LLC-LOADS">
                        <eventModifier
                            description="Last level cache load accesses, masks:monitor at user level" name="perf::LLC-LOADS:u=0"/>
                        <eventModifier
                            description="Last level cache load accesses, masks:monitor at kernel level" name="perf::LLC-LOADS:k=0"/>
                    </event>
                    <event
                        eventDescription="Last level cache load misses"
                        eventId="62" eventName="perf::LLC-LOAD-MISSES">
                        <eventModifier
                            description="Last level cache load misses, masks:monitor at user level" name="perf::LLC-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="Last level cache load misses, masks:monitor at kernel level" name="perf::LLC-LOAD-MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="Last level cache store accesses"
                        eventId="63" eventName="perf::LLC-STORES">
                        <eventModifier
                            description="Last level cache store accesses, masks:monitor at user level" name="perf::LLC-STORES:u=0"/>
                        <eventModifier
                            description="Last level cache store accesses, masks:monitor at kernel level" name="perf::LLC-STORES:k=0"/>
                    </event>
                    <event
                        eventDescription="Last level cache store misses"
                        eventId="64" eventName="perf::LLC-STORE-MISSES">
                        <eventModifier
                            description="Last level cache store misses, masks:monitor at user level" name="perf::LLC-STORE-MISSES:u=0"/>
                        <eventModifier
                            description="Last level cache store misses, masks:monitor at kernel level" name="perf::LLC-STORE-MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="Data Translation Lookaside Buffer"
                        eventId="67" eventName="perf::PERF_COUNT_HW_CACHE_DTLB">
                        <eventModifier
                            description="Data Translation Lookaside Buffer, masks:read access" name="perf::PERF_COUNT_HW_CACHE_DTLB:READ"/>
                        <eventModifier
                            description="Data Translation Lookaside Buffer, masks:write access" name="perf::PERF_COUNT_HW_CACHE_DTLB:WRITE"/>
                    </event>
                    <event eventDescription="Data TLB load accesses"
                        eventId="68" eventName="perf::DTLB-LOADS">
                        <eventModifier
                            description="Data TLB load accesses, masks:monitor at user level" name="perf::DTLB-LOADS:u=0"/>
                        <eventModifier
                            description="Data TLB load accesses, masks:monitor at kernel level" name="perf::DTLB-LOADS:k=0"/>
                    </event>
                    <event eventDescription="Data TLB load misses"
                        eventId="69" eventName="perf::DTLB-LOAD-MISSES">
                        <eventModifier
                            description="Data TLB load misses, masks:monitor at user level" name="perf::DTLB-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="Data TLB load misses, masks:monitor at kernel level" name="perf::DTLB-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="Data TLB store accesses"
                        eventId="70" eventName="perf::DTLB-STORES">
                        <eventModifier
                            description="Data TLB store accesses, masks:monitor at user level" name="perf::DTLB-STORES:u=0"/>
                        <eventModifier
                            description="Data TLB store accesses, masks:monitor at kernel level" name="perf::DTLB-STORES:k=0"/>
                    </event>
                    <event eventDescription="Data TLB store misses"
                        eventId="71" eventName="perf::DTLB-STORE-MISSES">
                        <eventModifier
                            description="Data TLB store misses, masks:monitor at user level" name="perf::DTLB-STORE-MISSES:u=0"/>
                        <eventModifier
                            description="Data TLB store misses, masks:monitor at kernel level" name="perf::DTLB-STORE-MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="Instruction Translation Lookaside Buffer"
                        eventId="74" eventName="perf::PERF_COUNT_HW_CACHE_ITLB">
                        <eventModifier
                            description="Instruction Translation Lookaside Buffer, masks:read access" name="perf::PERF_COUNT_HW_CACHE_ITLB:READ"/>
                        <eventModifier
                            description="Instruction Translation Lookaside Buffer, masks:hit access" name="perf::PERF_COUNT_HW_CACHE_ITLB:ACCESS"/>
                        <eventModifier
                            description="Instruction Translation Lookaside Buffer, masks:miss access" name="perf::PERF_COUNT_HW_CACHE_ITLB:MISS"/>
                        <eventModifier
                            description="Instruction Translation Lookaside Buffer, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_ITLB:u=0"/>
                        <eventModifier
                            description="Instruction Translation Lookaside Buffer, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_ITLB:k=0"/>
                    </event>
                    <event
                        eventDescription="Instruction TLB load accesses"
                        eventId="75" eventName="perf::ITLB-LOADS">
                        <eventModifier
                            description="Instruction TLB load accesses, masks:monitor at user level" name="perf::ITLB-LOADS:u=0"/>
                        <eventModifier
                            description="Instruction TLB load accesses, masks:monitor at kernel level" name="perf::ITLB-LOADS:k=0"/>
                    </event>
                    <event
                        eventDescription="Instruction TLB load misses"
                        eventId="76" eventName="perf::ITLB-LOAD-MISSES">
                        <eventModifier
                            description="Instruction TLB load misses, masks:monitor at user level" name="perf::ITLB-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="Instruction TLB load misses, masks:monitor at kernel level" name="perf::ITLB-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="Branch Prediction Unit"
                        eventId="77" eventName="perf::PERF_COUNT_HW_CACHE_BPU">
                        <eventModifier
                            description="Branch Prediction Unit, masks:read access" name="perf::PERF_COUNT_HW_CACHE_BPU:READ"/>
                        <eventModifier
                            description="Branch Prediction Unit, masks:hit access" name="perf::PERF_COUNT_HW_CACHE_BPU:ACCESS"/>
                        <eventModifier
                            description="Branch Prediction Unit, masks:miss access" name="perf::PERF_COUNT_HW_CACHE_BPU:MISS"/>
                        <eventModifier
                            description="Branch Prediction Unit, masks:monitor at user level" name="perf::PERF_COUNT_HW_CACHE_BPU:u=0"/>
                        <eventModifier
                            description="Branch Prediction Unit, masks:monitor at kernel level" name="perf::PERF_COUNT_HW_CACHE_BPU:k=0"/>
                    </event>
                    <event eventDescription="Branch  load accesses"
                        eventId="78" eventName="perf::BRANCH-LOADS">
                        <eventModifier
                            description="Branch  load accesses, masks:monitor at user level" name="perf::BRANCH-LOADS:u=0"/>
                        <eventModifier
                            description="Branch  load accesses, masks:monitor at kernel level" name="perf::BRANCH-LOADS:k=0"/>
                    </event>
                    <event eventDescription="Branch  load misses"
                        eventId="79" eventName="perf::BRANCH-LOAD-MISSES">
                        <eventModifier
                            description="Branch  load misses, masks:monitor at user level" name="perf::BRANCH-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="Branch  load misses, masks:monitor at kernel level" name="perf::BRANCH-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="Node memory access"
                        eventId="80" eventName="perf::PERF_COUNT_HW_CACHE_NODE">
                        <eventModifier
                            description="Node memory access, masks:read access" name="perf::PERF_COUNT_HW_CACHE_NODE:READ"/>
                        <eventModifier
                            description="Node memory access, masks:write access" name="perf::PERF_COUNT_HW_CACHE_NODE:WRITE"/>
                    </event>
                    <event eventDescription="Node  load accesses"
                        eventId="81" eventName="perf::NODE-LOADS">
                        <eventModifier
                            description="Node  load accesses, masks:monitor at user level" name="perf::NODE-LOADS:u=0"/>
                        <eventModifier
                            description="Node  load accesses, masks:monitor at kernel level" name="perf::NODE-LOADS:k=0"/>
                    </event>
                    <event eventDescription="Node  load misses"
                        eventId="82" eventName="perf::NODE-LOAD-MISSES">
                        <eventModifier
                            description="Node  load misses, masks:monitor at user level" name="perf::NODE-LOAD-MISSES:u=0"/>
                        <eventModifier
                            description="Node  load misses, masks:monitor at kernel level" name="perf::NODE-LOAD-MISSES:k=0"/>
                    </event>
                    <event eventDescription="Node  store accesses"
                        eventId="83" eventName="perf::NODE-STORES">
                        <eventModifier
                            description="Node  store accesses, masks:monitor at user level" name="perf::NODE-STORES:u=0"/>
                        <eventModifier
                            description="Node  store accesses, masks:monitor at kernel level" name="perf::NODE-STORES:k=0"/>
                    </event>
                    <event eventDescription="Node  store misses"
                        eventId="84" eventName="perf::NODE-STORE-MISSES">
                        <eventModifier
                            description="Node  store misses, masks:monitor at user level" name="perf::NODE-STORE-MISSES:u=0"/>
                        <eventModifier
                            description="Node  store misses, masks:monitor at kernel level" name="perf::NODE-STORE-MISSES:k=0"/>
                    </event>
                    <event
                        eventDescription="Count core clock cycles whenever the clock signal on the specific core is running (not halted)"
                        eventId="87" eventName="UNHALTED_CORE_CYCLES">
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask >= 1)" name="UNHALTED_CORE_CYCLES:e=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert" name="UNHALTED_CORE_CYCLES:i=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]" name="UNHALTED_CORE_CYCLES:c=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread" name="UNHALTED_CORE_CYCLES:t=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor only inside transactional memory region" name="UNHALTED_CORE_CYCLES:intx=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:do not count occurrences inside aborted transactional memory region" name="UNHALTED_CORE_CYCLES:intxcp=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at user level" name="UNHALTED_CORE_CYCLES:u=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at kernel level" name="UNHALTED_CORE_CYCLES:k=0"/>
                    </event>
                    <event eventDescription="Unhalted reference cycles"
                        eventId="88" eventName="UNHALTED_REFERENCE_CYCLES">
                        <eventModifier
                            description="Unhalted reference cycles, masks:measure any thread" name="UNHALTED_REFERENCE_CYCLES:t=0"/>
                        <eventModifier
                            description="Unhalted reference cycles, masks:monitor at user level" name="UNHALTED_REFERENCE_CYCLES:u=0"/>
                        <eventModifier
                            description="Unhalted reference cycles, masks:monitor at kernel level" name="UNHALTED_REFERENCE_CYCLES:k=0"/>
                    </event>
                    <event
                        eventDescription="Number of instructions at retirement"
                        eventId="89" eventName="INSTRUCTION_RETIRED">
                        <eventModifier
                            description="Number of instructions at retirement, masks:edge level (may require counter-mask >= 1)" name="INSTRUCTION_RETIRED:e=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:invert" name="INSTRUCTION_RETIRED:i=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:counter-mask in range [0-255]" name="INSTRUCTION_RETIRED:c=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:measure any thread" name="INSTRUCTION_RETIRED:t=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:monitor only inside transactional memory region" name="INSTRUCTION_RETIRED:intx=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:do not count occurrences inside aborted transactional memory region" name="INSTRUCTION_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:monitor at user level" name="INSTRUCTION_RETIRED:u=0"/>
                        <eventModifier
                            description="Number of instructions at retirement, masks:monitor at kernel level" name="INSTRUCTION_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="This is an alias for INSTRUCTION_RETIRED"
                        eventId="90" eventName="INSTRUCTIONS_RETIRED">
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:edge level (may require counter-mask >= 1)" name="INSTRUCTIONS_RETIRED:e=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:invert" name="INSTRUCTIONS_RETIRED:i=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:counter-mask in range [0-255]" name="INSTRUCTIONS_RETIRED:c=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:measure any thread" name="INSTRUCTIONS_RETIRED:t=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:monitor only inside transactional memory region" name="INSTRUCTIONS_RETIRED:intx=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:do not count occurrences inside aborted transactional memory region" name="INSTRUCTIONS_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:monitor at user level" name="INSTRUCTIONS_RETIRED:u=0"/>
                        <eventModifier
                            description="This is an alias for INSTRUCTION_RETIRED, masks:monitor at kernel level" name="INSTRUCTIONS_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction"
                        eventId="91" eventName="BRANCH_INSTRUCTIONS_RETIRED">
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:edge level (may require counter-mask >= 1)" name="BRANCH_INSTRUCTIONS_RETIRED:e=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:invert" name="BRANCH_INSTRUCTIONS_RETIRED:i=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:counter-mask in range [0-255]" name="BRANCH_INSTRUCTIONS_RETIRED:c=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:measure any thread" name="BRANCH_INSTRUCTIONS_RETIRED:t=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor only inside transactional memory region" name="BRANCH_INSTRUCTIONS_RETIRED:intx=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:do not count occurrences inside aborted transactional memory region" name="BRANCH_INSTRUCTIONS_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor at user level" name="BRANCH_INSTRUCTIONS_RETIRED:u=0"/>
                        <eventModifier
                            description="Count branch instructions at retirement. Specifically, this event counts the retirement of the last micro-op of a branch instruction, masks:monitor at kernel level" name="BRANCH_INSTRUCTIONS_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware"
                        eventId="92" eventName="MISPREDICTED_BRANCH_RETIRED">
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:edge level (may require counter-mask >= 1)" name="MISPREDICTED_BRANCH_RETIRED:e=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:invert" name="MISPREDICTED_BRANCH_RETIRED:i=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:counter-mask in range [0-255]" name="MISPREDICTED_BRANCH_RETIRED:c=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:measure any thread" name="MISPREDICTED_BRANCH_RETIRED:t=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor only inside transactional memory region" name="MISPREDICTED_BRANCH_RETIRED:intx=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:do not count occurrences inside aborted transactional memory region" name="MISPREDICTED_BRANCH_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor at user level" name="MISPREDICTED_BRANCH_RETIRED:u=0"/>
                        <eventModifier
                            description="Count mispredicted branch instructions at retirement. Specifically, this event counts at retirement of the last micro-op of a branch instruction in the architectural path of the execution and experienced misprediction in the branch prediction hardware, masks:monitor at kernel level" name="MISPREDICTED_BRANCH_RETIRED:k=0"/>
                    </event>
                    <event eventDescription="Branch re-steered"
                        eventId="93" eventName="BACLEARS">
                        <eventModifier
                            description="Branch re-steered, masks:Counts the number of times the front end is re-steered, mainly when the BPU cannot provide a correct prediction and this is corrected by other branch handling mechanisms at the front end" name="BACLEARS:ANY"/>
                        <eventModifier
                            description="Branch re-steered, masks:edge level (may require counter-mask >= 1)" name="BACLEARS:e=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:invert" name="BACLEARS:i=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:counter-mask in range [0-255]" name="BACLEARS:c=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:measure any thread" name="BACLEARS:t=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:monitor only inside transactional memory region" name="BACLEARS:intx=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:do not count occurrences inside aborted transactional memory region" name="BACLEARS:intxcp=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:monitor at user level" name="BACLEARS:u=0"/>
                        <eventModifier
                            description="Branch re-steered, masks:monitor at kernel level" name="BACLEARS:k=0"/>
                    </event>
                    <event
                        eventDescription="Branch instructions executed"
                        eventId="94" eventName="BR_INST_EXEC">
                        <eventModifier
                            description="Branch instructions executed, masks:All macro conditional nontaken branch instructions" name="BR_INST_EXEC:NONTAKEN_CONDITIONAL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:All macro conditional nontaken branch instructions" name="BR_INST_EXEC:NONTAKEN_COND"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired macro-conditional branches" name="BR_INST_EXEC:TAKEN_CONDITIONAL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired macro-conditional branches" name="BR_INST_EXEC:TAKEN_COND"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired macro-conditional branch instructions excluding calls and indirects" name="BR_INST_EXEC:TAKEN_DIRECT_JUMP"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired indirect branches excluding calls and returns" name="BR_INST_EXEC:TAKEN_INDIRECT_JUMP_NON_CALL_RET"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired indirect branches with return mnemonic" name="BR_INST_EXEC:TAKEN_INDIRECT_NEAR_RETURN"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Taken speculative and retired direct near calls" name="BR_INST_EXEC:TAKEN_DIRECT_NEAR_CALL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired macro-conditional branches" name="BR_INST_EXEC:ALL_CONDITIONAL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired macro-conditional branches" name="BR_INST_EXEC:ALL_COND"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired macro-conditional branches" name="BR_INST_EXEC:ANY_COND"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired macro-unconditional branches excluding calls and indirects" name="BR_INST_EXEC:ALL_DIRECT_JMP"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired indirect branches excluding calls and returns" name="BR_INST_EXEC:ALL_INDIRECT_JUMP_NON_CALL_RET"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired indirect return branches" name="BR_INST_EXEC:ALL_INDIRECT_NEAR_RETURN"/>
                        <eventModifier
                            description="Branch instructions executed, masks:Speculative and retired direct near calls" name="BR_INST_EXEC:ALL_DIRECT_NEAR_CALL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:All indirect calls, including both register and memory indirect" name="BR_INST_EXEC:TAKEN_INDIRECT_NEAR_CALL"/>
                        <eventModifier
                            description="Branch instructions executed, masks:All branch instructions executed" name="BR_INST_EXEC:ALL_BRANCHES"/>
                        <eventModifier
                            description="Branch instructions executed, masks:edge level (may require counter-mask >= 1)" name="BR_INST_EXEC:e=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:invert" name="BR_INST_EXEC:i=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:counter-mask in range [0-255]" name="BR_INST_EXEC:c=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:measure any thread" name="BR_INST_EXEC:t=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:monitor only inside transactional memory region" name="BR_INST_EXEC:intx=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:do not count occurrences inside aborted transactional memory region" name="BR_INST_EXEC:intxcp=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:monitor at user level" name="BR_INST_EXEC:u=0"/>
                        <eventModifier
                            description="Branch instructions executed, masks:monitor at kernel level" name="BR_INST_EXEC:k=0"/>
                    </event>
                    <event
                        eventDescription="Branch instructions retired (Precise Event)"
                        eventId="95" eventName="BR_INST_RETIRED">
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro conditional branch instructions" name="BR_INST_RETIRED:CONDITIONAL"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro conditional branch instructions" name="BR_INST_RETIRED:COND"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts all macro direct and indirect near calls" name="BR_INST_RETIRED:NEAR_CALL"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts all taken and not taken macro branches including far branches (architectural event)" name="BR_INST_RETIRED:ALL_BRANCHES"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts the number of near ret instructions retired" name="BR_INST_RETIRED:NEAR_RETURN"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts all not taken macro branch instructions retired" name="BR_INST_RETIRED:NOT_TAKEN"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts the number of near branch taken instructions retired" name="BR_INST_RETIRED:NEAR_TAKEN"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:Counts the number of far branch instructions retired" name="BR_INST_RETIRED:FAR_BRANCH"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:edge level (may require counter-mask >= 1)" name="BR_INST_RETIRED:e=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:invert" name="BR_INST_RETIRED:i=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:counter-mask in range [0-255]" name="BR_INST_RETIRED:c=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:measure any thread" name="BR_INST_RETIRED:t=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:monitor only inside transactional memory region" name="BR_INST_RETIRED:intx=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="BR_INST_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:monitor at user level" name="BR_INST_RETIRED:u=0"/>
                        <eventModifier
                            description="Branch instructions retired (Precise Event), masks:monitor at kernel level" name="BR_INST_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Mispredicted branches executed"
                        eventId="96" eventName="BR_MISP_EXEC">
                        <eventModifier
                            description="Mispredicted branches executed, masks:Not taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:NONTAKEN_CONDITIONAL"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Not taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:NONTAKEN_COND"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:TAKEN_CONDITIONAL"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:TAKEN_COND"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted indirect branches excluding calls and returns" name="BR_MISP_EXEC:TAKEN_INDIRECT_JUMP_NON_CALL_RET"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted indirect branches with return mnemonic" name="BR_MISP_EXEC:TAKEN_RETURN_NEAR"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:ALL_CONDITIONAL"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:ANY_COND"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:All mispredicted indirect branches that are not calls nor returns" name="BR_MISP_EXEC:ALL_INDIRECT_JUMP_NON_CALL_RET"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Speculative and retired mispredicted macro conditional branches" name="BR_MISP_EXEC:ALL_BRANCHES"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:Taken speculative and retired mispredicted indirect calls" name="BR_MISP_EXEC:TAKEN_INDIRECT_NEAR_CALL"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:edge level (may require counter-mask >= 1)" name="BR_MISP_EXEC:e=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:invert" name="BR_MISP_EXEC:i=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:counter-mask in range [0-255]" name="BR_MISP_EXEC:c=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:measure any thread" name="BR_MISP_EXEC:t=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:monitor only inside transactional memory region" name="BR_MISP_EXEC:intx=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:do not count occurrences inside aborted transactional memory region" name="BR_MISP_EXEC:intxcp=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:monitor at user level" name="BR_MISP_EXEC:u=0"/>
                        <eventModifier
                            description="Mispredicted branches executed, masks:monitor at kernel level" name="BR_MISP_EXEC:k=0"/>
                    </event>
                    <event
                        eventDescription="Mispredicted retired branches (Precise Event)"
                        eventId="97" eventName="BR_MISP_RETIRED">
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:All mispredicted macro conditional branch instructions" name="BR_MISP_RETIRED:CONDITIONAL"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:All mispredicted macro conditional branch instructions" name="BR_MISP_RETIRED:COND"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:All mispredicted macro branches (architectural event)" name="BR_MISP_RETIRED:ALL_BRANCHES"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:number of near branch instructions retired that were mispredicted and taken" name="BR_MISP_RETIRED:NEAR_TAKEN"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:edge level (may require counter-mask >= 1)" name="BR_MISP_RETIRED:e=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:invert" name="BR_MISP_RETIRED:i=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:counter-mask in range [0-255]" name="BR_MISP_RETIRED:c=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:measure any thread" name="BR_MISP_RETIRED:t=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:monitor only inside transactional memory region" name="BR_MISP_RETIRED:intx=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="BR_MISP_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:monitor at user level" name="BR_MISP_RETIRED:u=0"/>
                        <eventModifier
                            description="Mispredicted retired branches (Precise Event), masks:monitor at kernel level" name="BR_MISP_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Unhalted core cycles at a specific ring level"
                        eventId="98" eventName="CPL_CYCLES">
                        <eventModifier
                            description="Unhalted core cycles at a specific ring level, masks:Unhalted core cycles when the thread is in ring 0" name="CPL_CYCLES:RING0"/>
                        <eventModifier
                            description="Unhalted core cycles at a specific ring level, masks:Unhalted core cycles when thread is in rings 1, 2, or 3" name="CPL_CYCLES:RING123"/>
                        <eventModifier
                            description="Unhalted core cycles at a specific ring level, masks:Number of intervals between processor halts while thread is in ring 0" name="CPL_CYCLES:RING0_TRANS"/>
                    </event>
                    <event
                        eventDescription="Count core clock cycles whenever the clock signal on the specific core is running (not halted)"
                        eventId="99" eventName="CPU_CLK_THREAD_UNHALTED">
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:Count Xclk pulses (100Mhz) when the core is unhalted" name="CPU_CLK_THREAD_UNHALTED:REF_XCLK"/>
                    </event>
                    <event
                        eventDescription="Count core clock cycles whenever the clock signal on the specific core is running (not halted)"
                        eventId="100" eventName="CPU_CLK_UNHALTED">
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:edge level (may require counter-mask >= 1)" name="CPU_CLK_UNHALTED:e=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:invert" name="CPU_CLK_UNHALTED:i=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:counter-mask in range [0-255]" name="CPU_CLK_UNHALTED:c=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:measure any thread" name="CPU_CLK_UNHALTED:t=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor only inside transactional memory region" name="CPU_CLK_UNHALTED:intx=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:do not count occurrences inside aborted transactional memory region" name="CPU_CLK_UNHALTED:intxcp=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at user level" name="CPU_CLK_UNHALTED:u=0"/>
                        <eventModifier
                            description="Count core clock cycles whenever the clock signal on the specific core is running (not halted), masks:monitor at kernel level" name="CPU_CLK_UNHALTED:k=0"/>
                    </event>
                    <event eventDescription="Stalled cycles"
                        eventId="101" eventName="CYCLE_ACTIVITY">
                        <eventModifier
                            description="Stalled cycles, masks:Cycles with pending L2 miss loads (must use with HT off only)" name="CYCLE_ACTIVITY:CYCLES_L2_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Cycles with pending memory loads" name="CYCLE_ACTIVITY:CYCLES_LDM_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Cycles with pending L1D load cache misses" name="CYCLE_ACTIVITY:CYCLES_L1D_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Executions stalls due to pending L1D load cache misses" name="CYCLE_ACTIVITY:STALLS_L1D_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Execution stalls due to L2 pending loads (must use with HT off only)" name="CYCLE_ACTIVITY:STALLS_L2_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Execution stalls due to memory subsystem" name="CYCLE_ACTIVITY:STALLS_LDM_PENDING"/>
                        <eventModifier
                            description="Stalled cycles, masks:Cycles during which no instructions were executed in the execution stage of the pipeline" name="CYCLE_ACTIVITY:CYCLES_NO_EXECUTE"/>
                    </event>
                    <event eventDescription="Data TLB load misses"
                        eventId="102" eventName="DTLB_LOAD_MISSES">
                        <eventModifier
                            description="Data TLB load misses, masks:Misses in all DTLB levels that cause page walks" name="DTLB_LOAD_MISSES:MISS_CAUSES_A_WALK"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Misses in all TLB levels causes a page walk that completes (4K)" name="DTLB_LOAD_MISSES:WALK_COMPLETED_4K"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Misses in all TLB levels causes a page walk that completes (2M/4M)" name="DTLB_LOAD_MISSES:WALK_COMPLETED_2M_4M"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Misses in all TLB levels causes a page walk of any page size that completes" name="DTLB_LOAD_MISSES:WALK_COMPLETED"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Cycles when PMH is busy with page walks" name="DTLB_LOAD_MISSES:WALK_DURATION"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Misses that miss the DTLB and hit the STLB (4K)" name="DTLB_LOAD_MISSES:STLB_HIT_4K"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Misses that miss the DTLB and hit the STLB (2M)" name="DTLB_LOAD_MISSES:STLB_HIT_2M"/>
                        <eventModifier
                            description="Data TLB load misses, masks:Number of cache load STLB hits. No page walk" name="DTLB_LOAD_MISSES:STLB_HIT"/>
                        <eventModifier
                            description="Data TLB load misses, masks:DTLB misses with low part of linear-to-physical address translation missed" name="DTLB_LOAD_MISSES:PDE_CACHE_MISS"/>
                    </event>
                    <event eventDescription="Data TLB store misses"
                        eventId="103" eventName="DTLB_STORE_MISSES">
                        <eventModifier
                            description="Data TLB store misses, masks:Misses in all DTLB levels that cause page walks" name="DTLB_STORE_MISSES:MISS_CAUSES_A_WALK"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Misses in all TLB levels causes a page walk that completes (4K)" name="DTLB_STORE_MISSES:WALK_COMPLETED_4K"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Misses in all TLB levels causes a page walk that completes (2M/4M)" name="DTLB_STORE_MISSES:WALK_COMPLETED_2M_4M"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Misses in all TLB levels causes a page walk of any page size that completes" name="DTLB_STORE_MISSES:WALK_COMPLETED"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Cycles when PMH is busy with page walks" name="DTLB_STORE_MISSES:WALK_DURATION"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Misses that miss the DTLB and hit the STLB (4K)" name="DTLB_STORE_MISSES:STLB_HIT_4K"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Misses that miss the DTLB and hit the STLB (2M)" name="DTLB_STORE_MISSES:STLB_HIT_2M"/>
                        <eventModifier
                            description="Data TLB store misses, masks:Number of cache load STLB hits. No page walk" name="DTLB_STORE_MISSES:STLB_HIT"/>
                        <eventModifier
                            description="Data TLB store misses, masks:DTLB misses with low part of linear-to-physical address translation missed" name="DTLB_STORE_MISSES:PDE_CACHE_MISS"/>
                    </event>
                    <event eventDescription="X87 floating-point assists"
                        eventId="104" eventName="FP_ASSIST">
                        <eventModifier
                            description="X87 floating-point assists, masks:Number of X87 FP assists due to output values" name="FP_ASSIST:X87_OUTPUT"/>
                        <eventModifier
                            description="X87 floating-point assists, masks:Number of X87 FP assists due to input values" name="FP_ASSIST:X87_INPUT"/>
                        <eventModifier
                            description="X87 floating-point assists, masks:Number of SIMD FP assists due to output values" name="FP_ASSIST:SIMD_OUTPUT"/>
                        <eventModifier
                            description="X87 floating-point assists, masks:Number of SIMD FP assists due to input values" name="FP_ASSIST:SIMD_INPUT"/>
                        <eventModifier
                            description="X87 floating-point assists, masks:Cycles with any input/output SEE or FP assists" name="FP_ASSIST:ANY"/>
                        <eventModifier
                            description="X87 floating-point assists, masks:Cycles with any input and output SSE or FP assist" name="FP_ASSIST:ALL"/>
                    </event>
                    <event
                        eventDescription="HLE execution (Precise Event)"
                        eventId="105" eventName="HLE_RETIRED">
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution started" name="HLE_RETIRED:START"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution successfully committed" name="HLE_RETIRED:COMMIT"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to any reasons (multiple categories may count as one) (Precise Event)" name="HLE_RETIRED:ABORTED"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to various memory events" name="HLE_RETIRED:ABORTED_MISC1"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to uncommon conditions" name="HLE_RETIRED:ABORTED_MISC2"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to HLE-unfriendly instructions" name="HLE_RETIRED:ABORTED_MISC3"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to incompatible memory type" name="HLE_RETIRED:ABORTED_MISC4"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:Number of times an HLE execution aborted due to none of the other 4 reasons (e.g., interrupt)" name="HLE_RETIRED:ABORTED_MISC5"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:edge level (may require counter-mask >= 1)" name="HLE_RETIRED:e=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:invert" name="HLE_RETIRED:i=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:counter-mask in range [0-255]" name="HLE_RETIRED:c=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:measure any thread" name="HLE_RETIRED:t=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:monitor only inside transactional memory region" name="HLE_RETIRED:intx=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="HLE_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:monitor at user level" name="HLE_RETIRED:u=0"/>
                        <eventModifier
                            description="HLE execution (Precise Event), masks:monitor at kernel level" name="HLE_RETIRED:k=0"/>
                    </event>
                    <event eventDescription="Instruction Cache"
                        eventId="106" eventName="ICACHE">
                        <eventModifier
                            description="Instruction Cache, masks:Number of Instruction Cache, Streaming Buffer and Victim Cache Misses. Includes Uncacheable accesses" name="ICACHE:MISSES"/>
                        <eventModifier
                            description="Instruction Cache, masks:Number of Instruction Cache, Streaming Buffer and Victim Cache Reads. Includes cacheable and uncacheable accesses and uncacheable fetches" name="ICACHE:HIT"/>
                        <eventModifier
                            description="Instruction Cache, masks:Number of cycles where a code-fetch stalled due to L1 instruction cache miss or an iTLB miss" name="ICACHE:IFETCH_STALL"/>
                    </event>
                    <event eventDescription="IDQ operations"
                        eventId="107" eventName="IDQ">
                        <eventModifier
                            description="IDQ operations, masks:Cycles the Instruction Decode Queue (IDQ) is empty" name="IDQ:EMPTY"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from MITE path" name="IDQ:MITE_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path" name="IDQ:DSB_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Uops initiated by Decode Stream Buffer (DSB) that are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy" name="IDQ:MS_DSB_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Uops initiated by MITE and delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy" name="IDQ:MS_MITE_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of Uops were delivered into Instruction Decode Queue (IDQ) from MS, initiated by Decode Stream Buffer (DSB) or MITE" name="IDQ:MS_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of cycles that Uops were delivered into Instruction Decode Queue (IDQ) when MS_Busy, initiated by Decode Stream Buffer (DSB) or MITE" name="IDQ:MS_UOPS_CYCLES"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of cycles that Uops were delivered into Instruction Decode Queue (IDQ) when MS_Busy, initiated by Decode Stream Buffer (DSB) or MITE" name="IDQ:MS_SWITCHES"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from MITE path" name="IDQ:MITE_UOPS_CYCLES"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles when uops are being delivered to Instruction Decode Queue (IDQ) from Decode Stream Buffer (DSB) path" name="IDQ:DSB_UOPS_CYCLES"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles when uops initiated by Decode Stream Buffer (DSB) are being delivered to Instruction Decode Queue (IDQ) while Microcode Sequencer (MS) is busy" name="IDQ:MS_DSB_UOPS_CYCLES"/>
                        <eventModifier
                            description="IDQ operations, masks:Deliveries to Instruction Decode Queue (IDQ) initiated by Decode Stream Buffer (DSB) while Microcode Sequencer (MS) is busy" name="IDQ:MS_DSB_OCCUR"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles Decode Stream Buffer (DSB) is delivering 4 Uops" name="IDQ:ALL_DSB_CYCLES_4_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles Decode Stream Buffer (DSB) is delivering any Uop" name="IDQ:ALL_DSB_CYCLES_ANY_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles MITE is delivering 4 Uops" name="IDQ:ALL_MITE_CYCLES_4_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Cycles MITE is delivering any Uop" name="IDQ:ALL_MITE_CYCLES_ANY_UOPS"/>
                        <eventModifier
                            description="IDQ operations, masks:Number of uops delivered to Instruction Decode Queue (IDQ) from any path" name="IDQ:ALL_MITE_UOPS"/>
                    </event>
                    <event eventDescription="Uops not delivered"
                        eventId="108" eventName="IDQ_UOPS_NOT_DELIVERED">
                        <eventModifier
                            description="Uops not delivered, masks:Count number of non-delivered uops to Resource Allocation Table (RAT)" name="IDQ_UOPS_NOT_DELIVERED:CORE"/>
                        <eventModifier
                            description="Uops not delivered, masks:Cycles per thread when 4 or more uops are not delivered to the Resource Allocation Table (RAT) when backend is not stalled" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_0_UOPS_DELIV_CORE"/>
                        <eventModifier
                            description="Uops not delivered, masks:Cycles per thread when 3 or more uops are not delivered to the Resource Allocation Table (RAT) when backend is not stalled" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_1_UOP_DELIV_CORE"/>
                        <eventModifier
                            description="Uops not delivered, masks:Cycles with less than 2 uops delivered by the front end" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_2_UOP_DELIV_CORE"/>
                        <eventModifier
                            description="Uops not delivered, masks:Cycles with less than 3 uops delivered by the front end" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_LE_3_UOP_DELIV_CORE"/>
                        <eventModifier
                            description="Uops not delivered, masks:Cycles Front-End (FE) delivered 4 uops or Resource Allocation Table (RAT) was stalling FE" name="IDQ_UOPS_NOT_DELIVERED:CYCLES_FE_WAS_OK"/>
                        <eventModifier
                            description="Uops not delivered, masks:edge level (may require counter-mask >= 1)" name="IDQ_UOPS_NOT_DELIVERED:e=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:invert" name="IDQ_UOPS_NOT_DELIVERED:i=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:counter-mask in range [0-255]" name="IDQ_UOPS_NOT_DELIVERED:c=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:measure any thread" name="IDQ_UOPS_NOT_DELIVERED:t=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:monitor only inside transactional memory region" name="IDQ_UOPS_NOT_DELIVERED:intx=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:do not count occurrences inside aborted transactional memory region" name="IDQ_UOPS_NOT_DELIVERED:intxcp=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:monitor at user level" name="IDQ_UOPS_NOT_DELIVERED:u=0"/>
                        <eventModifier
                            description="Uops not delivered, masks:monitor at kernel level" name="IDQ_UOPS_NOT_DELIVERED:k=0"/>
                    </event>
                    <event
                        eventDescription="Number of instructions retired (Precise Event)"
                        eventId="109" eventName="INST_RETIRED">
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:Number of instructions retired. General Counter - architectural event" name="INST_RETIRED:ANY_P"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution (Precise Event)" name="INST_RETIRED:ALL"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:Number of cycles using always true condition" name="INST_RETIRED:TOTAL_CYCLES"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:Precise instruction retired event with HW to reduce effect of PEBS shadow in IP distribution" name="INST_RETIRED:PREC_DIST"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:X87 FP operations retired with no exceptions. Also counts flows that have several X87 or flows that use X87 uops in the exception handling" name="INST_RETIRED:X87"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:edge level (may require counter-mask >= 1)" name="INST_RETIRED:e=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:invert" name="INST_RETIRED:i=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:counter-mask in range [0-255]" name="INST_RETIRED:c=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:measure any thread" name="INST_RETIRED:t=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:monitor only inside transactional memory region" name="INST_RETIRED:intx=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="INST_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:monitor at user level" name="INST_RETIRED:u=0"/>
                        <eventModifier
                            description="Number of instructions retired (Precise Event), masks:monitor at kernel level" name="INST_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Miscellaneous interruptions"
                        eventId="110" eventName="INT_MISC">
                        <eventModifier
                            description="Miscellaneous interruptions, masks:Cycles waiting for the checkpoints in Resource Allocation Table (RAT) to be recovered after Nuke due to all other cases except JEClear (e.g. whenever a ucode assist is needed like SSE exception, memory disambiguation, etc...)" name="INT_MISC:RECOVERY_CYCLES"/>
                    </event>
                    <event eventDescription="Instruction TLB"
                        eventId="111" eventName="ITLB">
                        <eventModifier
                            description="Instruction TLB, masks:Flushing of the Instruction TLB (ITLB) pages independent of page size" name="ITLB:ITLB_FLUSH"/>
                        <eventModifier
                            description="Instruction TLB, masks:edge level (may require counter-mask >= 1)" name="ITLB:e=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:invert" name="ITLB:i=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:counter-mask in range [0-255]" name="ITLB:c=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:measure any thread" name="ITLB:t=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:monitor only inside transactional memory region" name="ITLB:intx=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:do not count occurrences inside aborted transactional memory region" name="ITLB:intxcp=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:monitor at user level" name="ITLB:u=0"/>
                        <eventModifier
                            description="Instruction TLB, masks:monitor at kernel level" name="ITLB:k=0"/>
                    </event>
                    <event eventDescription="Instruction TLB misses"
                        eventId="112" eventName="ITLB_MISSES">
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses in all DTLB levels that cause page walks" name="ITLB_MISSES:MISS_CAUSES_A_WALK"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses in all TLB levels causes a page walk that completes (4K)" name="ITLB_MISSES:WALK_COMPLETED_4K"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses in all TLB levels causes a page walk that completes (2M/4M)" name="ITLB_MISSES:WALK_COMPLETED_2M_4M"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses in all TLB levels causes a page walk of any page size that completes" name="ITLB_MISSES:WALK_COMPLETED"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Cycles when PMH is busy with page walks" name="ITLB_MISSES:WALK_DURATION"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses that miss the DTLB and hit the STLB (4K)" name="ITLB_MISSES:STLB_HIT_4K"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Misses that miss the DTLB and hit the STLB (2M)" name="ITLB_MISSES:STLB_HIT_2M"/>
                        <eventModifier
                            description="Instruction TLB misses, masks:Number of cache load STLB hits. No page walk" name="ITLB_MISSES:STLB_HIT"/>
                    </event>
                    <event eventDescription="L1D cache" eventId="113" eventName="L1D">
                        <eventModifier
                            description="L1D cache, masks:L1D Data line replacements" name="L1D:REPLACEMENT"/>
                        <eventModifier
                            description="L1D cache, masks:edge level (may require counter-mask >= 1)" name="L1D:e=0"/>
                        <eventModifier
                            description="L1D cache, masks:invert" name="L1D:i=0"/>
                        <eventModifier
                            description="L1D cache, masks:counter-mask in range [0-255]" name="L1D:c=0"/>
                        <eventModifier
                            description="L1D cache, masks:measure any thread" name="L1D:t=0"/>
                        <eventModifier
                            description="L1D cache, masks:monitor only inside transactional memory region" name="L1D:intx=0"/>
                        <eventModifier
                            description="L1D cache, masks:do not count occurrences inside aborted transactional memory region" name="L1D:intxcp=0"/>
                        <eventModifier
                            description="L1D cache, masks:monitor at user level" name="L1D:u=0"/>
                        <eventModifier
                            description="L1D cache, masks:monitor at kernel level" name="L1D:k=0"/>
                    </event>
                    <event eventDescription="L1D pending misses"
                        eventId="114" eventName="L1D_PEND_MISS">
                        <eventModifier
                            description="L1D pending misses, masks:Cycles with L1D load misses outstanding" name="L1D_PEND_MISS:PENDING"/>
                        <eventModifier
                            description="L1D pending misses, masks:Cycles with L1D load misses outstanding" name="L1D_PEND_MISS:PENDING_CYCLES"/>
                        <eventModifier
                            description="L1D pending misses, masks:Number L1D miss outstanding" name="L1D_PEND_MISS:OCCURRENCES"/>
                        <eventModifier
                            description="L1D pending misses, masks:Number L1D miss outstanding" name="L1D_PEND_MISS:EDGE"/>
                        <eventModifier
                            description="L1D pending misses, masks:Number of times a demand request was blocked due to Fill Buffer (FB) unavailability" name="L1D_PEND_MISS:REQUEST_FB_FULL"/>
                        <eventModifier
                            description="L1D pending misses, masks:Number of cycles a demand request was blocked due to Fill Buffer (FB) unavailability" name="L1D_PEND_MISS:FB_FULL"/>
                        <eventModifier
                            description="L1D pending misses, masks:edge level (may require counter-mask >= 1)" name="L1D_PEND_MISS:e=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:invert" name="L1D_PEND_MISS:i=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:counter-mask in range [0-255]" name="L1D_PEND_MISS:c=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:measure any thread" name="L1D_PEND_MISS:t=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:monitor only inside transactional memory region" name="L1D_PEND_MISS:intx=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:do not count occurrences inside aborted transactional memory region" name="L1D_PEND_MISS:intxcp=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:monitor at user level" name="L1D_PEND_MISS:u=0"/>
                        <eventModifier
                            description="L1D pending misses, masks:monitor at kernel level" name="L1D_PEND_MISS:k=0"/>
                    </event>
                    <event
                        eventDescription="Demand Data Read requests to L2"
                        eventId="115" eventName="L2_DEMAND_RQSTS">
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:WB requests that hit L2 cache" name="L2_DEMAND_RQSTS:WB_HIT"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:edge level (may require counter-mask >= 1)" name="L2_DEMAND_RQSTS:e=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:invert" name="L2_DEMAND_RQSTS:i=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:counter-mask in range [0-255]" name="L2_DEMAND_RQSTS:c=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:measure any thread" name="L2_DEMAND_RQSTS:t=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:monitor only inside transactional memory region" name="L2_DEMAND_RQSTS:intx=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:do not count occurrences inside aborted transactional memory region" name="L2_DEMAND_RQSTS:intxcp=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:monitor at user level" name="L2_DEMAND_RQSTS:u=0"/>
                        <eventModifier
                            description="Demand Data Read requests to L2, masks:monitor at kernel level" name="L2_DEMAND_RQSTS:k=0"/>
                    </event>
                    <event eventDescription="L2 lines allocated"
                        eventId="116" eventName="L2_LINES_IN">
                        <eventModifier
                            description="L2 lines allocated, masks:L2 cache lines in I state filling L2" name="L2_LINES_IN:I"/>
                        <eventModifier
                            description="L2 lines allocated, masks:L2 cache lines in S state filling L2" name="L2_LINES_IN:S"/>
                        <eventModifier
                            description="L2 lines allocated, masks:L2 cache lines in E state filling L2" name="L2_LINES_IN:E"/>
                        <eventModifier
                            description="L2 lines allocated, masks:L2 cache lines filling L2" name="L2_LINES_IN:ALL"/>
                        <eventModifier
                            description="L2 lines allocated, masks:L2 cache lines filling L2" name="L2_LINES_IN:ANY"/>
                        <eventModifier
                            description="L2 lines allocated, masks:edge level (may require counter-mask >= 1)" name="L2_LINES_IN:e=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:invert" name="L2_LINES_IN:i=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:counter-mask in range [0-255]" name="L2_LINES_IN:c=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:measure any thread" name="L2_LINES_IN:t=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:monitor only inside transactional memory region" name="L2_LINES_IN:intx=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:do not count occurrences inside aborted transactional memory region" name="L2_LINES_IN:intxcp=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:monitor at user level" name="L2_LINES_IN:u=0"/>
                        <eventModifier
                            description="L2 lines allocated, masks:monitor at kernel level" name="L2_LINES_IN:k=0"/>
                    </event>
                    <event eventDescription="L2 lines evicted"
                        eventId="117" eventName="L2_LINES_OUT">
                        <eventModifier
                            description="L2 lines evicted, masks:Number of clean L2 cachelines evicted by demand" name="L2_LINES_OUT:DEMAND_CLEAN"/>
                        <eventModifier
                            description="L2 lines evicted, masks:Number of dirty L2 cachelines evicted by demand" name="L2_LINES_OUT:DEMAND_DIRTY"/>
                    </event>
                    <event eventDescription="L2 requests" eventId="118" eventName="L2_RQSTS">
                        <eventModifier
                            description="L2 requests, masks:Demand Data Read requests that miss L2 cache" name="L2_RQSTS:DEMAND_DATA_RD_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:Demand Data Read requests that hit L2 cache" name="L2_RQSTS:DEMAND_DATA_RD_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:RFO requests that miss L2 cache" name="L2_RQSTS:DEMAND_RFO_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:RFO requests that miss L2 cache" name="L2_RQSTS:RFO_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:RFO requests that hit L2 cache" name="L2_RQSTS:DEMAND_RFO_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:RFO requests that hit L2 cache" name="L2_RQSTS:RFO_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:L2 cache misses when fetching instructions" name="L2_RQSTS:CODE_RD_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:All demand requests that miss the L2 cache" name="L2_RQSTS:ALL_DEMAND_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:L2 cache hits when fetching instructions, code reads" name="L2_RQSTS:CODE_RD_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:Requests from the L2 hardware prefetchers that miss L2 cache" name="L2_RQSTS:L2_PF_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:Requests from the L1/L2/L3 hardware prefetchers or Load software prefetches that miss L2 cache" name="L2_RQSTS:PF_MISS"/>
                        <eventModifier
                            description="L2 requests, masks:All requests that miss the L2 cache" name="L2_RQSTS:MISS"/>
                        <eventModifier
                            description="L2 requests, masks:Requests from the L2 hardware prefetchers that hit L2 cache" name="L2_RQSTS:L2_PF_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:Requests from the L2 hardware prefetchers that hit L2 cache" name="L2_RQSTS:PF_HIT"/>
                        <eventModifier
                            description="L2 requests, masks:Any data read request to L2 cache" name="L2_RQSTS:ALL_DEMAND_DATA_RD"/>
                        <eventModifier
                            description="L2 requests, masks:Any data RFO request to L2 cache" name="L2_RQSTS:ALL_RFO"/>
                        <eventModifier
                            description="L2 requests, masks:Any code read request to L2 cache" name="L2_RQSTS:ALL_CODE_RD"/>
                        <eventModifier
                            description="L2 requests, masks:All demand requests to L2 cache " name="L2_RQSTS:ALL_DEMAND_REFERENCES"/>
                        <eventModifier
                            description="L2 requests, masks:Any L2 HW prefetch request to L2 cache" name="L2_RQSTS:ALL_PF"/>
                        <eventModifier
                            description="L2 requests, masks:All requests to L2 cache" name="L2_RQSTS:REFERENCES"/>
                        <eventModifier
                            description="L2 requests, masks:edge level (may require counter-mask >= 1)" name="L2_RQSTS:e=0"/>
                        <eventModifier
                            description="L2 requests, masks:invert" name="L2_RQSTS:i=0"/>
                        <eventModifier
                            description="L2 requests, masks:counter-mask in range [0-255]" name="L2_RQSTS:c=0"/>
                        <eventModifier
                            description="L2 requests, masks:measure any thread" name="L2_RQSTS:t=0"/>
                        <eventModifier
                            description="L2 requests, masks:monitor only inside transactional memory region" name="L2_RQSTS:intx=0"/>
                        <eventModifier
                            description="L2 requests, masks:do not count occurrences inside aborted transactional memory region" name="L2_RQSTS:intxcp=0"/>
                        <eventModifier
                            description="L2 requests, masks:monitor at user level" name="L2_RQSTS:u=0"/>
                        <eventModifier
                            description="L2 requests, masks:monitor at kernel level" name="L2_RQSTS:k=0"/>
                    </event>
                    <event eventDescription="L2 transactions"
                        eventId="119" eventName="L2_TRANS">
                        <eventModifier
                            description="L2 transactions, masks:Demand Data Read requests that access L2 cache" name="L2_TRANS:DEMAND_DATA_RD"/>
                        <eventModifier
                            description="L2 transactions, masks:RFO requests that access L2 cache" name="L2_TRANS:RFO"/>
                        <eventModifier
                            description="L2 transactions, masks:L2 cache accesses when fetching instructions" name="L2_TRANS:CODE_RD"/>
                        <eventModifier
                            description="L2 transactions, masks:L2 or L3 HW prefetches that access L2 cache, including rejects" name="L2_TRANS:ALL_PF"/>
                        <eventModifier
                            description="L2 transactions, masks:L1D writebacks that access L2 cache" name="L2_TRANS:L1D_WB"/>
                        <eventModifier
                            description="L2 transactions, masks:L2 fill requests that access L2 cache" name="L2_TRANS:L2_FILL"/>
                        <eventModifier
                            description="L2 transactions, masks:L2 writebacks that access L2 cache" name="L2_TRANS:L2_WB"/>
                        <eventModifier
                            description="L2 transactions, masks:Transactions accessing L2 pipe" name="L2_TRANS:ALL_REQUESTS"/>
                        <eventModifier
                            description="L2 transactions, masks:edge level (may require counter-mask >= 1)" name="L2_TRANS:e=0"/>
                        <eventModifier
                            description="L2 transactions, masks:invert" name="L2_TRANS:i=0"/>
                        <eventModifier
                            description="L2 transactions, masks:counter-mask in range [0-255]" name="L2_TRANS:c=0"/>
                        <eventModifier
                            description="L2 transactions, masks:measure any thread" name="L2_TRANS:t=0"/>
                        <eventModifier
                            description="L2 transactions, masks:monitor only inside transactional memory region" name="L2_TRANS:intx=0"/>
                        <eventModifier
                            description="L2 transactions, masks:do not count occurrences inside aborted transactional memory region" name="L2_TRANS:intxcp=0"/>
                        <eventModifier
                            description="L2 transactions, masks:monitor at user level" name="L2_TRANS:u=0"/>
                        <eventModifier
                            description="L2 transactions, masks:monitor at kernel level" name="L2_TRANS:k=0"/>
                    </event>
                    <event eventDescription="Blocking loads"
                        eventId="120" eventName="LD_BLOCKS">
                        <eventModifier
                            description="Blocking loads, masks:Counts the number of loads blocked by overlapping with store buffer entries that cannot be forwarded" name="LD_BLOCKS:STORE_FORWARD"/>
                        <eventModifier
                            description="Blocking loads, masks:number of times that split load operations are temporarily blocked because all resources for handling the split accesses are in use" name="LD_BLOCKS:NO_SR"/>
                    </event>
                    <event eventDescription="Partial load blocks"
                        eventId="121" eventName="LD_BLOCKS_PARTIAL">
                        <eventModifier
                            description="Partial load blocks, masks:False dependencies in MOB due to partial compare on address" name="LD_BLOCKS_PARTIAL:ADDRESS_ALIAS"/>
                        <eventModifier
                            description="Partial load blocks, masks:edge level (may require counter-mask >= 1)" name="LD_BLOCKS_PARTIAL:e=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:invert" name="LD_BLOCKS_PARTIAL:i=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:counter-mask in range [0-255]" name="LD_BLOCKS_PARTIAL:c=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:measure any thread" name="LD_BLOCKS_PARTIAL:t=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:monitor only inside transactional memory region" name="LD_BLOCKS_PARTIAL:intx=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:do not count occurrences inside aborted transactional memory region" name="LD_BLOCKS_PARTIAL:intxcp=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:monitor at user level" name="LD_BLOCKS_PARTIAL:u=0"/>
                        <eventModifier
                            description="Partial load blocks, masks:monitor at kernel level" name="LD_BLOCKS_PARTIAL:k=0"/>
                    </event>
                    <event eventDescription="Load dispatches"
                        eventId="122" eventName="LOAD_HIT_PRE">
                        <eventModifier
                            description="Load dispatches, masks:Non software-prefetch load dispatches that hit FB allocated for software prefetch" name="LOAD_HIT_PRE:SW_PF"/>
                        <eventModifier
                            description="Load dispatches, masks:Non software-prefetch load dispatches that hit FB allocated for hardware prefetch" name="LOAD_HIT_PRE:HW_PF"/>
                    </event>
                    <event
                        eventDescription="Locked cycles in L1D and L2"
                        eventId="123" eventName="LOCK_CYCLES">
                        <eventModifier
                            description="Locked cycles in L1D and L2, masks:Cycles in which the L1D and L2 are locked, due to a UC lock or split lock" name="LOCK_CYCLES:SPLIT_LOCK_UC_LOCK_DURATION"/>
                        <eventModifier
                            description="Locked cycles in L1D and L2, masks:cycles that the L1D is locked" name="LOCK_CYCLES:CACHE_LOCK_DURATION"/>
                    </event>
                    <event eventDescription="L3 cache" eventId="124" eventName="LONGEST_LAT_CACHE">
                        <eventModifier
                            description="L3 cache, masks:Core-originated cacheable demand requests missed LLC - architectural event" name="LONGEST_LAT_CACHE:MISS"/>
                        <eventModifier
                            description="L3 cache, masks:Core-originated cacheable demand requests that refer to LLC - architectural event" name="LONGEST_LAT_CACHE:REFERENCE"/>
                    </event>
                    <event eventDescription="Machine clear asserted"
                        eventId="125" eventName="MACHINE_CLEARS">
                        <eventModifier
                            description="Machine clear asserted, masks:Cycles there was a Nuke. Account for both thread-specific and All Thread Nukes" name="MACHINE_CLEARS:CYCLES"/>
                        <eventModifier
                            description="Machine clear asserted, masks:Number of Memory Ordering Machine Clears detected" name="MACHINE_CLEARS:MEMORY_ORDERING"/>
                        <eventModifier
                            description="Machine clear asserted, masks:Number of Self-modifying code (SMC) Machine Clears detected" name="MACHINE_CLEARS:SMC"/>
                        <eventModifier
                            description="Machine clear asserted, masks:This event counts the number of executed Intel AVX masked load operations that refer to an illegal address range with the mask bits set to 0" name="MACHINE_CLEARS:MASKMOV"/>
                        <eventModifier
                            description="Machine clear asserted, masks:Number of machine clears (nukes) of any type" name="MACHINE_CLEARS:COUNT"/>
                    </event>
                    <event
                        eventDescription="L3 hit load uops retired (Precise Event)"
                        eventId="126" eventName="MEM_LOAD_UOPS_L3_HIT_RETIRED">
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_MISS"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_HIT"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Load had HitM Response from a core on same socket (shared L3). (Non PEBS" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_HITM"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were hits in L3 without snoops required" name="MEM_LOAD_UOPS_L3_HIT_RETIRED:XSNP_NONE"/>
                    </event>
                    <event
                        eventDescription="L3 hit load uops retired (Precise Event)"
                        eventId="127" eventName="MEM_LOAD_UOPS_LLC_HIT_RETIRED">
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 hit and cross-core snoop missed in on-pkg core cache" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_MISS"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were L3 and cross-core snoop hits in on-pkg core cache" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_HIT"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Load had HitM Response from a core on same socket (shared L3). (Non PEBS" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_HITM"/>
                        <eventModifier
                            description="L3 hit load uops retired (Precise Event), masks:Retired load uops which data sources were hits in L3 without snoops required" name="MEM_LOAD_UOPS_LLC_HIT_RETIRED:XSNP_NONE"/>
                    </event>
                    <event
                        eventDescription="Load uops retired that missed the L3 (Precise Event)"
                        eventId="128" eventName="MEM_LOAD_UOPS_L3_MISS_RETIRED">
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:Retired load uops missing L3 cache but hitting local memory" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:LOCAL_DRAM"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:edge level (may require counter-mask >= 1)" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:e=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:invert" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:i=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:counter-mask in range [0-255]" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:c=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:measure any thread" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:t=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor only inside transactional memory region" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:intx=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor at user level" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:u=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor at kernel level" name="MEM_LOAD_UOPS_L3_MISS_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Load uops retired that missed the L3 (Precise Event)"
                        eventId="129" eventName="MEM_LOAD_UOPS_LLC_MISS_RETIRED">
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:Retired load uops missing L3 cache but hitting local memory" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:LOCAL_DRAM"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:edge level (may require counter-mask >= 1)" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:e=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:invert" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:i=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:counter-mask in range [0-255]" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:c=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:measure any thread" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:t=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor only inside transactional memory region" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:intx=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor at user level" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:u=0"/>
                        <eventModifier
                            description="Load uops retired that missed the L3 (Precise Event), masks:monitor at kernel level" name="MEM_LOAD_UOPS_LLC_MISS_RETIRED:k=0"/>
                    </event>
                    <event
                        eventDescription="Retired load uops (Precise Event)"
                        eventId="130" eventName="MEM_LOAD_UOPS_RETIRED">
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops with L1 cache hits as data source" name="MEM_LOAD_UOPS_RETIRED:L1_HIT"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops with L2 cache hits as data source" name="MEM_LOAD_UOPS_RETIRED:L2_HIT"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops with L3 cache hits as data source" name="MEM_LOAD_UOPS_RETIRED:L3_HIT"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops which missed the L1D" name="MEM_LOAD_UOPS_RETIRED:L1_MISS"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops which missed the L2. Unknown data source excluded" name="MEM_LOAD_UOPS_RETIRED:L2_MISS"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops which missed the L3" name="MEM_LOAD_UOPS_RETIRED:L3_MISS"/>
                        <eventModifier
                            description="Retired load uops (Precise Event), masks:Retired load uops which missed L1 but hit line fill buffer (LFB)" name="MEM_LOAD_UOPS_RETIRED:HIT_LFB"/>
                    </event>
                    <event
                        eventDescription="Memory transactions retired (Precise Event)"
                        eventId="131" eventName="MEM_TRANS_RETIRED">
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:Memory load instructions retired above programmed clocks, minimum threshold value is 3 (Precise Event and ldlat required)" name="MEM_TRANS_RETIRED:LOAD_LATENCY"/>
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:Memory load instructions retired above programmed clocks, minimum threshold value is 3 (Precise Event and ldlat required)" name="MEM_TRANS_RETIRED:LATENCY_ABOVE_THRESHOLD"/>
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:edge level (may require counter-mask >= 1)" name="MEM_TRANS_RETIRED:e=0"/>
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:invert" name="MEM_TRANS_RETIRED:i=0"/>
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:counter-mask in range [0-255]" name="MEM_TRANS_RETIRED:c=0"/>
                        <eventModifier
                            description="Memory transactions retired (Precise Event), masks:measure any thread" name="MEM_TRANS_RETIRED:t=0"/>
                    </event>
                    <event
                        eventDescription="Memory uops retired (Precise Event)"
                        eventId="132" eventName="MEM_UOPS_RETIRED">
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:Load uops with true STLB miss retired to architected path" name="MEM_UOPS_RETIRED:STLB_MISS_LOADS"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:Store uops with true STLB miss retired to architected path" name="MEM_UOPS_RETIRED:STLB_MISS_STORES"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:Load uops with locked access retired" name="MEM_UOPS_RETIRED:LOCK_LOADS"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:Line-splitted load uops retired" name="MEM_UOPS_RETIRED:SPLIT_LOADS"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:Line-splitted store uops retired" name="MEM_UOPS_RETIRED:SPLIT_STORES"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:All load uops retired" name="MEM_UOPS_RETIRED:ALL_LOADS"/>
                        <eventModifier
                            description="Memory uops retired (Precise Event), masks:All store uops retired" name="MEM_UOPS_RETIRED:ALL_STORES"/>
                    </event>
                    <event
                        eventDescription="Misaligned memory references"
                        eventId="133" eventName="MISALIGN_MEM_REF">
                        <eventModifier
                            description="Misaligned memory references, masks:Speculative cache-line split load uops dispatched to the L1D" name="MISALIGN_MEM_REF:LOADS"/>
                        <eventModifier
                            description="Misaligned memory references, masks:Speculative cache-line split store-address uops dispatched to L1D" name="MISALIGN_MEM_REF:STORES"/>
                    </event>
                    <event eventDescription="Move Elimination"
                        eventId="134" eventName="MOVE_ELIMINATION">
                        <eventModifier
                            description="Move Elimination, masks:Number of integer Move Elimination candidate uops that were eliminated" name="MOVE_ELIMINATION:INT_ELIMINATED"/>
                        <eventModifier
                            description="Move Elimination, masks:Number of SIMD Move Elimination candidate uops that were eliminated" name="MOVE_ELIMINATION:SIMD_ELIMINATED"/>
                        <eventModifier
                            description="Move Elimination, masks:Number of integer Move Elimination candidate uops that were not eliminated" name="MOVE_ELIMINATION:INT_NOT_ELIMINATED"/>
                        <eventModifier
                            description="Move Elimination, masks:Number of SIMD Move Elimination candidate uops that were not eliminated" name="MOVE_ELIMINATION:SIMD_NOT_ELIMINATED"/>
                    </event>
                    <event
                        eventDescription="Demand Data Read requests sent to uncore"
                        eventId="135" eventName="OFFCORE_REQUESTS">
                        <eventModifier
                            description="Demand Data Read requests sent to uncore, masks:Demand data read requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:DEMAND_DATA_RD"/>
                        <eventModifier
                            description="Demand Data Read requests sent to uncore, masks:Demand code read requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:DEMAND_CODE_RD"/>
                        <eventModifier
                            description="Demand Data Read requests sent to uncore, masks:Demand RFOs requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:DEMAND_RFO"/>
                        <eventModifier
                            description="Demand Data Read requests sent to uncore, masks:Data read requests sent to uncore (use with HT off only)" name="OFFCORE_REQUESTS:ALL_DATA_RD"/>
                    </event>
                    <event eventDescription="Software assist"
                        eventId="136" eventName="OTHER_ASSISTS">
                        <eventModifier
                            description="Software assist, masks:Number of transitions from AVX-256 to legacy SSE when penalty applicable" name="OTHER_ASSISTS:AVX_TO_SSE"/>
                        <eventModifier
                            description="Software assist, masks:Number of transitions from legacy SSE to AVX-256 when penalty applicable" name="OTHER_ASSISTS:SSE_TO_AVX"/>
                        <eventModifier
                            description="Software assist, masks:Number of times any microcode assist is invoked by HW upon uop writeback" name="OTHER_ASSISTS:ANY_WB_ASSIST"/>
                    </event>
                    <event
                        eventDescription="Cycles Allocation is stalled due to Resource Related reason"
                        eventId="137" eventName="RESOURCE_STALLS">
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocation is stalled due to Resource Related reason" name="RESOURCE_STALLS:ANY"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocation is stalled due to Resource Related reason" name="RESOURCE_STALLS:ALL"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:Stall cycles caused by absence of eligible entries in Reservation Station (RS)" name="RESOURCE_STALLS:RS"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:Cycles Allocator is stalled due to Store Buffer full (not including draining from synch)" name="RESOURCE_STALLS:SB"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:ROB full stall cycles" name="RESOURCE_STALLS:ROB"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:edge level (may require counter-mask >= 1)" name="RESOURCE_STALLS:e=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:invert" name="RESOURCE_STALLS:i=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:counter-mask in range [0-255]" name="RESOURCE_STALLS:c=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:measure any thread" name="RESOURCE_STALLS:t=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:monitor only inside transactional memory region" name="RESOURCE_STALLS:intx=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:do not count occurrences inside aborted transactional memory region" name="RESOURCE_STALLS:intxcp=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:monitor at user level" name="RESOURCE_STALLS:u=0"/>
                        <eventModifier
                            description="Cycles Allocation is stalled due to Resource Related reason, masks:monitor at kernel level" name="RESOURCE_STALLS:k=0"/>
                    </event>
                    <event eventDescription="ROB miscellaneous events"
                        eventId="138" eventName="ROB_MISC_EVENTS">
                        <eventModifier
                            description="ROB miscellaneous events, masks:Count each time an new Last Branch Record (LBR) is inserted" name="ROB_MISC_EVENTS:LBR_INSERTS"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:edge level (may require counter-mask >= 1)" name="ROB_MISC_EVENTS:e=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:invert" name="ROB_MISC_EVENTS:i=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:counter-mask in range [0-255]" name="ROB_MISC_EVENTS:c=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:measure any thread" name="ROB_MISC_EVENTS:t=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:monitor only inside transactional memory region" name="ROB_MISC_EVENTS:intx=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:do not count occurrences inside aborted transactional memory region" name="ROB_MISC_EVENTS:intxcp=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:monitor at user level" name="ROB_MISC_EVENTS:u=0"/>
                        <eventModifier
                            description="ROB miscellaneous events, masks:monitor at kernel level" name="ROB_MISC_EVENTS:k=0"/>
                    </event>
                    <event eventDescription="Reservation Station"
                        eventId="139" eventName="RS_EVENTS">
                        <eventModifier
                            description="Reservation Station, masks:Cycles the Reservation Station (RS) is empty for this thread" name="RS_EVENTS:EMPTY_CYCLES"/>
                        <eventModifier
                            description="Reservation Station, masks:Counts number of time the Reservation Station (RS) goes from empty to non-empty" name="RS_EVENTS:EMPTY_END"/>
                        <eventModifier
                            description="Reservation Station, masks:edge level (may require counter-mask >= 1)" name="RS_EVENTS:e=0"/>
                        <eventModifier
                            description="Reservation Station, masks:invert" name="RS_EVENTS:i=0"/>
                        <eventModifier
                            description="Reservation Station, masks:counter-mask in range [0-255]" name="RS_EVENTS:c=0"/>
                        <eventModifier
                            description="Reservation Station, masks:measure any thread" name="RS_EVENTS:t=0"/>
                        <eventModifier
                            description="Reservation Station, masks:monitor only inside transactional memory region" name="RS_EVENTS:intx=0"/>
                        <eventModifier
                            description="Reservation Station, masks:do not count occurrences inside aborted transactional memory region" name="RS_EVENTS:intxcp=0"/>
                        <eventModifier
                            description="Reservation Station, masks:monitor at user level" name="RS_EVENTS:u=0"/>
                        <eventModifier
                            description="Reservation Station, masks:monitor at kernel level" name="RS_EVENTS:k=0"/>
                    </event>
                    <event
                        eventDescription="Restricted Transaction Memory execution (Precise Event)"
                        eventId="140" eventName="RTM_RETIRED">
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution started" name="RTM_RETIRED:START"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution successfully committed" name="RTM_RETIRED:COMMIT"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to any reasons (multiple categories may count as one) (Precise Event)" name="RTM_RETIRED:ABORTED"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to various memory events" name="RTM_RETIRED:ABORTED_MISC1"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to uncommon conditions" name="RTM_RETIRED:ABORTED_MISC2"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to RTM-unfriendly instructions" name="RTM_RETIRED:ABORTED_MISC3"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to incompatible memory type" name="RTM_RETIRED:ABORTED_MISC4"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:Number of times an RTM execution aborted due to none of the other 4 reasons (e.g., interrupt)" name="RTM_RETIRED:ABORTED_MISC5"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:edge level (may require counter-mask >= 1)" name="RTM_RETIRED:e=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:invert" name="RTM_RETIRED:i=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:counter-mask in range [0-255]" name="RTM_RETIRED:c=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:measure any thread" name="RTM_RETIRED:t=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:monitor only inside transactional memory region" name="RTM_RETIRED:intx=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:do not count occurrences inside aborted transactional memory region" name="RTM_RETIRED:intxcp=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:monitor at user level" name="RTM_RETIRED:u=0"/>
                        <eventModifier
                            description="Restricted Transaction Memory execution (Precise Event), masks:monitor at kernel level" name="RTM_RETIRED:k=0"/>
                    </event>
                    <event eventDescription="TLB flushes" eventId="141" eventName="TLB_FLUSH">
                        <eventModifier
                            description="TLB flushes, masks:Count number of DTLB flushes of thread-specific entries" name="TLB_FLUSH:DTLB_THREAD"/>
                        <eventModifier
                            description="TLB flushes, masks:Count number of any STLB flushes" name="TLB_FLUSH:STLB_ANY"/>
                    </event>
                    <event eventDescription="Uops executed"
                        eventId="142" eventName="UOPS_EXECUTED">
                        <eventModifier
                            description="Uops executed, masks:Number of uops executed from any thread" name="UOPS_EXECUTED:CORE"/>
                        <eventModifier
                            description="Uops executed, masks:Number of cycles with no uops executed" name="UOPS_EXECUTED:STALL_CYCLES"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 1 uop was executed per thread" name="UOPS_EXECUTED:CYCLES_GE_1_UOP_EXEC"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 2 uops were executed per thread" name="UOPS_EXECUTED:CYCLES_GE_2_UOPS_EXEC"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 3 uops were executed per thread" name="UOPS_EXECUTED:CYCLES_GE_3_UOPS_EXEC"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 4 uops were executed per thread" name="UOPS_EXECUTED:CYCLES_GE_4_UOPS_EXEC"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 1 uop was executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_1"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 2 uops were executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_2"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 3 uops were executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_3"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where at least 4 uops were executed from any thread" name="UOPS_EXECUTED:CORE_CYCLES_GE_4"/>
                        <eventModifier
                            description="Uops executed, masks:Cycles where no uop is executed on any thread" name="UOPS_EXECUTED:CORE_CYCLES_NONE"/>
                        <eventModifier
                            description="Uops executed, masks:edge level (may require counter-mask >= 1)" name="UOPS_EXECUTED:e=0"/>
                        <eventModifier
                            description="Uops executed, masks:invert" name="UOPS_EXECUTED:i=0"/>
                        <eventModifier
                            description="Uops executed, masks:counter-mask in range [0-255]" name="UOPS_EXECUTED:c=0"/>
                        <eventModifier
                            description="Uops executed, masks:measure any thread" name="UOPS_EXECUTED:t=0"/>
                        <eventModifier
                            description="Uops executed, masks:monitor only inside transactional memory region" name="UOPS_EXECUTED:intx=0"/>
                        <eventModifier
                            description="Uops executed, masks:do not count occurrences inside aborted transactional memory region" name="UOPS_EXECUTED:intxcp=0"/>
                        <eventModifier
                            description="Uops executed, masks:monitor at user level" name="UOPS_EXECUTED:u=0"/>
                        <eventModifier
                            description="Uops executed, masks:monitor at kernel level" name="UOPS_EXECUTED:k=0"/>
                    </event>
                    <event eventDescription="Loop stream detector"
                        eventId="143" eventName="LSD">
                        <eventModifier
                            description="Loop stream detector, masks:Number of uops delivered by the Loop Stream Detector (LSD)" name="LSD:UOPS"/>
                        <eventModifier
                            description="Loop stream detector, masks:Cycles with uops delivered by the LSD but which did not come from decoder" name="LSD:ACTIVE"/>
                        <eventModifier
                            description="Loop stream detector, masks:Cycles with 4 uops delivered by the LSD but which did not come from decoder" name="LSD:CYCLES_4_UOPS"/>
                        <eventModifier
                            description="Loop stream detector, masks:edge level (may require counter-mask >= 1)" name="LSD:e=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:invert" name="LSD:i=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:counter-mask in range [0-255]" name="LSD:c=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:measure any thread" name="LSD:t=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:monitor only inside transactional memory region" name="LSD:intx=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:do not count occurrences inside aborted transactional memory region" name="LSD:intxcp=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:monitor at user level" name="LSD:u=0"/>
                        <eventModifier
                            description="Loop stream detector, masks:monitor at kernel level" name="LSD:k=0"/>
                    </event>
                    <event
                        eventDescription="Uops dispatched to specific ports"
                        eventId="144" eventName="UOPS_EXECUTED_PORT">
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 0" name="UOPS_EXECUTED_PORT:PORT_0"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 1" name="UOPS_EXECUTED_PORT:PORT_1"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 2" name="UOPS_EXECUTED_PORT:PORT_2"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 3" name="UOPS_EXECUTED_PORT:PORT_3"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 4" name="UOPS_EXECUTED_PORT:PORT_4"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 5" name="UOPS_EXECUTED_PORT:PORT_5"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 6" name="UOPS_EXECUTED_PORT:PORT_6"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 7" name="UOPS_EXECUTED_PORT:PORT_7"/>
                    </event>
                    <event
                        eventDescription="Uops dispatched to specific ports"
                        eventId="145" eventName="UOPS_DISPATCHED_PORT">
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 0" name="UOPS_DISPATCHED_PORT:PORT_0"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 1" name="UOPS_DISPATCHED_PORT:PORT_1"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 2" name="UOPS_DISPATCHED_PORT:PORT_2"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 3" name="UOPS_DISPATCHED_PORT:PORT_3"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 4" name="UOPS_DISPATCHED_PORT:PORT_4"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 5" name="UOPS_DISPATCHED_PORT:PORT_5"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 6" name="UOPS_DISPATCHED_PORT:PORT_6"/>
                        <eventModifier
                            description="Uops dispatched to specific ports, masks:Cycles which a Uop is executed on port 7" name="UOPS_DISPATCHED_PORT:PORT_7"/>
                    </event>
                    <event eventDescription="Uops issued" eventId="146" eventName="UOPS_ISSUED">
                        <eventModifier
                            description="Uops issued, masks:Number of Uops issued by the Resource Allocation Table (RAT) to the Reservation Station (RS)" name="UOPS_ISSUED:ANY"/>
                        <eventModifier
                            description="Uops issued, masks:Number of Uops issued by the Resource Allocation Table (RAT) to the Reservation Station (RS)" name="UOPS_ISSUED:ALL"/>
                        <eventModifier
                            description="Uops issued, masks:Number of flags-merge uops being allocated. Such uops adds delay" name="UOPS_ISSUED:FLAGS_MERGE"/>
                        <eventModifier
                            description="Uops issued, masks:Number of slow LEA or similar uops allocated. Such uop has 3 sources regardless if result of LEA instruction or not" name="UOPS_ISSUED:SLOW_LEA"/>
                        <eventModifier
                            description="Uops issued, masks:Number of Multiply packed/scalar single precision uops allocated" name="UOPS_ISSUED:SINGLE_MUL"/>
                        <eventModifier
                            description="Uops issued, masks:Counts the number of cycles no uops issued by this thread" name="UOPS_ISSUED:STALL_CYCLES"/>
                    </event>
                    <event
                        eventDescription="Uops retired (Precise Event)"
                        eventId="147" eventName="UOPS_RETIRED">
                        <eventModifier
                            description="Uops retired (Precise Event), masks:All uops that actually retired" name="UOPS_RETIRED:ALL"/>
                        <eventModifier
                            description="Uops retired (Precise Event), masks:All uops that actually retired" name="UOPS_RETIRED:ANY"/>
                        <eventModifier
                            description="Uops retired (Precise Event), masks:number of retirement slots used non PEBS" name="UOPS_RETIRED:RETIRE_SLOTS"/>
                        <eventModifier
                            description="Uops retired (Precise Event), masks:Cycles no executable uops retired (Precise Event)" name="UOPS_RETIRED:STALL_CYCLES"/>
                        <eventModifier
                            description="Uops retired (Precise Event), masks:Number of cycles using always true condition applied to PEBS uops retired event" name="UOPS_RETIRED:TOTAL_CYCLES"/>
                    </event>
                    <event
                        eventDescription="Transactional memory aborts"
                        eventId="148" eventName="TX_MEM">
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a transactional abort was signaled due to data conflict on a transactionally accessed address" name="TX_MEM:ABORT_CONFLICT"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a transactional abort was signaled due to data capacity limitation for transactional writes" name="TX_MEM:ABORT_CAPACITY_WRITE"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a HLE transactional execution aborted due to a non xrelease prefixed instruction writing to an elided lock in the elision buffer" name="TX_MEM:ABORT_HLE_STORE_TO_ELIDED_LOCK"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a HLE transactional execution aborted due to NoAllocatedElisionBuffer being non-zero" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_NOT_EMPTY"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a HLE transaction execution aborted due to xrelease lock not satisfying the address and value requirements in the elision buffer" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_MISMATCH"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a HLE transaction execution aborted due to an unsupported read alignment from the elision buffer" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_UNSUPPORTED_ALIGNMENT"/>
                        <eventModifier
                            description="Transactional memory aborts, masks:Number of times a HLE clock could not be elided due to ElisionBufferAvailable being zero" name="TX_MEM:ABORT_HLE_ELISION_BUFFER_FULL"/>
                    </event>
                    <event eventDescription="Transactional execution"
                        eventId="149" eventName="TX_EXEC">
                        <eventModifier
                            description="Transactional execution, masks:Number of times a class of instructions that may cause a transactional abort was executed. Since this is the count of execution, it may not always cause a transactional abort" name="TX_EXEC:MISC1"/>
                        <eventModifier
                            description="Transactional execution, masks:Number of times a class of instructions that may cause a transactional abort was executed inside a transactional region" name="TX_EXEC:MISC2"/>
                        <eventModifier
                            description="Transactional execution, masks:Number of times an instruction execution caused the supported nest count to be exceeded" name="TX_EXEC:MISC3"/>
                        <eventModifier
                            description="Transactional execution, masks:Number of times an instruction with HLE xbegin prefix was executed inside a RTM transactional region" name="TX_EXEC:MISC4"/>
                        <eventModifier
                            description="Transactional execution, masks:Number of times an instruction with HLE xacquire prefix was executed inside a RTM transactional region" name="TX_EXEC:MISC5"/>
                    </event>
                    <event
                        eventDescription="Outstanding offcore requests"
                        eventId="150" eventName="OFFCORE_REQUESTS_OUTSTANDING">
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cycles with cacheable data read transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:ALL_DATA_RD_CYCLES"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cycles with demand code reads transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_CODE_RD_CYCLES"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cycles with demand data read transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD_CYCLES"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cacheable data read transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:ALL_DATA_RD"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Code read transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_CODE_RD"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Demand data read transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cycles with at lesat 6 offcore outstanding demand data read requests in the uncore queue" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_DATA_RD_GE_6"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Outstanding RFO (store) transactions in the superQ every cycle (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_RFO"/>
                        <eventModifier
                            description="Outstanding offcore requests, masks:Cycles with outstanding RFO (store) transactions in the superQ (use with HT off only)" name="OFFCORE_REQUESTS_OUTSTANDING:DEMAND_RFO_CYCLES"/>
                    </event>
                    <event
                        eventDescription="Instruction Length Decoder stalls"
                        eventId="151" eventName="ILD_STALL">
                        <eventModifier
                            description="Instruction Length Decoder stalls, masks:Stall caused by changing prefix length of the instruction" name="ILD_STALL:LCP"/>
                        <eventModifier
                            description="Instruction Length Decoder stalls, masks:Stall cycles due to IQ full" name="ILD_STALL:IQ_FULL"/>
                    </event>
                    <event eventDescription="Page walker loads"
                        eventId="152" eventName="PAGE_WALKER_LOADS">
                        <eventModifier
                            description="Page walker loads, masks:Number of DTLB page walker loads that hit in the L1D and line fill buffer" name="PAGE_WALKER_LOADS:DTLB_L1"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of ITLB page walker loads that hit in the L1I and line fill buffer" name="PAGE_WALKER_LOADS:ITLB_L1"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of DTLB page walker loads that hit in the L2" name="PAGE_WALKER_LOADS:DTLB_L2"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of ITLB page walker loads that hit in the L2" name="PAGE_WALKER_LOADS:ITLB_L2"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of DTLB page walker loads that hit in the L3" name="PAGE_WALKER_LOADS:DTLB_L3"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of ITLB page walker loads that hit in the L3" name="PAGE_WALKER_LOADS:ITLB_L3"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit in the L1D and line fill buffer" name="PAGE_WALKER_LOADS:EPT_DTLB_L1"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit in the L1D and line fill buffer" name="PAGE_WALKER_LOADS:EPT_ITLB_L1"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit in the L2" name="PAGE_WALKER_LOADS:EPT_DTLB_L2"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit in the L2" name="PAGE_WALKER_LOADS:EPT_ITLB_L2"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit in the L3" name="PAGE_WALKER_LOADS:EPT_DTLB_L3"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit in the L3" name="PAGE_WALKER_LOADS:EPT_ITLB_L3"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of DTLB page walker loads that hit memory" name="PAGE_WALKER_LOADS:DTLB_MEMORY"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of ITLB page walker loads that hit memory" name="PAGE_WALKER_LOADS:ITLB_MEMORY"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the DTLB that hit memory" name="PAGE_WALKER_LOADS:EPT_DTLB_MEMORY"/>
                        <eventModifier
                            description="Page walker loads, masks:Number of extended page table walks from the ITLB that hit memory" name="PAGE_WALKER_LOADS:EPT_ITLB_MEMORY"/>
                    </event>
                    <event
                        eventDescription="Number of DSB to MITE switches"
                        eventId="153" eventName="DSB2MITE_SWITCHES">
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:Number of DSB to MITE switch true penalty cycles" name="DSB2MITE_SWITCHES:PENALTY_CYCLES"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:edge level (may require counter-mask >= 1)" name="DSB2MITE_SWITCHES:e=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:invert" name="DSB2MITE_SWITCHES:i=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:counter-mask in range [0-255]" name="DSB2MITE_SWITCHES:c=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:measure any thread" name="DSB2MITE_SWITCHES:t=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:monitor only inside transactional memory region" name="DSB2MITE_SWITCHES:intx=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:do not count occurrences inside aborted transactional memory region" name="DSB2MITE_SWITCHES:intxcp=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:monitor at user level" name="DSB2MITE_SWITCHES:u=0"/>
                        <eventModifier
                            description="Number of DSB to MITE switches, masks:monitor at kernel level" name="DSB2MITE_SWITCHES:k=0"/>
                    </event>
                    <event eventDescription="Extended page table"
                        eventId="154" eventName="EPT">
                        <eventModifier
                            description="Extended page table, masks:Cycles for an extended page table walk" name="EPT:WALK_CYCLES"/>
                        <eventModifier
                            description="Extended page table, masks:edge level (may require counter-mask >= 1)" name="EPT:e=0"/>
                        <eventModifier
                            description="Extended page table, masks:invert" name="EPT:i=0"/>
                        <eventModifier
                            description="Extended page table, masks:counter-mask in range [0-255]" name="EPT:c=0"/>
                        <eventModifier
                            description="Extended page table, masks:measure any thread" name="EPT:t=0"/>
                        <eventModifier
                            description="Extended page table, masks:monitor only inside transactional memory region" name="EPT:intx=0"/>
                        <eventModifier
                            description="Extended page table, masks:do not count occurrences inside aborted transactional memory region" name="EPT:intxcp=0"/>
                        <eventModifier
                            description="Extended page table, masks:monitor at user level" name="EPT:u=0"/>
                        <eventModifier
                            description="Extended page table, masks:monitor at kernel level" name="EPT:k=0"/>
                    </event>
                    <event
                        eventDescription="Counts arithmetic multiply operations"
                        eventId="155" eventName="ARITH">
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:Number of uops executed by divider" name="ARITH:DIVIDER_UOPS"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:edge level (may require counter-mask >= 1)" name="ARITH:e=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:invert" name="ARITH:i=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:counter-mask in range [0-255]" name="ARITH:c=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:measure any thread" name="ARITH:t=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:monitor only inside transactional memory region" name="ARITH:intx=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:do not count occurrences inside aborted transactional memory region" name="ARITH:intxcp=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:monitor at user level" name="ARITH:u=0"/>
                        <eventModifier
                            description="Counts arithmetic multiply operations, masks:monitor at kernel level" name="ARITH:k=0"/>
                    </event>
                    <event eventDescription="Counts AVX instructions"
                        eventId="156" eventName="AVX">
                        <eventModifier
                            description="Counts AVX instructions, masks:Approximate counts of AVX and AVX2 256-bit instructions, including non-arithmetic instructions, loads, and stores. May count non-AVX instructions using 256-bit operations" name="AVX:ALL"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:edge level (may require counter-mask >= 1)" name="AVX:e=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:invert" name="AVX:i=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:counter-mask in range [0-255]" name="AVX:c=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:measure any thread" name="AVX:t=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:monitor only inside transactional memory region" name="AVX:intx=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:do not count occurrences inside aborted transactional memory region" name="AVX:intxcp=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:monitor at user level" name="AVX:u=0"/>
                        <eventModifier
                            description="Counts AVX instructions, masks:monitor at kernel level" name="AVX:k=0"/>
                    </event>
                    <event eventDescription="SuperQueue miscellaneous"
                        eventId="157" eventName="SQ_MISC">
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:Number of split locks in the super queue (SQ)" name="SQ_MISC:SPLIT_LOCK"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:edge level (may require counter-mask >= 1)" name="SQ_MISC:e=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:invert" name="SQ_MISC:i=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:counter-mask in range [0-255]" name="SQ_MISC:c=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:measure any thread" name="SQ_MISC:t=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:monitor only inside transactional memory region" name="SQ_MISC:intx=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:do not count occurrences inside aborted transactional memory region" name="SQ_MISC:intxcp=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:monitor at user level" name="SQ_MISC:u=0"/>
                        <eventModifier
                            description="SuperQueue miscellaneous, masks:monitor at kernel level" name="SQ_MISC:k=0"/>
                    </event>
                    <event eventDescription="Offcore reqest buffer"
                        eventId="158" eventName="OFFCORE_REQUESTS_BUFFER">
                        <eventModifier
                            description="Offcore reqest buffer, masks:Number of cycles the offcore requests buffer is full" name="OFFCORE_REQUESTS_BUFFER:SQ_FULL"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:edge level (may require counter-mask >= 1)" name="OFFCORE_REQUESTS_BUFFER:e=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:invert" name="OFFCORE_REQUESTS_BUFFER:i=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:counter-mask in range [0-255]" name="OFFCORE_REQUESTS_BUFFER:c=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:measure any thread" name="OFFCORE_REQUESTS_BUFFER:t=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:monitor only inside transactional memory region" name="OFFCORE_REQUESTS_BUFFER:intx=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:do not count occurrences inside aborted transactional memory region" name="OFFCORE_REQUESTS_BUFFER:intxcp=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:monitor at user level" name="OFFCORE_REQUESTS_BUFFER:u=0"/>
                        <eventModifier
                            description="Offcore reqest buffer, masks:monitor at kernel level" name="OFFCORE_REQUESTS_BUFFER:k=0"/>
                    </event>
                    <event
                        eventDescription="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop)"
                        eventId="159" eventName="OFFCORE_RESPONSE_0">
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch data reads of full and partial cachelines as well as demand data page table entry cacheline reads. Does not count L2 data read prefetches or instruction fetches" name="OFFCORE_RESPONSE_0:DMND_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch reads for ownership (RFO) requests generated by a write to data cacheline. Does not count L2 RFO prefetches" name="OFFCORE_RESPONSE_0:DMND_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_0:DMND_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_0:DMND_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of writebacks (modified to exclusive) transactions" name="OFFCORE_RESPONSE_0:WB"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of data cacheline reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_0:PF_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for loads" name="OFFCORE_RESPONSE_0:PF_L3_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetcher" name="OFFCORE_RESPONSE_0:PF_L3_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_0:PF_L3_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_0:PF_L3_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_0:SPLIT_LOCK_UC_LOCK"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_0:BUS_LOCKS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of streaming store requests" name="OFFCORE_RESPONSE_0:STRM_ST"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: counts one of the following transaction types, including L3 invalidate, I/O, full or partial writes, WC or non-temporal stores, CLFLUSH, Fences, lock, unlock, split lock" name="OFFCORE_RESPONSE_0:OTHER"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | DMND_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_0:ANY_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_0:ANY_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of all request umasks" name="OFFCORE_RESPONSE_0:ANY_REQUEST"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_DATA | PF_DATA_RD | PF_L3_DATA_RD" name="OFFCORE_RESPONSE_0:ANY_DATA"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_RFO | PF_RFO | PF_L3_RFO" name="OFFCORE_RESPONSE_0:ANY_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Response: count any response type" name="OFFCORE_RESPONSE_0:ANY_RESPONSE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts number of times supplier information is not available" name="OFFCORE_RESPONSE_0:NO_SUPP"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in M-state (initial lookup)" name="OFFCORE_RESPONSE_0:L3_HITM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in E-state" name="OFFCORE_RESPONSE_0:L3_HITE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in S-state" name="OFFCORE_RESPONSE_0:L3_HITS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in any state (M, E, S)" name="OFFCORE_RESPONSE_0:L3_HIT"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_0:L3_MISS_LOCAL"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_0:L3_MISS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 supplier hit" name="OFFCORE_RESPONSE_0:SPL_HIT"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times no snoop-related information is available" name="OFFCORE_RESPONSE_0:SNP_NONE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts the number of times no snoop was needed to satisfy the request" name="OFFCORE_RESPONSE_0:SNP_NOT_NEEDED"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it missed all snooped caches" name="OFFCORE_RESPONSE_0:SNP_MISS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hit in at leas one snooped cache" name="OFFCORE_RESPONSE_0:SNP_NO_FWD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and data was forwarded from a remote socket" name="OFFCORE_RESPONSE_0:SNP_FWD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache" name="OFFCORE_RESPONSE_0:SNP_HITM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop:  counts number of times target was a non-DRAM system address. This includes MMIO transactions" name="OFFCORE_RESPONSE_0:SNP_NON_DRAM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: any snoop reason" name="OFFCORE_RESPONSE_0:SNP_ANY"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:edge level (may require counter-mask >= 1)" name="OFFCORE_RESPONSE_0:e=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:invert" name="OFFCORE_RESPONSE_0:i=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:counter-mask in range [0-255]" name="OFFCORE_RESPONSE_0:c=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:measure any thread" name="OFFCORE_RESPONSE_0:t=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor only inside transactional memory region" name="OFFCORE_RESPONSE_0:intx=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:do not count occurrences inside aborted transactional memory region" name="OFFCORE_RESPONSE_0:intxcp=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at user level" name="OFFCORE_RESPONSE_0:u=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at kernel level" name="OFFCORE_RESPONSE_0:k=0"/>
                    </event>
                    <event
                        eventDescription="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop)"
                        eventId="160" eventName="OFFCORE_RESPONSE_1">
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch data reads of full and partial cachelines as well as demand data page table entry cacheline reads. Does not count L2 data read prefetches or instruction fetches" name="OFFCORE_RESPONSE_1:DMND_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch reads for ownership (RFO) requests generated by a write to data cacheline. Does not count L2 RFO prefetches" name="OFFCORE_RESPONSE_1:DMND_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_1:DMND_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of demand and DCU prefetch instruction cacheline reads. Does not count L2 code read prefetches" name="OFFCORE_RESPONSE_1:DMND_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of writebacks (modified to exclusive) transactions" name="OFFCORE_RESPONSE_1:WB"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of data cacheline reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of code reads generated by L2 prefetchers" name="OFFCORE_RESPONSE_1:PF_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for loads" name="OFFCORE_RESPONSE_1:PF_L3_DATA_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of RFO requests generated by L2 prefetcher" name="OFFCORE_RESPONSE_1:PF_L3_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_1:PF_L3_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of L2 prefetcher requests to L3 for instruction fetches" name="OFFCORE_RESPONSE_1:PF_L3_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_1:SPLIT_LOCK_UC_LOCK"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of bus lock and split lock requests" name="OFFCORE_RESPONSE_1:BUS_LOCKS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: number of streaming store requests" name="OFFCORE_RESPONSE_1:STRM_ST"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: counts one of the following transaction types, including L3 invalidate, I/O, full or partial writes, WC or non-temporal stores, CLFLUSH, Fences, lock, unlock, split lock" name="OFFCORE_RESPONSE_1:OTHER"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | DMND_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_1:ANY_CODE_RD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of PF_CODE_RD | PF_L3_CODE_RD" name="OFFCORE_RESPONSE_1:ANY_IFETCH"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of all request umasks" name="OFFCORE_RESPONSE_1:ANY_REQUEST"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_DATA | PF_DATA_RD | PF_L3_DATA_RD" name="OFFCORE_RESPONSE_1:ANY_DATA"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Request: combination of DMND_RFO | PF_RFO | PF_L3_RFO" name="OFFCORE_RESPONSE_1:ANY_RFO"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Response: count any response type" name="OFFCORE_RESPONSE_1:ANY_RESPONSE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts number of times supplier information is not available" name="OFFCORE_RESPONSE_1:NO_SUPP"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in M-state (initial lookup)" name="OFFCORE_RESPONSE_1:L3_HITM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in E-state" name="OFFCORE_RESPONSE_1:L3_HITE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in S-state" name="OFFCORE_RESPONSE_1:L3_HITS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 hits in any state (M, E, S)" name="OFFCORE_RESPONSE_1:L3_HIT"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_1:L3_MISS_LOCAL"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 misses to local DRAM" name="OFFCORE_RESPONSE_1:L3_MISS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Supplier: counts L3 supplier hit" name="OFFCORE_RESPONSE_1:SPL_HIT"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times no snoop-related information is available" name="OFFCORE_RESPONSE_1:SNP_NONE"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts the number of times no snoop was needed to satisfy the request" name="OFFCORE_RESPONSE_1:SNP_NOT_NEEDED"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it missed all snooped caches" name="OFFCORE_RESPONSE_1:SNP_MISS"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hit in at leas one snooped cache" name="OFFCORE_RESPONSE_1:SNP_NO_FWD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and data was forwarded from a remote socket" name="OFFCORE_RESPONSE_1:SNP_FWD"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: counts number of times a snoop was needed and it hitM-ed in local or remote cache" name="OFFCORE_RESPONSE_1:SNP_HITM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop:  counts number of times target was a non-DRAM system address. This includes MMIO transactions" name="OFFCORE_RESPONSE_1:SNP_NON_DRAM"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:Snoop: any snoop reason" name="OFFCORE_RESPONSE_1:SNP_ANY"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:edge level (may require counter-mask >= 1)" name="OFFCORE_RESPONSE_1:e=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:invert" name="OFFCORE_RESPONSE_1:i=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:counter-mask in range [0-255]" name="OFFCORE_RESPONSE_1:c=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:measure any thread" name="OFFCORE_RESPONSE_1:t=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor only inside transactional memory region" name="OFFCORE_RESPONSE_1:intx=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:do not count occurrences inside aborted transactional memory region" name="OFFCORE_RESPONSE_1:intxcp=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at user level" name="OFFCORE_RESPONSE_1:u=0"/>
                        <eventModifier
                            description="Offcore response event (must provide at least one request type and either any_response or any combination of supplier + snoop), masks:monitor at kernel level" name="OFFCORE_RESPONSE_1:k=0"/>
                    </event>
                    <event
                        eventDescription="perf_events raw event syntax: r[0-9a-fA-F]+"
                        eventId="161" eventName="perf_raw::r0000">
                        <eventModifier
                            description="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at user level" name="perf_raw::r0000:u=0"/>
                        <eventModifier
                            description="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at kernel level" name="perf_raw::r0000:k=0"/>
                        <eventModifier
                            description="perf_events raw event syntax: r[0-9a-fA-F]+, masks:monitor at hypervisor level" name="perf_raw::r0000:h=0"/>
                    </event>
                </eventSet>
                <eventSet type="PRESET">
                    <event eventDescription="Level 1 data cache misses"
                        eventId="0" eventName="PAPI_L1_DCM"/>
                    <event
                        eventDescription="Level 1 instruction cache misses"
                        eventId="1" eventName="PAPI_L1_ICM"/>
                    <event eventDescription="Level 2 data cache misses"
                        eventId="2" eventName="PAPI_L2_DCM"/>
                    <event
                        eventDescription="Level 2 instruction cache misses"
                        eventId="3" eventName="PAPI_L2_ICM"/>
                    <event eventDescription="Level 1 cache misses"
                        eventId="6" eventName="PAPI_L1_TCM"/>
                    <event eventDescription="Level 2 cache misses"
                        eventId="7" eventName="PAPI_L2_TCM"/>
                    <event eventDescription="Level 3 cache misses"
                        eventId="8" eventName="PAPI_L3_TCM"/>
                    <event eventDescription="Requests for a snoop"
                        eventId="9" eventName="PAPI_CA_SNP"/>
                    <event
                        eventDescription="Requests for exclusive access to shared cache line"
                        eventId="10" eventName="PAPI_CA_SHR"/>
                    <event
                        eventDescription="Requests for exclusive access to clean cache line"
                        eventId="11" eventName="PAPI_CA_CLN"/>
                    <event
                        eventDescription="Requests for cache line invalidation"
                        eventId="12" eventName="PAPI_CA_INV"/>
                    <event
                        eventDescription="Requests for cache line intervention"
                        eventId="13" eventName="PAPI_CA_ITV"/>
                    <event eventDescription="Level 3 load misses"
                        eventId="14" eventName="PAPI_L3_LDM"/>
                    <event
                        eventDescription="Data translation lookaside buffer misses"
                        eventId="20" eventName="PAPI_TLB_DM"/>
                    <event
                        eventDescription="Instruction translation lookaside buffer misses"
                        eventId="21" eventName="PAPI_TLB_IM"/>
                    <event eventDescription="Level 1 load misses"
                        eventId="23" eventName="PAPI_L1_LDM"/>
                    <event eventDescription="Level 1 store misses"
                        eventId="24" eventName="PAPI_L1_STM"/>
                    <event eventDescription="Level 2 load misses"
                        eventId="25" eventName="PAPI_L2_LDM"/>
                    <event eventDescription="Level 2 store misses"
                        eventId="26" eventName="PAPI_L2_STM"/>
                    <event eventDescription="Data prefetch cache misses"
                        eventId="28" eventName="PAPI_PRF_DM"/>
                    <event
                        eventDescription="Cycles Stalled Waiting for memory writes"
                        eventId="36" eventName="PAPI_MEM_WCY"/>
                    <event
                        eventDescription="Cycles with no instruction issue"
                        eventId="37" eventName="PAPI_STL_ICY"/>
                    <event
                        eventDescription="Cycles with maximum instruction issue"
                        eventId="38" eventName="PAPI_FUL_ICY"/>
                    <event
                        eventDescription="Cycles with no instructions completed"
                        eventId="39" eventName="PAPI_STL_CCY"/>
                    <event
                        eventDescription="Cycles with maximum instructions completed"
                        eventId="40" eventName="PAPI_FUL_CCY"/>
                    <event
                        eventDescription="Unconditional branch instructions"
                        eventId="42" eventName="PAPI_BR_UCN"/>
                    <event
                        eventDescription="Conditional branch instructions"
                        eventId="43" eventName="PAPI_BR_CN"/>
                    <event
                        eventDescription="Conditional branch instructions taken"
                        eventId="44" eventName="PAPI_BR_TKN"/>
                    <event
                        eventDescription="Conditional branch instructions not taken"
                        eventId="45" eventName="PAPI_BR_NTK"/>
                    <event
                        eventDescription="Conditional branch instructions mispredicted"
                        eventId="46" eventName="PAPI_BR_MSP"/>
                    <event
                        eventDescription="Conditional branch instructions correctly predicted"
                        eventId="47" eventName="PAPI_BR_PRC"/>
                    <event eventDescription="Instructions completed"
                        eventId="50" eventName="PAPI_TOT_INS"/>
                    <event eventDescription="Load instructions"
                        eventId="53" eventName="PAPI_LD_INS"/>
                    <event eventDescription="Store instructions"
                        eventId="54" eventName="PAPI_SR_INS"/>
                    <event eventDescription="Branch instructions"
                        eventId="55" eventName="PAPI_BR_INS"/>
                    <event
                        eventDescription="Cycles stalled on any resource"
                        eventId="57" eventName="PAPI_RES_STL"/>
                    <event eventDescription="Total cycles" eventId="59" eventName="PAPI_TOT_CYC"/>
                    <event
                        eventDescription="Load/store instructions completed"
                        eventId="60" eventName="PAPI_LST_INS"/>
                    <event
                        eventDescription="Level 2 data cache accesses"
                        eventId="65" eventName="PAPI_L2_DCA"/>
                    <event
                        eventDescription="Level 3 data cache accesses"
                        eventId="66" eventName="PAPI_L3_DCA"/>
                    <event eventDescription="Level 2 data cache reads"
                        eventId="68" eventName="PAPI_L2_DCR"/>
                    <event eventDescription="Level 3 data cache reads"
                        eventId="69" eventName="PAPI_L3_DCR"/>
                    <event eventDescription="Level 2 data cache writes"
                        eventId="71" eventName="PAPI_L2_DCW"/>
                    <event eventDescription="Level 3 data cache writes"
                        eventId="72" eventName="PAPI_L3_DCW"/>
                    <event
                        eventDescription="Level 2 instruction cache hits"
                        eventId="74" eventName="PAPI_L2_ICH"/>
                    <event
                        eventDescription="Level 2 instruction cache accesses"
                        eventId="77" eventName="PAPI_L2_ICA"/>
                    <event
                        eventDescription="Level 3 instruction cache accesses"
                        eventId="78" eventName="PAPI_L3_ICA"/>
                    <event
                        eventDescription="Level 2 instruction cache reads"
                        eventId="80" eventName="PAPI_L2_ICR"/>
                    <event
                        eventDescription="Level 3 instruction cache reads"
                        eventId="81" eventName="PAPI_L3_ICR"/>
                    <event
                        eventDescription="Level 2 total cache accesses"
                        eventId="89" eventName="PAPI_L2_TCA"/>
                    <event
                        eventDescription="Level 3 total cache accesses"
                        eventId="90" eventName="PAPI_L3_TCA"/>
                    <event eventDescription="Level 2 total cache reads"
                        eventId="92" eventName="PAPI_L2_TCR"/>
                    <event eventDescription="Level 3 total cache reads"
                        eventId="93" eventName="PAPI_L3_TCR"/>
                    <event eventDescription="Level 2 total cache writes"
                        eventId="95" eventName="PAPI_L2_TCW"/>
                    <event eventDescription="Level 3 total cache writes"
                        eventId="96" eventName="PAPI_L3_TCW"/>
                    <event eventDescription="Reference clock cycles"
                        eventId="107" eventName="PAPI_REF_CYC"/>
                </eventSet>
            </PapiComponent>
            <event
                eventDescription="Event to time through PAPI_get_time()"
                eventId="9999" eventName="Timing"/>
            <event eventDescription="Level 1 data cache misses"
                eventId="0" eventName="PAPI_L1_DCM"/>
            <event eventDescription="Level 1 instruction cache misses"
                eventId="1" eventName="PAPI_L1_ICM"/>
            <event eventDescription="Level 2 instruction cache misses"
                eventId="3" eventName="PAPI_L2_ICM"/>
            <event eventDescription="Level 2 cache misses" eventId="7" eventName="PAPI_L2_TCM"/>
            <event eventDescription="Level 2 data cache misses"
                eventId="2" eventName="PAPI_L2_DCM"/>
            <event eventDescription="Level 1 cache misses" eventId="6" eventName="PAPI_L1_TCM"/>
        </papifyConfig>
    </papifyConfigs>
</scenario>
